{
	"id": "76ec21ca7332b7a135b9224a62140e8a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ep4/example.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7.0;\r\n\r\ncontract Example {\r\n    function etherUnitExample() public pure {\r\n\r\n        // wei是貨幣中的最小單位\r\n        require(1 wei == 1, \"1 wei not equal to 1\");\r\n\r\n        // 1 gwei is equal to 10^9 wei\r\n        assert(1 gwei == 1e9);\r\n\r\n        // 1 ether is equal to 10^18 wei\r\n        assert(1 ether == 1e18);\r\n    }\r\n\r\n    function timeUnitExample() public pure {\r\n        // 1秒\r\n        assert(1 seconds == 1);\r\n\r\n        // 1分鐘 = 60秒\r\n        assert(1 minutes == 60 seconds);\r\n\r\n        // 1小時 = 60分鐘\r\n        assert(1 hours == 60 minutes);\r\n\r\n        // 1天=24小時\r\n        assert(1 days == 24 hours);\r\n\r\n        // 1周 = 7天\r\n        assert(1 weeks == 7 days);\r\n    }\r\n\r\n    function validate(uint start, uint secondsAfter) public view returns(bool) {\r\n        bool isValidated = false;\r\n\r\n\t\t/// 區塊的時間戳記至少在3秒以前, 才算有效。\r\n        /// 注意: 此為範例，真實合約請不要使用block.timestamp來進行檢驗，具有弱點風險。\r\n        if (block.timestamp >= start + secondsAfter * 3 seconds) {\r\n            isValidated = true;\r\n        }\r\n        \r\n        return isValidated;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Ep4/example.sol": {
				"Example": {
					"abi": [
						{
							"inputs": [],
							"name": "etherUnitExample",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeUnitExample",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "secondsAfter",
									"type": "uint256"
								}
							],
							"name": "validate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ep4/example.sol\":62:1227  contract Example {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ep4/example.sol\":62:1227  contract Example {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x19730b44\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x24475f4c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97e82183\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ep4/example.sol\":770:1224  function validate(uint start, uint secondsAfter) public view returns(bool) {\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ep4/example.sol\":393:762  function timeUnitExample() public pure {\r... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Ep4/example.sol\":86:385  function etherUnitExample() public pure {\r... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"Ep4/example.sol\":770:1224  function validate(uint start, uint secondsAfter) public view returns(bool) {\r... */\n    tag_9:\n        /* \"Ep4/example.sol\":839:843  bool */\n      0x00\n        /* \"Ep4/example.sol\":856:872  bool isValidated */\n      dup1\n        /* \"Ep4/example.sol\":875:880  false */\n      0x00\n        /* \"Ep4/example.sol\":856:880  bool isValidated = false */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":1122:1131  3 seconds */\n      0x03\n        /* \"Ep4/example.sol\":1107:1119  secondsAfter */\n      dup4\n        /* \"Ep4/example.sol\":1107:1131  secondsAfter * 3 seconds */\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"Ep4/example.sol\":1099:1104  start */\n      dup5\n        /* \"Ep4/example.sol\":1099:1131  start + secondsAfter * 3 seconds */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"Ep4/example.sol\":1080:1095  block.timestamp */\n      timestamp\n        /* \"Ep4/example.sol\":1080:1131  block.timestamp >= start + secondsAfter * 3 seconds */\n      lt\n        /* \"Ep4/example.sol\":1076:1178  if (block.timestamp >= start + secondsAfter * 3 seconds) {\r... */\n      tag_21\n      jumpi\n        /* \"Ep4/example.sol\":1162:1166  true */\n      0x01\n        /* \"Ep4/example.sol\":1148:1166  isValidated = true */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":1076:1178  if (block.timestamp >= start + secondsAfter * 3 seconds) {\r... */\n    tag_21:\n        /* \"Ep4/example.sol\":1205:1216  isValidated */\n      dup1\n        /* \"Ep4/example.sol\":1198:1216  return isValidated */\n      swap2\n      pop\n      pop\n        /* \"Ep4/example.sol\":770:1224  function validate(uint start, uint secondsAfter) public view returns(bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ep4/example.sol\":393:762  function timeUnitExample() public pure {\r... */\n    tag_13:\n        /* \"Ep4/example.sol\":480:481  1 */\n      0x01\n        /* \"Ep4/example.sol\":467:476  1 seconds */\n      dup1\n        /* \"Ep4/example.sol\":467:481  1 seconds == 1 */\n      eq\n        /* \"Ep4/example.sol\":460:482  assert(1 seconds == 1) */\n      tag_23\n      jumpi\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n    tag_23:\n        /* \"Ep4/example.sol\":543:553  60 seconds */\n      0x3c\n        /* \"Ep4/example.sol\":530:539  1 minutes */\n      dup1\n        /* \"Ep4/example.sol\":530:553  1 minutes == 60 seconds */\n      eq\n        /* \"Ep4/example.sol\":523:554  assert(1 minutes == 60 seconds) */\n      tag_26\n      jumpi\n      tag_27\n      tag_25\n      jump\t// in\n    tag_27:\n    tag_26:\n        /* \"Ep4/example.sol\":616:626  60 minutes */\n      0x0e10\n        /* \"Ep4/example.sol\":605:612  1 hours */\n      dup1\n        /* \"Ep4/example.sol\":605:626  1 hours == 60 minutes */\n      eq\n        /* \"Ep4/example.sol\":598:627  assert(1 hours == 60 minutes) */\n      tag_28\n      jumpi\n      tag_29\n      tag_25\n      jump\t// in\n    tag_29:\n    tag_28:\n        /* \"Ep4/example.sol\":683:691  24 hours */\n      0x015180\n        /* \"Ep4/example.sol\":673:679  1 days */\n      dup1\n        /* \"Ep4/example.sol\":673:691  1 days == 24 hours */\n      eq\n        /* \"Ep4/example.sol\":666:692  assert(1 days == 24 hours) */\n      tag_30\n      jumpi\n      tag_31\n      tag_25\n      jump\t// in\n    tag_31:\n    tag_30:\n        /* \"Ep4/example.sol\":747:753  7 days */\n      0x093a80\n        /* \"Ep4/example.sol\":736:743  1 weeks */\n      dup1\n        /* \"Ep4/example.sol\":736:753  1 weeks == 7 days */\n      eq\n        /* \"Ep4/example.sol\":729:754  assert(1 weeks == 7 days) */\n      tag_32\n      jumpi\n      tag_33\n      tag_25\n      jump\t// in\n    tag_33:\n    tag_32:\n        /* \"Ep4/example.sol\":393:762  function timeUnitExample() public pure {\r... */\n      jump\t// out\n        /* \"Ep4/example.sol\":86:385  function etherUnitExample() public pure {\r... */\n    tag_15:\n        /* \"Ep4/example.sol\":199:200  1 */\n      0x01\n        /* \"Ep4/example.sol\":190:195  1 wei */\n      dup1\n        /* \"Ep4/example.sol\":190:200  1 wei == 1 */\n      eq\n        /* \"Ep4/example.sol\":182:225  require(1 wei == 1, \"1 wei not equal to 1\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"Ep4/example.sol\":295:298  1e9 */\n      0x3b9aca00\n        /* \"Ep4/example.sol\":285:291  1 gwei */\n      dup1\n        /* \"Ep4/example.sol\":285:298  1 gwei == 1e9 */\n      eq\n        /* \"Ep4/example.sol\":278:299  assert(1 gwei == 1e9) */\n      tag_38\n      jumpi\n      tag_39\n      tag_25\n      jump\t// in\n    tag_39:\n    tag_38:\n        /* \"Ep4/example.sol\":372:376  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Ep4/example.sol\":361:368  1 ether */\n      dup1\n        /* \"Ep4/example.sol\":361:376  1 ether == 1e18 */\n      eq\n        /* \"Ep4/example.sol\":354:377  assert(1 ether == 1e18) */\n      tag_40\n      jumpi\n      tag_41\n      tag_25\n      jump\t// in\n    tag_41:\n    tag_40:\n        /* \"Ep4/example.sol\":86:385  function etherUnitExample() public pure {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_43:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_45\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:626   */\n    tag_8:\n        /* \"#utility.yul\":220:226   */\n      0x00\n        /* \"#utility.yul\":228:234   */\n      dup1\n        /* \"#utility.yul\":277:279   */\n      0x40\n        /* \"#utility.yul\":265:274   */\n      dup4\n        /* \"#utility.yul\":256:263   */\n      dup6\n        /* \"#utility.yul\":252:275   */\n      sub\n        /* \"#utility.yul\":248:280   */\n      slt\n        /* \"#utility.yul\":245:364   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":283:362   */\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":245:364   */\n    tag_48:\n        /* \"#utility.yul\":403:404   */\n      0x00\n        /* \"#utility.yul\":428:481   */\n      tag_51\n        /* \"#utility.yul\":473:480   */\n      dup6\n        /* \"#utility.yul\":464:470   */\n      dup3\n        /* \"#utility.yul\":453:462   */\n      dup7\n        /* \"#utility.yul\":449:471   */\n      add\n        /* \"#utility.yul\":428:481   */\n      tag_43\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":418:481   */\n      swap3\n      pop\n        /* \"#utility.yul\":374:491   */\n      pop\n        /* \"#utility.yul\":530:532   */\n      0x20\n        /* \"#utility.yul\":556:609   */\n      tag_52\n        /* \"#utility.yul\":601:608   */\n      dup6\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup7\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_43\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":501:619   */\n      pop\n        /* \"#utility.yul\":152:626   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:741   */\n    tag_53:\n        /* \"#utility.yul\":713:734   */\n      tag_55\n        /* \"#utility.yul\":728:733   */\n      dup2\n        /* \"#utility.yul\":713:734   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":708:711   */\n      dup3\n        /* \"#utility.yul\":701:735   */\n      mstore\n        /* \"#utility.yul\":632:741   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":747:1113   */\n    tag_57:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":910:977   */\n      tag_59\n        /* \"#utility.yul\":974:976   */\n      0x14\n        /* \"#utility.yul\":969:972   */\n      dup4\n        /* \"#utility.yul\":910:977   */\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":903:977   */\n      swap2\n      pop\n        /* \"#utility.yul\":986:1079   */\n      tag_61\n        /* \"#utility.yul\":1075:1078   */\n      dup3\n        /* \"#utility.yul\":986:1079   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1104:1106   */\n      0x20\n        /* \"#utility.yul\":1099:1102   */\n      dup3\n        /* \"#utility.yul\":1095:1107   */\n      add\n        /* \"#utility.yul\":1088:1107   */\n      swap1\n      pop\n        /* \"#utility.yul\":747:1113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1119:1329   */\n    tag_11:\n        /* \"#utility.yul\":1206:1210   */\n      0x00\n        /* \"#utility.yul\":1244:1246   */\n      0x20\n        /* \"#utility.yul\":1233:1242   */\n      dup3\n        /* \"#utility.yul\":1229:1247   */\n      add\n        /* \"#utility.yul\":1221:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1257:1322   */\n      tag_64\n        /* \"#utility.yul\":1319:1320   */\n      0x00\n        /* \"#utility.yul\":1308:1317   */\n      dup4\n        /* \"#utility.yul\":1304:1321   */\n      add\n        /* \"#utility.yul\":1295:1301   */\n      dup5\n        /* \"#utility.yul\":1257:1322   */\n      tag_53\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1119:1329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1335:1754   */\n    tag_37:\n        /* \"#utility.yul\":1501:1505   */\n      0x00\n        /* \"#utility.yul\":1539:1541   */\n      0x20\n        /* \"#utility.yul\":1528:1537   */\n      dup3\n        /* \"#utility.yul\":1524:1542   */\n      add\n        /* \"#utility.yul\":1516:1542   */\n      swap1\n      pop\n        /* \"#utility.yul\":1588:1597   */\n      dup2\n        /* \"#utility.yul\":1582:1586   */\n      dup2\n        /* \"#utility.yul\":1578:1598   */\n      sub\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1563:1572   */\n      dup4\n        /* \"#utility.yul\":1559:1576   */\n      add\n        /* \"#utility.yul\":1552:1599   */\n      mstore\n        /* \"#utility.yul\":1616:1747   */\n      tag_66\n        /* \"#utility.yul\":1742:1746   */\n      dup2\n        /* \"#utility.yul\":1616:1747   */\n      tag_57\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1608:1747   */\n      swap1\n      pop\n        /* \"#utility.yul\":1335:1754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1841:2010   */\n    tag_60:\n        /* \"#utility.yul\":1925:1936   */\n      0x00\n        /* \"#utility.yul\":1959:1965   */\n      dup3\n        /* \"#utility.yul\":1954:1957   */\n      dup3\n        /* \"#utility.yul\":1947:1966   */\n      mstore\n        /* \"#utility.yul\":1999:2003   */\n      0x20\n        /* \"#utility.yul\":1994:1997   */\n      dup3\n        /* \"#utility.yul\":1990:2004   */\n      add\n        /* \"#utility.yul\":1975:2004   */\n      swap1\n      pop\n        /* \"#utility.yul\":1841:2010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2016:2321   */\n    tag_20:\n        /* \"#utility.yul\":2056:2059   */\n      0x00\n        /* \"#utility.yul\":2075:2095   */\n      tag_71\n        /* \"#utility.yul\":2093:2094   */\n      dup3\n        /* \"#utility.yul\":2075:2095   */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2070:2095   */\n      swap2\n      pop\n        /* \"#utility.yul\":2109:2129   */\n      tag_73\n        /* \"#utility.yul\":2127:2128   */\n      dup4\n        /* \"#utility.yul\":2109:2129   */\n      tag_72\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2104:2129   */\n      swap3\n      pop\n        /* \"#utility.yul\":2263:2264   */\n      dup3\n        /* \"#utility.yul\":2195:2261   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2191:2265   */\n      sub\n        /* \"#utility.yul\":2188:2189   */\n      dup3\n        /* \"#utility.yul\":2185:2266   */\n      gt\n        /* \"#utility.yul\":2182:2289   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":2269:2287   */\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2182:2289   */\n    tag_74:\n        /* \"#utility.yul\":2313:2314   */\n      dup3\n        /* \"#utility.yul\":2310:2311   */\n      dup3\n        /* \"#utility.yul\":2306:2315   */\n      add\n        /* \"#utility.yul\":2299:2315   */\n      swap1\n      pop\n        /* \"#utility.yul\":2016:2321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2327:2675   */\n    tag_18:\n        /* \"#utility.yul\":2367:2374   */\n      0x00\n        /* \"#utility.yul\":2390:2410   */\n      tag_78\n        /* \"#utility.yul\":2408:2409   */\n      dup3\n        /* \"#utility.yul\":2390:2410   */\n      tag_72\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2385:2410   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2444   */\n      tag_79\n        /* \"#utility.yul\":2442:2443   */\n      dup4\n        /* \"#utility.yul\":2424:2444   */\n      tag_72\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2419:2444   */\n      swap3\n      pop\n        /* \"#utility.yul\":2612:2613   */\n      dup2\n        /* \"#utility.yul\":2544:2610   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2540:2614   */\n      div\n        /* \"#utility.yul\":2537:2538   */\n      dup4\n        /* \"#utility.yul\":2534:2615   */\n      gt\n        /* \"#utility.yul\":2529:2530   */\n      dup3\n        /* \"#utility.yul\":2522:2531   */\n      iszero\n        /* \"#utility.yul\":2515:2532   */\n      iszero\n        /* \"#utility.yul\":2511:2616   */\n      and\n        /* \"#utility.yul\":2508:2639   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":2619:2637   */\n      tag_81\n      tag_76\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2508:2639   */\n    tag_80:\n        /* \"#utility.yul\":2667:2668   */\n      dup3\n        /* \"#utility.yul\":2664:2665   */\n      dup3\n        /* \"#utility.yul\":2660:2669   */\n      mul\n        /* \"#utility.yul\":2649:2669   */\n      swap1\n      pop\n        /* \"#utility.yul\":2327:2675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2681:2771   */\n    tag_56:\n        /* \"#utility.yul\":2715:2722   */\n      0x00\n        /* \"#utility.yul\":2758:2763   */\n      dup2\n        /* \"#utility.yul\":2751:2764   */\n      iszero\n        /* \"#utility.yul\":2744:2765   */\n      iszero\n        /* \"#utility.yul\":2733:2765   */\n      swap1\n      pop\n        /* \"#utility.yul\":2681:2771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2777:2854   */\n    tag_72:\n        /* \"#utility.yul\":2814:2821   */\n      0x00\n        /* \"#utility.yul\":2843:2848   */\n      dup2\n        /* \"#utility.yul\":2832:2848   */\n      swap1\n      pop\n        /* \"#utility.yul\":2777:2854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:3040   */\n    tag_25:\n        /* \"#utility.yul\":2908:2985   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2905:2906   */\n      0x00\n        /* \"#utility.yul\":2898:2986   */\n      mstore\n        /* \"#utility.yul\":3005:3009   */\n      0x01\n        /* \"#utility.yul\":3002:3003   */\n      0x04\n        /* \"#utility.yul\":2995:3010   */\n      mstore\n        /* \"#utility.yul\":3029:3033   */\n      0x24\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3019:3034   */\n      revert\n        /* \"#utility.yul\":3046:3226   */\n    tag_76:\n        /* \"#utility.yul\":3094:3171   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3091:3092   */\n      0x00\n        /* \"#utility.yul\":3084:3172   */\n      mstore\n        /* \"#utility.yul\":3191:3195   */\n      0x11\n        /* \"#utility.yul\":3188:3189   */\n      0x04\n        /* \"#utility.yul\":3181:3196   */\n      mstore\n        /* \"#utility.yul\":3215:3219   */\n      0x24\n        /* \"#utility.yul\":3212:3213   */\n      0x00\n        /* \"#utility.yul\":3205:3220   */\n      revert\n        /* \"#utility.yul\":3355:3472   */\n    tag_50:\n        /* \"#utility.yul\":3464:3465   */\n      0x00\n        /* \"#utility.yul\":3461:3462   */\n      dup1\n        /* \"#utility.yul\":3454:3466   */\n      revert\n        /* \"#utility.yul\":3478:3648   */\n    tag_62:\n        /* \"#utility.yul\":3618:3640   */\n      0x3120776569206e6f7420657175616c20746f2031000000000000000000000000\n        /* \"#utility.yul\":3614:3615   */\n      0x00\n        /* \"#utility.yul\":3606:3612   */\n      dup3\n        /* \"#utility.yul\":3602:3616   */\n      add\n        /* \"#utility.yul\":3595:3641   */\n      mstore\n        /* \"#utility.yul\":3478:3648   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3654:3776   */\n    tag_46:\n        /* \"#utility.yul\":3727:3751   */\n      tag_91\n        /* \"#utility.yul\":3745:3750   */\n      dup2\n        /* \"#utility.yul\":3727:3751   */\n      tag_72\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3720:3725   */\n      dup2\n        /* \"#utility.yul\":3717:3752   */\n      eq\n        /* \"#utility.yul\":3707:3770   */\n      tag_92\n      jumpi\n        /* \"#utility.yul\":3766:3767   */\n      0x00\n        /* \"#utility.yul\":3763:3764   */\n      dup1\n        /* \"#utility.yul\":3756:3768   */\n      revert\n        /* \"#utility.yul\":3707:3770   */\n    tag_92:\n        /* \"#utility.yul\":3654:3776   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220051310d57c220cac9bc375317679ffadc554414e1b47ebdf470dfb41c8823f9c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806319730b441461004657806324475f4c1461007657806397e8218314610080575b600080fd5b610060600480360381019061005b91906101a0565b61008a565b60405161006d9190610212565b60405180910390f35b61007e6100be565b005b61008861011a565b005b6000806000905060038361009e91906102b4565b846100a9919061025e565b42106100b457600190505b8091505092915050565b600180146100cf576100ce610324565b5b603c80146100e0576100df610324565b5b610e1080146100f2576100f1610324565b5b62015180801461010557610104610324565b5b62093a80801461011857610117610324565b5b565b6001801461015d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101549061022d565b60405180910390fd5b633b9aca00801461017157610170610324565b5b670de0b6b3a7640000801461018957610188610324565b5b565b60008135905061019a816103b0565b92915050565b600080604083850312156101b7576101b6610382565b5b60006101c58582860161018b565b92505060206101d68582860161018b565b9150509250929050565b6101e98161030e565b82525050565b60006101fc60148361024d565b915061020782610387565b602082019050919050565b600060208201905061022760008301846101e0565b92915050565b60006020820190508181036000830152610246816101ef565b9050919050565b600082825260208201905092915050565b60006102698261031a565b91506102748361031a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102a9576102a8610353565b5b828201905092915050565b60006102bf8261031a565b91506102ca8361031a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561030357610302610353565b5b828202905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f3120776569206e6f7420657175616c20746f2031000000000000000000000000600082015250565b6103b98161031a565b81146103c457600080fd5b5056fea2646970667358221220051310d57c220cac9bc375317679ffadc554414e1b47ebdf470dfb41c8823f9c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19730B44 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x24475F4C EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x97E82183 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x11A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x3 DUP4 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x2B4 JUMP JUMPDEST DUP5 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST TIMESTAMP LT PUSH2 0xB4 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0xCF JUMPI PUSH2 0xCE PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH1 0x3C DUP1 EQ PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH2 0xE10 DUP1 EQ PUSH2 0xF2 JUMPI PUSH2 0xF1 PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH3 0x15180 DUP1 EQ PUSH2 0x105 JUMPI PUSH2 0x104 PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH3 0x93A80 DUP1 EQ PUSH2 0x118 JUMPI PUSH2 0x117 PUSH2 0x324 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154 SWAP1 PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x3B9ACA00 DUP1 EQ PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 EQ PUSH2 0x189 JUMPI PUSH2 0x188 PUSH2 0x324 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A DUP2 PUSH2 0x3B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7 JUMPI PUSH2 0x1B6 PUSH2 0x382 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C5 DUP6 DUP3 DUP7 ADD PUSH2 0x18B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D6 DUP6 DUP3 DUP7 ADD PUSH2 0x18B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9 DUP2 PUSH2 0x30E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC PUSH1 0x14 DUP4 PUSH2 0x24D JUMP JUMPDEST SWAP2 POP PUSH2 0x207 DUP3 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x246 DUP2 PUSH2 0x1EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x269 DUP3 PUSH2 0x31A JUMP JUMPDEST SWAP2 POP PUSH2 0x274 DUP4 PUSH2 0x31A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x353 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x31A JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA DUP4 PUSH2 0x31A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x353 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x3120776569206E6F7420657175616C20746F2031000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x3B9 DUP2 PUSH2 0x31A JUMP JUMPDEST DUP2 EQ PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV SGT LT 0xD5 PUSH29 0x220CAC9BC375317679FFADC554414E1B47EBDF470DFB41C8823F9C6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "62:1165:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@etherUnitExample_24": {
									"entryPoint": 282,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@timeUnitExample_58": {
									"entryPoint": 190,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@validate_88": {
									"entryPoint": 138,
									"id": 88,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3779:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "235:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "281:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "283:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "283:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "283:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "256:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "265:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "252:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "252:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "277:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:32:1"
															},
															"nodeType": "YulIf",
															"src": "245:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "374:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "389:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "403:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "393:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "418:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "453:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "464:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "449:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "449:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "473:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "428:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "418:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "501:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "516:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "530:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "520:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "197:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "208:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "220:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "228:6:1",
														"type": ""
													}
												],
												"src": "152:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "691:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "728:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "713:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "713:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "701:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "679:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "686:3:1",
														"type": ""
													}
												],
												"src": "632:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "893:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "903:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "969:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "910:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "903:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1075:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd",
																	"nodeType": "YulIdentifier",
																	"src": "986:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "986:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1088:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1099:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1104:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1095:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1095:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:1",
														"type": ""
													}
												],
												"src": "747:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1233:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1244:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1221:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1295:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1308:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1319:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1304:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1257:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1257:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1257:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1183:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1206:4:1",
														"type": ""
													}
												],
												"src": "1119:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1516:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1528:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1524:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1516:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1563:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1574:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1559:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1559:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1582:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1588:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1578:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1608:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1742:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1616:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1608:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1486:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1501:4:1",
														"type": ""
													}
												],
												"src": "1335:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1800:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1810:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1826:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1820:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1810:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1793:6:1",
														"type": ""
													}
												],
												"src": "1760:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1937:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1954:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1959:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1947:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1975:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1994:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1990:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1975:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1909:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1914:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1925:11:1",
														"type": ""
													}
												],
												"src": "1841:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2060:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2070:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2093:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2075:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2070:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2104:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2127:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2109:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2104:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2269:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2269:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2188:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2195:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2263:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2191:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2191:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2185:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2185:81:1"
															},
															"nodeType": "YulIf",
															"src": "2182:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2299:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2310:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2313:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2306:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2306:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2299:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2047:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2050:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2056:3:1",
														"type": ""
													}
												],
												"src": "2016:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2375:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2385:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2408:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2390:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2385:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2419:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2442:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2424:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2419:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2619:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2529:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2522:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2522:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2515:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2515:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2537:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2544:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2612:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2540:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2540:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2534:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:105:1"
															},
															"nodeType": "YulIf",
															"src": "2508:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2649:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2664:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2667:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2660:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2660:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2649:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2358:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2361:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2367:7:1",
														"type": ""
													}
												],
												"src": "2327:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2723:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2733:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2758:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2751:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2733:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2705:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2715:7:1",
														"type": ""
													}
												],
												"src": "2681:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2822:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2832:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2843:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2832:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2804:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2814:7:1",
														"type": ""
													}
												],
												"src": "2777:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2888:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2908:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2898:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3002:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2995:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "2860:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3074:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3091:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3094:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3084:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3084:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3188:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3191:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3181:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3212:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3215:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3205:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3205:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3046:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3321:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3338:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3341:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3331:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3331:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3232:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3444:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3461:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3464:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3454:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3355:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3584:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3606:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3614:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3602:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3602:14:1"
																	},
																	{
																		"hexValue": "3120776569206e6f7420657175616c20746f2031",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3618:22:1",
																		"type": "",
																		"value": "1 wei not equal to 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3576:6:1",
														"type": ""
													}
												],
												"src": "3478:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3697:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3754:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3763:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3766:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3756:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3756:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3756:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3720:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3745:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3727:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3727:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3717:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3717:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:43:1"
															},
															"nodeType": "YulIf",
															"src": "3707:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3690:5:1",
														"type": ""
													}
												],
												"src": "3654:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"1 wei not equal to 1\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806319730b441461004657806324475f4c1461007657806397e8218314610080575b600080fd5b610060600480360381019061005b91906101a0565b61008a565b60405161006d9190610212565b60405180910390f35b61007e6100be565b005b61008861011a565b005b6000806000905060038361009e91906102b4565b846100a9919061025e565b42106100b457600190505b8091505092915050565b600180146100cf576100ce610324565b5b603c80146100e0576100df610324565b5b610e1080146100f2576100f1610324565b5b62015180801461010557610104610324565b5b62093a80801461011857610117610324565b5b565b6001801461015d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101549061022d565b60405180910390fd5b633b9aca00801461017157610170610324565b5b670de0b6b3a7640000801461018957610188610324565b5b565b60008135905061019a816103b0565b92915050565b600080604083850312156101b7576101b6610382565b5b60006101c58582860161018b565b92505060206101d68582860161018b565b9150509250929050565b6101e98161030e565b82525050565b60006101fc60148361024d565b915061020782610387565b602082019050919050565b600060208201905061022760008301846101e0565b92915050565b60006020820190508181036000830152610246816101ef565b9050919050565b600082825260208201905092915050565b60006102698261031a565b91506102748361031a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102a9576102a8610353565b5b828201905092915050565b60006102bf8261031a565b91506102ca8361031a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561030357610302610353565b5b828202905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f3120776569206e6f7420657175616c20746f2031000000000000000000000000600082015250565b6103b98161031a565b81146103c457600080fd5b5056fea2646970667358221220051310d57c220cac9bc375317679ffadc554414e1b47ebdf470dfb41c8823f9c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19730B44 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x24475F4C EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x97E82183 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x11A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x3 DUP4 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x2B4 JUMP JUMPDEST DUP5 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x25E JUMP JUMPDEST TIMESTAMP LT PUSH2 0xB4 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0xCF JUMPI PUSH2 0xCE PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH1 0x3C DUP1 EQ PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH2 0xE10 DUP1 EQ PUSH2 0xF2 JUMPI PUSH2 0xF1 PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH3 0x15180 DUP1 EQ PUSH2 0x105 JUMPI PUSH2 0x104 PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH3 0x93A80 DUP1 EQ PUSH2 0x118 JUMPI PUSH2 0x117 PUSH2 0x324 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0x15D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154 SWAP1 PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x3B9ACA00 DUP1 EQ PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x324 JUMP JUMPDEST JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 EQ PUSH2 0x189 JUMPI PUSH2 0x188 PUSH2 0x324 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A DUP2 PUSH2 0x3B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7 JUMPI PUSH2 0x1B6 PUSH2 0x382 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C5 DUP6 DUP3 DUP7 ADD PUSH2 0x18B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D6 DUP6 DUP3 DUP7 ADD PUSH2 0x18B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9 DUP2 PUSH2 0x30E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC PUSH1 0x14 DUP4 PUSH2 0x24D JUMP JUMPDEST SWAP2 POP PUSH2 0x207 DUP3 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x246 DUP2 PUSH2 0x1EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x269 DUP3 PUSH2 0x31A JUMP JUMPDEST SWAP2 POP PUSH2 0x274 DUP4 PUSH2 0x31A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2A9 JUMPI PUSH2 0x2A8 PUSH2 0x353 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x31A JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA DUP4 PUSH2 0x31A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x353 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x3120776569206E6F7420657175616C20746F2031000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x3B9 DUP2 PUSH2 0x31A JUMP JUMPDEST DUP2 EQ PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV SGT LT 0xD5 PUSH29 0x220CAC9BC375317679FFADC554414E1B47EBDF470DFB41C8823F9C6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "62:1165:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;770:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;393:369;;;:::i;:::-;;86:299;;;:::i;:::-;;770:454;839:4;856:16;875:5;856:24;;1122:9;1107:12;:24;;;;:::i;:::-;1099:5;:32;;;;:::i;:::-;1080:15;:51;1076:102;;1162:4;1148:18;;1076:102;1205:11;1198:18;;;770:454;;;;:::o;393:369::-;480:1;467:9;:14;460:22;;;;:::i;:::-;;543:10;530:9;:23;523:31;;;;:::i;:::-;;616:10;605:7;:21;598:29;;;;:::i;:::-;;683:8;673:6;:18;666:26;;;;:::i;:::-;;747:6;736:7;:17;729:25;;;;:::i;:::-;;393:369::o;86:299::-;199:1;190:5;:10;182:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;295:3;285:6;:13;278:21;;;;:::i;:::-;;372:4;361:7;:15;354:23;;;;:::i;:::-;;86:299::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:474::-;220:6;228;277:2;265:9;256:7;252:23;248:32;245:119;;;283:79;;:::i;:::-;245:119;403:1;428:53;473:7;464:6;453:9;449:22;428:53;:::i;:::-;418:63;;374:117;530:2;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;501:118;152:474;;;;;:::o;632:109::-;713:21;728:5;713:21;:::i;:::-;708:3;701:34;632:109;;:::o;747:366::-;889:3;910:67;974:2;969:3;910:67;:::i;:::-;903:74;;986:93;1075:3;986:93;:::i;:::-;1104:2;1099:3;1095:12;1088:19;;747:366;;;:::o;1119:210::-;1206:4;1244:2;1233:9;1229:18;1221:26;;1257:65;1319:1;1308:9;1304:17;1295:6;1257:65;:::i;:::-;1119:210;;;;:::o;1335:419::-;1501:4;1539:2;1528:9;1524:18;1516:26;;1588:9;1582:4;1578:20;1574:1;1563:9;1559:17;1552:47;1616:131;1742:4;1616:131;:::i;:::-;1608:139;;1335:419;;;:::o;1841:169::-;1925:11;1959:6;1954:3;1947:19;1999:4;1994:3;1990:14;1975:29;;1841:169;;;;:::o;2016:305::-;2056:3;2075:20;2093:1;2075:20;:::i;:::-;2070:25;;2109:20;2127:1;2109:20;:::i;:::-;2104:25;;2263:1;2195:66;2191:74;2188:1;2185:81;2182:107;;;2269:18;;:::i;:::-;2182:107;2313:1;2310;2306:9;2299:16;;2016:305;;;;:::o;2327:348::-;2367:7;2390:20;2408:1;2390:20;:::i;:::-;2385:25;;2424:20;2442:1;2424:20;:::i;:::-;2419:25;;2612:1;2544:66;2540:74;2537:1;2534:81;2529:1;2522:9;2515:17;2511:105;2508:131;;;2619:18;;:::i;:::-;2508:131;2667:1;2664;2660:9;2649:20;;2327:348;;;;:::o;2681:90::-;2715:7;2758:5;2751:13;2744:21;2733:32;;2681:90;;;:::o;2777:77::-;2814:7;2843:5;2832:16;;2777:77;;;:::o;2860:180::-;2908:77;2905:1;2898:88;3005:4;3002:1;2995:15;3029:4;3026:1;3019:15;3046:180;3094:77;3091:1;3084:88;3191:4;3188:1;3181:15;3215:4;3212:1;3205:15;3355:117;3464:1;3461;3454:12;3478:170;3618:22;3614:1;3606:6;3602:14;3595:46;3478:170;:::o;3654:122::-;3727:24;3745:5;3727:24;:::i;:::-;3720:5;3717:35;3707:63;;3766:1;3763;3756:12;3707:63;3654:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "204200",
								"executionCost": "245",
								"totalCost": "204445"
							},
							"external": {
								"etherUnitExample()": "235",
								"timeUnitExample()": "259",
								"validate(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 1227,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1227,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220051310d57c220cac9bc375317679ffadc554414e1b47ebdf470dfb41c8823f9c64736f6c63430008070033",
									".code": [
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "19730B44"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "24475F4C"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "97E82183"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1227,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 393,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 393,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 393,
											"end": 762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 393,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 762,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 86,
											"end": 385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 385,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 875,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 856,
											"end": 880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1131,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1107,
											"end": 1119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1107,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1095,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1076,
											"end": 1178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1178,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1076,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 393,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 467,
											"end": 476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 481,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 543,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 530,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 553,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 523,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 523,
											"end": 554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 523,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 523,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 523,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 523,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 523,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 523,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 616,
											"end": 626,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 605,
											"end": 612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 605,
											"end": 626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 598,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 598,
											"end": 627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 598,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 598,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 598,
											"end": 627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 598,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 598,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 627,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 598,
											"end": 627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 673,
											"end": 679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 673,
											"end": 691,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 666,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 666,
											"end": 692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 666,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 666,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 666,
											"end": 692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 666,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 666,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 666,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 747,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "93A80"
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 754,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 729,
											"end": 754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 393,
											"end": 762,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 86,
											"end": 385,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 86,
											"end": 385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 199,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 190,
											"end": 200,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 182,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 182,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 295,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 285,
											"end": 291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 298,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 278,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 278,
											"end": 299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 278,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 278,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 299,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 278,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 278,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 299,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 278,
											"end": 299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 372,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 361,
											"end": 368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 361,
											"end": 376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 377,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 277,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 256,
											"end": 263,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 252,
											"end": 275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 248,
											"end": 280,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 403,
											"end": 404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 473,
											"end": 480,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 464,
											"end": 470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 453,
											"end": 462,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 449,
											"end": 471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 418,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 418,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 741,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 632,
											"end": 741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 728,
											"end": 733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 713,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 701,
											"end": 735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 632,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 741,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 969,
											"end": 972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 910,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 903,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1106,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1119,
											"end": 1329,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1119,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1257,
											"end": 1322,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1322,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1257,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1329,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1329,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1335,
											"end": 1754,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1335,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1616,
											"end": 1747,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1616,
											"end": 1747,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1616,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1754,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1841,
											"end": 2010,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1841,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 1997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 2010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 2010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 2010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 2010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 2010,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2016,
											"end": 2321,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2093,
											"end": 2094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2075,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2129,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2266,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2182,
											"end": 2289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2182,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2321,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2327,
											"end": 2675,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2327,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2390,
											"end": 2410,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2390,
											"end": 2410,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2390,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2424,
											"end": 2444,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2424,
											"end": 2444,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2424,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2540,
											"end": 2614,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2615,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2531,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2508,
											"end": 2639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2508,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2675,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2675,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2681,
											"end": 2771,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2681,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2765,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2771,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2777,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2777,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2854,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2860,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2860,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3002,
											"end": 3003,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3226,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3046,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3171,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3091,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3188,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3181,
											"end": 3196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3219,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3472,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3355,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3466,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3648,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3478,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "PUSH",
											"source": 1,
											"value": "3120776569206E6F7420657175616C20746F2031000000000000000000000000"
										},
										{
											"begin": 3614,
											"end": 3615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3648,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 3776,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3654,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3745,
											"end": 3750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3727,
											"end": 3751,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3751,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3727,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3752,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3776,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"etherUnitExample()": "97e82183",
							"timeUnitExample()": "24475f4c",
							"validate(uint256,uint256)": "19730b44"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"etherUnitExample\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeUnitExample\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondsAfter\",\"type\":\"uint256\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ep4/example.sol\":\"Example\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ep4/example.sol\":{\"keccak256\":\"0x366b97b4f4d483deeb40c0795dc05dcd366b0005bcdd9e8b2fc7e4e29e464690\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://889a25a7f7c984043b4aeb1a33c06436ae831e7fb96aad2bf9aab9c302605ae5\",\"dweb:/ipfs/QmePNbHJcKgkRHqTpT9gxy1j3i3gTMEpLM9B27KhhqgFiZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Ep4/example.sol": {
				"ast": {
					"absolutePath": "Ep4/example.sol",
					"exportedSymbols": {
						"Example": [
							89
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "Example",
							"nameLocation": "71:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "126:259:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 7,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 5,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "190:5:0",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 6,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "199:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "190:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "3120776569206e6f7420657175616c20746f2031",
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "202:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd",
																"typeString": "literal_string \"1 wei not equal to 1\""
															},
															"value": "1 wei not equal to 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37811ba8135deb450a12435775c35dfc4c86db6328e411e8fc3ee540bb4ab9fd",
																"typeString": "literal_string \"1 wei not equal to 1\""
															}
														],
														"id": 4,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "182:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "182:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "285:6:0",
																"subdenomination": "gwei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "316539",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "295:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1e9"
															},
															"src": "285:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 11,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "278:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "278:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "278:21:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "361:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "372:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "361:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 17,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "354:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "354:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "354:23:0"
											}
										]
									},
									"functionSelector": "97e82183",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "etherUnitExample",
									"nameLocation": "95:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:0"
									},
									"scope": 89,
									"src": "86:299:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "432:330:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "467:9:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "480:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "467:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 27,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "460:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "460:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "460:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "530:9:0",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "543:10:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"src": "530:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 33,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "523:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "523:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "523:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "605:7:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "616:10:0",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "60"
															},
															"src": "605:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 39,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "598:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "598:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "598:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "673:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3234",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "683:8:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "24"
															},
															"src": "673:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 45,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "666:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "666:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "666:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "736:7:0",
																"subdenomination": "weeks",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "37",
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "747:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "7"
															},
															"src": "736:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 51,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "729:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "729:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "729:25:0"
											}
										]
									},
									"functionSelector": "24475f4c",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timeUnitExample",
									"nameLocation": "402:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:0:0"
									},
									"scope": 89,
									"src": "393:369:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "845:379:0",
										"statements": [
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"mutability": "mutable",
														"name": "isValidated",
														"nameLocation": "861:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "856:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 67,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "856:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 70,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "875:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "856:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 71,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1080:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1080:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 73,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1099:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "secondsAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "1107:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1122:9:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1107:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1099:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1080:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "區塊的時間戳記至少在3秒以前, 才算有效。\n 注意: 此為範例，真實合約請不要使用block.timestamp來進行檢驗，具有弱點風險。",
												"id": 84,
												"nodeType": "IfStatement",
												"src": "1076:102:0",
												"trueBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "1133:45:0",
													"statements": [
														{
															"expression": {
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 79,
																	"name": "isValidated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "1148:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 80,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1148:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 82,
															"nodeType": "ExpressionStatement",
															"src": "1148:18:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 85,
													"name": "isValidated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 68,
													"src": "1205:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 66,
												"id": 86,
												"nodeType": "Return",
												"src": "1198:18:0"
											}
										]
									},
									"functionSelector": "19730b44",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validate",
									"nameLocation": "779:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "793:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "788:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "secondsAfter",
												"nameLocation": "805:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "800:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "800:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:31:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "839:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 64,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:0"
									},
									"scope": 89,
									"src": "770:454:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 90,
							"src": "62:1165:0",
							"usedErrors": []
						}
					],
					"src": "33:1194:0"
				},
				"id": 0
			}
		}
	}
}