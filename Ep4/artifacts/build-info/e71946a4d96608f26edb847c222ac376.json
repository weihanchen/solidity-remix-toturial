{
	"id": "e71946a4d96608f26edb847c222ac376",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ep4/example.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7.0;\r\n\r\ncontract Example {\r\n    function pow(uint base, uint n) public pure returns(uint) {\r\n        return base**n;\r\n    }\r\n\r\n    function etherUnitExample() public pure {\r\n\r\n        // 1 wei是貨幣中的最小單位\r\n        uint oneWei = 1 wei;\r\n        \r\n        require(oneWei == 1, \"1 wei is not equal to 1\");\r\n\r\n        // 1 gwei is equal to 10^9 wei\r\n        uint oneGWei = 1 gwei;\r\n        require(oneGWei == 1e9, \"1 gwei is not equal to 1e9\");\r\n        require(oneGWei == pow(10, 9));\r\n\r\n        // 1 ether is equal to 10^18 wei\r\n        uint oneEther = 1 ether;\r\n        require(oneEther == 1e18, \"1 ether is not equal to 1e18\");\r\n        require(oneEther == pow(10, 18));\r\n        require(oneEther == 1000000000 * oneGWei, \"1 ether is not equal to 1000000000 gwei\");\r\n    }\r\n\r\n    function timeUnitExample() public pure {\r\n        // 1秒\r\n        assert(1 seconds == 1);\r\n\r\n        // 1分鐘 = 60秒\r\n        assert(1 minutes == 60 seconds);\r\n\r\n        // 1小時 = 60分鐘\r\n        assert(1 hours == 60 minutes);\r\n\r\n        // 1天=24小時\r\n        assert(1 days == 24 hours);\r\n\r\n        // 1周 = 7天\r\n        assert(1 weeks == 7 days);\r\n    }\r\n\r\n    function validate(uint start, uint secondsAfter) public view returns(bool) {\r\n        bool isValidated = false;\r\n\r\n\t\t/// 區塊的時間戳記至少在3秒以前, 才算有效。\r\n        /// 注意: 此為範例，真實合約請不要使用block.timestamp來進行檢驗，具有弱點風險。\r\n        if (block.timestamp >= start + secondsAfter * 3 seconds) {\r\n            isValidated = true;\r\n        }\r\n        \r\n        return isValidated;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Ep4/example.sol": {
				"Example": {
					"abi": [
						{
							"inputs": [],
							"name": "etherUnitExample",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "base",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "n",
									"type": "uint256"
								}
							],
							"name": "pow",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeUnitExample",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "secondsAfter",
									"type": "uint256"
								}
							],
							"name": "validate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ep4/example.sol\":62:1683  contract Example {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ep4/example.sol\":62:1683  contract Example {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x19730b44\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x24475f4c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e4c697f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x97e82183\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ep4/example.sol\":1226:1680  function validate(uint start, uint secondsAfter) public view returns(bool) {\r... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ep4/example.sol\":849:1218  function timeUnitExample() public pure {\r... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"Ep4/example.sol\":86:177  function pow(uint base, uint n) public pure returns(uint) {\r... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ep4/example.sol\":185:841  function etherUnitExample() public pure {\r... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"Ep4/example.sol\":1226:1680  function validate(uint start, uint secondsAfter) public view returns(bool) {\r... */\n    tag_10:\n        /* \"Ep4/example.sol\":1295:1299  bool */\n      0x00\n        /* \"Ep4/example.sol\":1312:1328  bool isValidated */\n      dup1\n        /* \"Ep4/example.sol\":1331:1336  false */\n      0x00\n        /* \"Ep4/example.sol\":1312:1336  bool isValidated = false */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":1578:1587  3 seconds */\n      0x03\n        /* \"Ep4/example.sol\":1563:1575  secondsAfter */\n      dup4\n        /* \"Ep4/example.sol\":1563:1587  secondsAfter * 3 seconds */\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"Ep4/example.sol\":1555:1560  start */\n      dup5\n        /* \"Ep4/example.sol\":1555:1587  start + secondsAfter * 3 seconds */\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"Ep4/example.sol\":1536:1551  block.timestamp */\n      timestamp\n        /* \"Ep4/example.sol\":1536:1587  block.timestamp >= start + secondsAfter * 3 seconds */\n      lt\n        /* \"Ep4/example.sol\":1532:1634  if (block.timestamp >= start + secondsAfter * 3 seconds) {\r... */\n      tag_27\n      jumpi\n        /* \"Ep4/example.sol\":1618:1622  true */\n      0x01\n        /* \"Ep4/example.sol\":1604:1622  isValidated = true */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":1532:1634  if (block.timestamp >= start + secondsAfter * 3 seconds) {\r... */\n    tag_27:\n        /* \"Ep4/example.sol\":1661:1672  isValidated */\n      dup1\n        /* \"Ep4/example.sol\":1654:1672  return isValidated */\n      swap2\n      pop\n      pop\n        /* \"Ep4/example.sol\":1226:1680  function validate(uint start, uint secondsAfter) public view returns(bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ep4/example.sol\":849:1218  function timeUnitExample() public pure {\r... */\n    tag_14:\n        /* \"Ep4/example.sol\":936:937  1 */\n      0x01\n        /* \"Ep4/example.sol\":923:932  1 seconds */\n      dup1\n        /* \"Ep4/example.sol\":923:937  1 seconds == 1 */\n      eq\n        /* \"Ep4/example.sol\":916:938  assert(1 seconds == 1) */\n      tag_29\n      jumpi\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n    tag_29:\n        /* \"Ep4/example.sol\":999:1009  60 seconds */\n      0x3c\n        /* \"Ep4/example.sol\":986:995  1 minutes */\n      dup1\n        /* \"Ep4/example.sol\":986:1009  1 minutes == 60 seconds */\n      eq\n        /* \"Ep4/example.sol\":979:1010  assert(1 minutes == 60 seconds) */\n      tag_32\n      jumpi\n      tag_33\n      tag_31\n      jump\t// in\n    tag_33:\n    tag_32:\n        /* \"Ep4/example.sol\":1072:1082  60 minutes */\n      0x0e10\n        /* \"Ep4/example.sol\":1061:1068  1 hours */\n      dup1\n        /* \"Ep4/example.sol\":1061:1082  1 hours == 60 minutes */\n      eq\n        /* \"Ep4/example.sol\":1054:1083  assert(1 hours == 60 minutes) */\n      tag_34\n      jumpi\n      tag_35\n      tag_31\n      jump\t// in\n    tag_35:\n    tag_34:\n        /* \"Ep4/example.sol\":1139:1147  24 hours */\n      0x015180\n        /* \"Ep4/example.sol\":1129:1135  1 days */\n      dup1\n        /* \"Ep4/example.sol\":1129:1147  1 days == 24 hours */\n      eq\n        /* \"Ep4/example.sol\":1122:1148  assert(1 days == 24 hours) */\n      tag_36\n      jumpi\n      tag_37\n      tag_31\n      jump\t// in\n    tag_37:\n    tag_36:\n        /* \"Ep4/example.sol\":1203:1209  7 days */\n      0x093a80\n        /* \"Ep4/example.sol\":1192:1199  1 weeks */\n      dup1\n        /* \"Ep4/example.sol\":1192:1209  1 weeks == 7 days */\n      eq\n        /* \"Ep4/example.sol\":1185:1210  assert(1 weeks == 7 days) */\n      tag_38\n      jumpi\n      tag_39\n      tag_31\n      jump\t// in\n    tag_39:\n    tag_38:\n        /* \"Ep4/example.sol\":849:1218  function timeUnitExample() public pure {\r... */\n      jump\t// out\n        /* \"Ep4/example.sol\":86:177  function pow(uint base, uint n) public pure returns(uint) {\r... */\n    tag_17:\n        /* \"Ep4/example.sol\":138:142  uint */\n      0x00\n        /* \"Ep4/example.sol\":168:169  n */\n      dup2\n        /* \"Ep4/example.sol\":162:166  base */\n      dup4\n        /* \"Ep4/example.sol\":162:169  base**n */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"Ep4/example.sol\":155:169  return base**n */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":86:177  function pow(uint base, uint n) public pure returns(uint) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ep4/example.sol\":185:841  function etherUnitExample() public pure {\r... */\n    tag_21:\n        /* \"Ep4/example.sol\":283:294  uint oneWei */\n      0x00\n        /* \"Ep4/example.sol\":297:302  1 wei */\n      0x01\n        /* \"Ep4/example.sol\":283:302  uint oneWei = 1 wei */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":341:342  1 */\n      0x01\n        /* \"Ep4/example.sol\":331:337  oneWei */\n      dup2\n        /* \"Ep4/example.sol\":331:342  oneWei == 1 */\n      eq\n        /* \"Ep4/example.sol\":323:370  require(oneWei == 1, \"1 wei is not equal to 1\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"Ep4/example.sol\":423:435  uint oneGWei */\n      0x00\n        /* \"Ep4/example.sol\":438:444  1 gwei */\n      0x3b9aca00\n        /* \"Ep4/example.sol\":423:444  uint oneGWei = 1 gwei */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":474:477  1e9 */\n      0x3b9aca00\n        /* \"Ep4/example.sol\":463:470  oneGWei */\n      dup2\n        /* \"Ep4/example.sol\":463:477  oneGWei == 1e9 */\n      eq\n        /* \"Ep4/example.sol\":455:508  require(oneGWei == 1e9, \"1 gwei is not equal to 1e9\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"Ep4/example.sol\":538:548  pow(10, 9) */\n      tag_50\n        /* \"Ep4/example.sol\":542:544  10 */\n      0x0a\n        /* \"Ep4/example.sol\":546:547  9 */\n      0x09\n        /* \"Ep4/example.sol\":538:541  pow */\n      tag_17\n        /* \"Ep4/example.sol\":538:548  pow(10, 9) */\n      jump\t// in\n    tag_50:\n        /* \"Ep4/example.sol\":527:534  oneGWei */\n      dup2\n        /* \"Ep4/example.sol\":527:548  oneGWei == pow(10, 9) */\n      eq\n        /* \"Ep4/example.sol\":519:549  require(oneGWei == pow(10, 9)) */\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n        /* \"Ep4/example.sol\":604:617  uint oneEther */\n      0x00\n        /* \"Ep4/example.sol\":620:627  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Ep4/example.sol\":604:627  uint oneEther = 1 ether */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":658:662  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Ep4/example.sol\":646:654  oneEther */\n      dup2\n        /* \"Ep4/example.sol\":646:662  oneEther == 1e18 */\n      eq\n        /* \"Ep4/example.sol\":638:695  require(oneEther == 1e18, \"1 ether is not equal to 1e18\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"Ep4/example.sol\":726:737  pow(10, 18) */\n      tag_55\n        /* \"Ep4/example.sol\":730:732  10 */\n      0x0a\n        /* \"Ep4/example.sol\":734:736  18 */\n      0x12\n        /* \"Ep4/example.sol\":726:729  pow */\n      tag_17\n        /* \"Ep4/example.sol\":726:737  pow(10, 18) */\n      jump\t// in\n    tag_55:\n        /* \"Ep4/example.sol\":714:722  oneEther */\n      dup2\n        /* \"Ep4/example.sol\":714:737  oneEther == pow(10, 18) */\n      eq\n        /* \"Ep4/example.sol\":706:738  require(oneEther == pow(10, 18)) */\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n        /* \"Ep4/example.sol\":782:789  oneGWei */\n      dup2\n        /* \"Ep4/example.sol\":769:779  1000000000 */\n      0x3b9aca00\n        /* \"Ep4/example.sol\":769:789  1000000000 * oneGWei */\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n        /* \"Ep4/example.sol\":757:765  oneEther */\n      dup2\n        /* \"Ep4/example.sol\":757:789  oneEther == 1000000000 * oneGWei */\n      eq\n        /* \"Ep4/example.sol\":749:833  require(oneEther == 1000000000 * oneGWei, \"1 ether is not equal to 1000000000 gwei\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"Ep4/example.sol\":225:841  {\r... */\n      pop\n      pop\n      pop\n        /* \"Ep4/example.sol\":185:841  function etherUnitExample() public pure {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_62:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_64\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:626   */\n    tag_9:\n        /* \"#utility.yul\":220:226   */\n      0x00\n        /* \"#utility.yul\":228:234   */\n      dup1\n        /* \"#utility.yul\":277:279   */\n      0x40\n        /* \"#utility.yul\":265:274   */\n      dup4\n        /* \"#utility.yul\":256:263   */\n      dup6\n        /* \"#utility.yul\":252:275   */\n      sub\n        /* \"#utility.yul\":248:280   */\n      slt\n        /* \"#utility.yul\":245:364   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":283:362   */\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":245:364   */\n    tag_67:\n        /* \"#utility.yul\":403:404   */\n      0x00\n        /* \"#utility.yul\":428:481   */\n      tag_70\n        /* \"#utility.yul\":473:480   */\n      dup6\n        /* \"#utility.yul\":464:470   */\n      dup3\n        /* \"#utility.yul\":453:462   */\n      dup7\n        /* \"#utility.yul\":449:471   */\n      add\n        /* \"#utility.yul\":428:481   */\n      tag_62\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":418:481   */\n      swap3\n      pop\n        /* \"#utility.yul\":374:491   */\n      pop\n        /* \"#utility.yul\":530:532   */\n      0x20\n        /* \"#utility.yul\":556:609   */\n      tag_71\n        /* \"#utility.yul\":601:608   */\n      dup6\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup7\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_62\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":501:619   */\n      pop\n        /* \"#utility.yul\":152:626   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:741   */\n    tag_72:\n        /* \"#utility.yul\":713:734   */\n      tag_74\n        /* \"#utility.yul\":728:733   */\n      dup2\n        /* \"#utility.yul\":713:734   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":708:711   */\n      dup3\n        /* \"#utility.yul\":701:735   */\n      mstore\n        /* \"#utility.yul\":632:741   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":747:1113   */\n    tag_76:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":910:977   */\n      tag_78\n        /* \"#utility.yul\":974:976   */\n      0x1a\n        /* \"#utility.yul\":969:972   */\n      dup4\n        /* \"#utility.yul\":910:977   */\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":903:977   */\n      swap2\n      pop\n        /* \"#utility.yul\":986:1079   */\n      tag_80\n        /* \"#utility.yul\":1075:1078   */\n      dup3\n        /* \"#utility.yul\":986:1079   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1104:1106   */\n      0x20\n        /* \"#utility.yul\":1099:1102   */\n      dup3\n        /* \"#utility.yul\":1095:1107   */\n      add\n        /* \"#utility.yul\":1088:1107   */\n      swap1\n      pop\n        /* \"#utility.yul\":747:1113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1119:1485   */\n    tag_82:\n        /* \"#utility.yul\":1261:1264   */\n      0x00\n        /* \"#utility.yul\":1282:1349   */\n      tag_84\n        /* \"#utility.yul\":1346:1348   */\n      0x27\n        /* \"#utility.yul\":1341:1344   */\n      dup4\n        /* \"#utility.yul\":1282:1349   */\n      tag_79\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1275:1349   */\n      swap2\n      pop\n        /* \"#utility.yul\":1358:1451   */\n      tag_85\n        /* \"#utility.yul\":1447:1450   */\n      dup3\n        /* \"#utility.yul\":1358:1451   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1476:1478   */\n      0x40\n        /* \"#utility.yul\":1471:1474   */\n      dup3\n        /* \"#utility.yul\":1467:1479   */\n      add\n        /* \"#utility.yul\":1460:1479   */\n      swap1\n      pop\n        /* \"#utility.yul\":1119:1485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1491:1857   */\n    tag_87:\n        /* \"#utility.yul\":1633:1636   */\n      0x00\n        /* \"#utility.yul\":1654:1721   */\n      tag_89\n        /* \"#utility.yul\":1718:1720   */\n      0x17\n        /* \"#utility.yul\":1713:1716   */\n      dup4\n        /* \"#utility.yul\":1654:1721   */\n      tag_79\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1647:1721   */\n      swap2\n      pop\n        /* \"#utility.yul\":1730:1823   */\n      tag_90\n        /* \"#utility.yul\":1819:1822   */\n      dup3\n        /* \"#utility.yul\":1730:1823   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1848:1850   */\n      0x20\n        /* \"#utility.yul\":1843:1846   */\n      dup3\n        /* \"#utility.yul\":1839:1851   */\n      add\n        /* \"#utility.yul\":1832:1851   */\n      swap1\n      pop\n        /* \"#utility.yul\":1491:1857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1863:2229   */\n    tag_92:\n        /* \"#utility.yul\":2005:2008   */\n      0x00\n        /* \"#utility.yul\":2026:2093   */\n      tag_94\n        /* \"#utility.yul\":2090:2092   */\n      0x1c\n        /* \"#utility.yul\":2085:2088   */\n      dup4\n        /* \"#utility.yul\":2026:2093   */\n      tag_79\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2019:2093   */\n      swap2\n      pop\n        /* \"#utility.yul\":2102:2195   */\n      tag_95\n        /* \"#utility.yul\":2191:2194   */\n      dup3\n        /* \"#utility.yul\":2102:2195   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2220:2222   */\n      0x20\n        /* \"#utility.yul\":2215:2218   */\n      dup3\n        /* \"#utility.yul\":2211:2223   */\n      add\n        /* \"#utility.yul\":2204:2223   */\n      swap1\n      pop\n        /* \"#utility.yul\":1863:2229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2235:2353   */\n    tag_97:\n        /* \"#utility.yul\":2322:2346   */\n      tag_99\n        /* \"#utility.yul\":2340:2345   */\n      dup2\n        /* \"#utility.yul\":2322:2346   */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2317:2320   */\n      dup3\n        /* \"#utility.yul\":2310:2347   */\n      mstore\n        /* \"#utility.yul\":2235:2353   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2359:2569   */\n    tag_12:\n        /* \"#utility.yul\":2446:2450   */\n      0x00\n        /* \"#utility.yul\":2484:2486   */\n      0x20\n        /* \"#utility.yul\":2473:2482   */\n      dup3\n        /* \"#utility.yul\":2469:2487   */\n      add\n        /* \"#utility.yul\":2461:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2497:2562   */\n      tag_102\n        /* \"#utility.yul\":2559:2560   */\n      0x00\n        /* \"#utility.yul\":2548:2557   */\n      dup4\n        /* \"#utility.yul\":2544:2561   */\n      add\n        /* \"#utility.yul\":2535:2541   */\n      dup5\n        /* \"#utility.yul\":2497:2562   */\n      tag_72\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2359:2569   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2575:2994   */\n    tag_49:\n        /* \"#utility.yul\":2741:2745   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2768:2777   */\n      dup3\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2756:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2828:2837   */\n      dup2\n        /* \"#utility.yul\":2822:2826   */\n      dup2\n        /* \"#utility.yul\":2818:2838   */\n      sub\n        /* \"#utility.yul\":2814:2815   */\n      0x00\n        /* \"#utility.yul\":2803:2812   */\n      dup4\n        /* \"#utility.yul\":2799:2816   */\n      add\n        /* \"#utility.yul\":2792:2839   */\n      mstore\n        /* \"#utility.yul\":2856:2987   */\n      tag_104\n        /* \"#utility.yul\":2982:2986   */\n      dup2\n        /* \"#utility.yul\":2856:2987   */\n      tag_76\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2848:2987   */\n      swap1\n      pop\n        /* \"#utility.yul\":2575:2994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3000:3419   */\n    tag_60:\n        /* \"#utility.yul\":3166:3170   */\n      0x00\n        /* \"#utility.yul\":3204:3206   */\n      0x20\n        /* \"#utility.yul\":3193:3202   */\n      dup3\n        /* \"#utility.yul\":3189:3207   */\n      add\n        /* \"#utility.yul\":3181:3207   */\n      swap1\n      pop\n        /* \"#utility.yul\":3253:3262   */\n      dup2\n        /* \"#utility.yul\":3247:3251   */\n      dup2\n        /* \"#utility.yul\":3243:3263   */\n      sub\n        /* \"#utility.yul\":3239:3240   */\n      0x00\n        /* \"#utility.yul\":3228:3237   */\n      dup4\n        /* \"#utility.yul\":3224:3241   */\n      add\n        /* \"#utility.yul\":3217:3264   */\n      mstore\n        /* \"#utility.yul\":3281:3412   */\n      tag_106\n        /* \"#utility.yul\":3407:3411   */\n      dup2\n        /* \"#utility.yul\":3281:3412   */\n      tag_82\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3273:3412   */\n      swap1\n      pop\n        /* \"#utility.yul\":3000:3419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3425:3844   */\n    tag_46:\n        /* \"#utility.yul\":3591:3595   */\n      0x00\n        /* \"#utility.yul\":3629:3631   */\n      0x20\n        /* \"#utility.yul\":3618:3627   */\n      dup3\n        /* \"#utility.yul\":3614:3632   */\n      add\n        /* \"#utility.yul\":3606:3632   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3687   */\n      dup2\n        /* \"#utility.yul\":3672:3676   */\n      dup2\n        /* \"#utility.yul\":3668:3688   */\n      sub\n        /* \"#utility.yul\":3664:3665   */\n      0x00\n        /* \"#utility.yul\":3653:3662   */\n      dup4\n        /* \"#utility.yul\":3649:3666   */\n      add\n        /* \"#utility.yul\":3642:3689   */\n      mstore\n        /* \"#utility.yul\":3706:3837   */\n      tag_108\n        /* \"#utility.yul\":3832:3836   */\n      dup2\n        /* \"#utility.yul\":3706:3837   */\n      tag_87\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3698:3837   */\n      swap1\n      pop\n        /* \"#utility.yul\":3425:3844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3850:4269   */\n    tag_54:\n        /* \"#utility.yul\":4016:4020   */\n      0x00\n        /* \"#utility.yul\":4054:4056   */\n      0x20\n        /* \"#utility.yul\":4043:4052   */\n      dup3\n        /* \"#utility.yul\":4039:4057   */\n      add\n        /* \"#utility.yul\":4031:4057   */\n      swap1\n      pop\n        /* \"#utility.yul\":4103:4112   */\n      dup2\n        /* \"#utility.yul\":4097:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4113   */\n      sub\n        /* \"#utility.yul\":4089:4090   */\n      0x00\n        /* \"#utility.yul\":4078:4087   */\n      dup4\n        /* \"#utility.yul\":4074:4091   */\n      add\n        /* \"#utility.yul\":4067:4114   */\n      mstore\n        /* \"#utility.yul\":4131:4262   */\n      tag_110\n        /* \"#utility.yul\":4257:4261   */\n      dup2\n        /* \"#utility.yul\":4131:4262   */\n      tag_92\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4123:4262   */\n      swap1\n      pop\n        /* \"#utility.yul\":3850:4269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4275:4497   */\n    tag_19:\n        /* \"#utility.yul\":4368:4372   */\n      0x00\n        /* \"#utility.yul\":4406:4408   */\n      0x20\n        /* \"#utility.yul\":4395:4404   */\n      dup3\n        /* \"#utility.yul\":4391:4409   */\n      add\n        /* \"#utility.yul\":4383:4409   */\n      swap1\n      pop\n        /* \"#utility.yul\":4419:4490   */\n      tag_112\n        /* \"#utility.yul\":4487:4488   */\n      0x00\n        /* \"#utility.yul\":4476:4485   */\n      dup4\n        /* \"#utility.yul\":4472:4489   */\n      add\n        /* \"#utility.yul\":4463:4469   */\n      dup5\n        /* \"#utility.yul\":4419:4490   */\n      tag_97\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":4275:4497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4584:4753   */\n    tag_79:\n        /* \"#utility.yul\":4668:4679   */\n      0x00\n        /* \"#utility.yul\":4702:4708   */\n      dup3\n        /* \"#utility.yul\":4697:4700   */\n      dup3\n        /* \"#utility.yul\":4690:4709   */\n      mstore\n        /* \"#utility.yul\":4742:4746   */\n      0x20\n        /* \"#utility.yul\":4737:4740   */\n      dup3\n        /* \"#utility.yul\":4733:4747   */\n      add\n        /* \"#utility.yul\":4718:4747   */\n      swap1\n      pop\n        /* \"#utility.yul\":4584:4753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4759:5064   */\n    tag_26:\n        /* \"#utility.yul\":4799:4802   */\n      0x00\n        /* \"#utility.yul\":4818:4838   */\n      tag_117\n        /* \"#utility.yul\":4836:4837   */\n      dup3\n        /* \"#utility.yul\":4818:4838   */\n      tag_100\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4813:4838   */\n      swap2\n      pop\n        /* \"#utility.yul\":4852:4872   */\n      tag_118\n        /* \"#utility.yul\":4870:4871   */\n      dup4\n        /* \"#utility.yul\":4852:4872   */\n      tag_100\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4847:4872   */\n      swap3\n      pop\n        /* \"#utility.yul\":5006:5007   */\n      dup3\n        /* \"#utility.yul\":4938:5004   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4934:5008   */\n      sub\n        /* \"#utility.yul\":4931:4932   */\n      dup3\n        /* \"#utility.yul\":4928:5009   */\n      gt\n        /* \"#utility.yul\":4925:5032   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":5012:5030   */\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4925:5032   */\n    tag_119:\n        /* \"#utility.yul\":5056:5057   */\n      dup3\n        /* \"#utility.yul\":5053:5054   */\n      dup3\n        /* \"#utility.yul\":5049:5058   */\n      add\n        /* \"#utility.yul\":5042:5058   */\n      swap1\n      pop\n        /* \"#utility.yul\":4759:5064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5070:5918   */\n    tag_122:\n        /* \"#utility.yul\":5131:5136   */\n      0x00\n        /* \"#utility.yul\":5138:5142   */\n      dup1\n        /* \"#utility.yul\":5162:5168   */\n      dup3\n        /* \"#utility.yul\":5153:5168   */\n      swap2\n      pop\n        /* \"#utility.yul\":5186:5191   */\n      dup4\n        /* \"#utility.yul\":5177:5191   */\n      swap1\n      pop\n        /* \"#utility.yul\":5200:5912   */\n    tag_124:\n        /* \"#utility.yul\":5221:5222   */\n      0x01\n        /* \"#utility.yul\":5211:5219   */\n      dup6\n        /* \"#utility.yul\":5208:5223   */\n      gt\n        /* \"#utility.yul\":5200:5912   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":5316:5320   */\n      dup1\n        /* \"#utility.yul\":5311:5314   */\n      dup7\n        /* \"#utility.yul\":5307:5321   */\n      div\n        /* \"#utility.yul\":5301:5305   */\n      dup2\n        /* \"#utility.yul\":5298:5322   */\n      gt\n        /* \"#utility.yul\":5295:5345   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":5325:5343   */\n      tag_128\n      tag_121\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5295:5345   */\n    tag_127:\n        /* \"#utility.yul\":5375:5376   */\n      0x01\n        /* \"#utility.yul\":5365:5373   */\n      dup6\n        /* \"#utility.yul\":5361:5377   */\n      and\n        /* \"#utility.yul\":5358:5809   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":5790:5794   */\n      dup1\n        /* \"#utility.yul\":5783:5788   */\n      dup3\n        /* \"#utility.yul\":5779:5795   */\n      mul\n        /* \"#utility.yul\":5770:5795   */\n      swap2\n      pop\n        /* \"#utility.yul\":5358:5809   */\n    tag_129:\n        /* \"#utility.yul\":5840:5844   */\n      dup1\n        /* \"#utility.yul\":5834:5838   */\n      dup2\n        /* \"#utility.yul\":5830:5845   */\n      mul\n        /* \"#utility.yul\":5822:5845   */\n      swap1\n      pop\n        /* \"#utility.yul\":5870:5902   */\n      tag_130\n        /* \"#utility.yul\":5893:5901   */\n      dup6\n        /* \"#utility.yul\":5870:5902   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5858:5902   */\n      swap5\n      pop\n        /* \"#utility.yul\":5200:5912   */\n      jump(tag_124)\n    tag_126:\n        /* \"#utility.yul\":5070:5918   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5924:6209   */\n    tag_42:\n        /* \"#utility.yul\":5984:5989   */\n      0x00\n        /* \"#utility.yul\":6008:6031   */\n      tag_133\n        /* \"#utility.yul\":6026:6030   */\n      dup3\n        /* \"#utility.yul\":6008:6031   */\n      tag_100\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":6000:6031   */\n      swap2\n      pop\n        /* \"#utility.yul\":6052:6079   */\n      tag_134\n        /* \"#utility.yul\":6070:6078   */\n      dup4\n        /* \"#utility.yul\":6052:6079   */\n      tag_100\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":6040:6079   */\n      swap3\n      pop\n        /* \"#utility.yul\":6098:6202   */\n      tag_135\n        /* \"#utility.yul\":6135:6201   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6125:6133   */\n      dup5\n        /* \"#utility.yul\":6119:6123   */\n      dup5\n        /* \"#utility.yul\":6098:6202   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6089:6202   */\n      swap1\n      pop\n        /* \"#utility.yul\":5924:6209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6215:7288   */\n    tag_136:\n        /* \"#utility.yul\":6269:6274   */\n      0x00\n        /* \"#utility.yul\":6460:6468   */\n      dup3\n        /* \"#utility.yul\":6450:6490   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":6481:6482   */\n      0x01\n        /* \"#utility.yul\":6472:6482   */\n      swap1\n      pop\n        /* \"#utility.yul\":6483:6488   */\n      jump(tag_137)\n        /* \"#utility.yul\":6450:6490   */\n    tag_138:\n        /* \"#utility.yul\":6509:6513   */\n      dup2\n        /* \"#utility.yul\":6499:6535   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":6526:6527   */\n      0x00\n        /* \"#utility.yul\":6517:6527   */\n      swap1\n      pop\n        /* \"#utility.yul\":6528:6533   */\n      jump(tag_137)\n        /* \"#utility.yul\":6499:6535   */\n    tag_139:\n        /* \"#utility.yul\":6595:6599   */\n      dup2\n        /* \"#utility.yul\":6643:6644   */\n      0x01\n        /* \"#utility.yul\":6638:6665   */\n      dup2\n      eq\n      tag_141\n      jumpi\n        /* \"#utility.yul\":6679:6680   */\n      0x02\n        /* \"#utility.yul\":6674:6865   */\n      dup2\n      eq\n      tag_142\n      jumpi\n        /* \"#utility.yul\":6588:6865   */\n      jump(tag_140)\n        /* \"#utility.yul\":6638:6665   */\n    tag_141:\n        /* \"#utility.yul\":6656:6657   */\n      0x01\n        /* \"#utility.yul\":6647:6657   */\n      swap2\n      pop\n        /* \"#utility.yul\":6658:6663   */\n      pop\n      jump(tag_137)\n        /* \"#utility.yul\":6674:6865   */\n    tag_142:\n        /* \"#utility.yul\":6719:6722   */\n      0xff\n        /* \"#utility.yul\":6709:6717   */\n      dup5\n        /* \"#utility.yul\":6706:6723   */\n      gt\n        /* \"#utility.yul\":6703:6746   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":6726:6744   */\n      tag_144\n      tag_121\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6703:6746   */\n    tag_143:\n        /* \"#utility.yul\":6775:6783   */\n      dup4\n        /* \"#utility.yul\":6772:6773   */\n      0x02\n        /* \"#utility.yul\":6768:6784   */\n      exp\n        /* \"#utility.yul\":6759:6784   */\n      swap2\n      pop\n        /* \"#utility.yul\":6810:6813   */\n      dup5\n        /* \"#utility.yul\":6803:6808   */\n      dup3\n        /* \"#utility.yul\":6800:6814   */\n      gt\n        /* \"#utility.yul\":6797:6837   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":6817:6835   */\n      tag_146\n      tag_121\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6797:6837   */\n    tag_145:\n        /* \"#utility.yul\":6850:6855   */\n      pop\n      jump(tag_137)\n        /* \"#utility.yul\":6588:6865   */\n    tag_140:\n      pop\n        /* \"#utility.yul\":6974:6976   */\n      0x20\n        /* \"#utility.yul\":6964:6972   */\n      dup4\n        /* \"#utility.yul\":6961:6977   */\n      lt\n        /* \"#utility.yul\":6955:6958   */\n      0x0133\n        /* \"#utility.yul\":6949:6953   */\n      dup4\n        /* \"#utility.yul\":6946:6959   */\n      lt\n        /* \"#utility.yul\":6942:6978   */\n      and\n        /* \"#utility.yul\":6924:6926   */\n      0x4e\n        /* \"#utility.yul\":6914:6922   */\n      dup5\n        /* \"#utility.yul\":6911:6927   */\n      lt\n        /* \"#utility.yul\":6906:6908   */\n      0x0b\n        /* \"#utility.yul\":6900:6904   */\n      dup5\n        /* \"#utility.yul\":6897:6909   */\n      lt\n        /* \"#utility.yul\":6893:6928   */\n      and\n        /* \"#utility.yul\":6877:6988   */\n      or\n        /* \"#utility.yul\":6874:7120   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":7030:7038   */\n      dup3\n        /* \"#utility.yul\":7024:7028   */\n      dup3\n        /* \"#utility.yul\":7020:7039   */\n      exp\n        /* \"#utility.yul\":7011:7039   */\n      swap1\n      pop\n        /* \"#utility.yul\":7065:7068   */\n      dup4\n        /* \"#utility.yul\":7058:7063   */\n      dup2\n        /* \"#utility.yul\":7055:7069   */\n      gt\n        /* \"#utility.yul\":7052:7092   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":7072:7090   */\n      tag_149\n      tag_121\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":7052:7092   */\n    tag_148:\n        /* \"#utility.yul\":7105:7110   */\n      jump(tag_137)\n        /* \"#utility.yul\":6874:7120   */\n    tag_147:\n        /* \"#utility.yul\":7145:7187   */\n      tag_150\n        /* \"#utility.yul\":7183:7186   */\n      dup5\n        /* \"#utility.yul\":7173:7181   */\n      dup5\n        /* \"#utility.yul\":7167:7171   */\n      dup5\n        /* \"#utility.yul\":7164:7165   */\n      0x01\n        /* \"#utility.yul\":7145:7187   */\n      tag_122\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":7130:7187   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":7219:7223   */\n      dup2\n        /* \"#utility.yul\":7214:7217   */\n      dup5\n        /* \"#utility.yul\":7210:7224   */\n      div\n        /* \"#utility.yul\":7203:7208   */\n      dup2\n        /* \"#utility.yul\":7200:7225   */\n      gt\n        /* \"#utility.yul\":7197:7248   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":7228:7246   */\n      tag_152\n      tag_121\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":7197:7248   */\n    tag_151:\n        /* \"#utility.yul\":7277:7281   */\n      dup2\n        /* \"#utility.yul\":7270:7275   */\n      dup2\n        /* \"#utility.yul\":7266:7282   */\n      mul\n        /* \"#utility.yul\":7257:7282   */\n      swap1\n      pop\n        /* \"#utility.yul\":6215:7288   */\n    tag_137:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7294:7642   */\n    tag_24:\n        /* \"#utility.yul\":7334:7341   */\n      0x00\n        /* \"#utility.yul\":7357:7377   */\n      tag_154\n        /* \"#utility.yul\":7375:7376   */\n      dup3\n        /* \"#utility.yul\":7357:7377   */\n      tag_100\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":7352:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7391:7411   */\n      tag_155\n        /* \"#utility.yul\":7409:7410   */\n      dup4\n        /* \"#utility.yul\":7391:7411   */\n      tag_100\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7386:7411   */\n      swap3\n      pop\n        /* \"#utility.yul\":7579:7580   */\n      dup2\n        /* \"#utility.yul\":7511:7577   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7507:7581   */\n      div\n        /* \"#utility.yul\":7504:7505   */\n      dup4\n        /* \"#utility.yul\":7501:7582   */\n      gt\n        /* \"#utility.yul\":7496:7497   */\n      dup3\n        /* \"#utility.yul\":7489:7498   */\n      iszero\n        /* \"#utility.yul\":7482:7499   */\n      iszero\n        /* \"#utility.yul\":7478:7583   */\n      and\n        /* \"#utility.yul\":7475:7606   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":7586:7604   */\n      tag_157\n      tag_121\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":7475:7606   */\n    tag_156:\n        /* \"#utility.yul\":7634:7635   */\n      dup3\n        /* \"#utility.yul\":7631:7632   */\n      dup3\n        /* \"#utility.yul\":7627:7636   */\n      mul\n        /* \"#utility.yul\":7616:7636   */\n      swap1\n      pop\n        /* \"#utility.yul\":7294:7642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7648:7738   */\n    tag_75:\n        /* \"#utility.yul\":7682:7689   */\n      0x00\n        /* \"#utility.yul\":7725:7730   */\n      dup2\n        /* \"#utility.yul\":7718:7731   */\n      iszero\n        /* \"#utility.yul\":7711:7732   */\n      iszero\n        /* \"#utility.yul\":7700:7732   */\n      swap1\n      pop\n        /* \"#utility.yul\":7648:7738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7744:7821   */\n    tag_100:\n        /* \"#utility.yul\":7781:7788   */\n      0x00\n        /* \"#utility.yul\":7810:7815   */\n      dup2\n        /* \"#utility.yul\":7799:7815   */\n      swap1\n      pop\n        /* \"#utility.yul\":7744:7821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7827:8007   */\n    tag_31:\n        /* \"#utility.yul\":7875:7952   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7872:7873   */\n      0x00\n        /* \"#utility.yul\":7865:7953   */\n      mstore\n        /* \"#utility.yul\":7972:7976   */\n      0x01\n        /* \"#utility.yul\":7969:7970   */\n      0x04\n        /* \"#utility.yul\":7962:7977   */\n      mstore\n        /* \"#utility.yul\":7996:8000   */\n      0x24\n        /* \"#utility.yul\":7993:7994   */\n      0x00\n        /* \"#utility.yul\":7986:8001   */\n      revert\n        /* \"#utility.yul\":8013:8193   */\n    tag_121:\n        /* \"#utility.yul\":8061:8138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8058:8059   */\n      0x00\n        /* \"#utility.yul\":8051:8139   */\n      mstore\n        /* \"#utility.yul\":8158:8162   */\n      0x11\n        /* \"#utility.yul\":8155:8156   */\n      0x04\n        /* \"#utility.yul\":8148:8163   */\n      mstore\n        /* \"#utility.yul\":8182:8186   */\n      0x24\n        /* \"#utility.yul\":8179:8180   */\n      0x00\n        /* \"#utility.yul\":8172:8187   */\n      revert\n        /* \"#utility.yul\":8322:8439   */\n    tag_69:\n        /* \"#utility.yul\":8431:8432   */\n      0x00\n        /* \"#utility.yul\":8428:8429   */\n      dup1\n        /* \"#utility.yul\":8421:8433   */\n      revert\n        /* \"#utility.yul\":8445:8547   */\n    tag_131:\n        /* \"#utility.yul\":8487:8495   */\n      0x00\n        /* \"#utility.yul\":8534:8539   */\n      dup2\n        /* \"#utility.yul\":8531:8532   */\n      0x01\n        /* \"#utility.yul\":8527:8540   */\n      shr\n        /* \"#utility.yul\":8506:8540   */\n      swap1\n      pop\n        /* \"#utility.yul\":8445:8547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8553:8729   */\n    tag_81:\n        /* \"#utility.yul\":8693:8721   */\n      0x312067776569206973206e6f7420657175616c20746f20316539000000000000\n        /* \"#utility.yul\":8689:8690   */\n      0x00\n        /* \"#utility.yul\":8681:8687   */\n      dup3\n        /* \"#utility.yul\":8677:8691   */\n      add\n        /* \"#utility.yul\":8670:8722   */\n      mstore\n        /* \"#utility.yul\":8553:8729   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8735:8961   */\n    tag_86:\n        /* \"#utility.yul\":8875:8909   */\n      0x31206574686572206973206e6f7420657175616c20746f203130303030303030\n        /* \"#utility.yul\":8871:8872   */\n      0x00\n        /* \"#utility.yul\":8863:8869   */\n      dup3\n        /* \"#utility.yul\":8859:8873   */\n      add\n        /* \"#utility.yul\":8852:8910   */\n      mstore\n        /* \"#utility.yul\":8944:8953   */\n      0x3030206777656900000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8939:8941   */\n      0x20\n        /* \"#utility.yul\":8931:8937   */\n      dup3\n        /* \"#utility.yul\":8927:8942   */\n      add\n        /* \"#utility.yul\":8920:8954   */\n      mstore\n        /* \"#utility.yul\":8735:8961   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8967:9140   */\n    tag_91:\n        /* \"#utility.yul\":9107:9132   */\n      0x3120776569206973206e6f7420657175616c20746f2031000000000000000000\n        /* \"#utility.yul\":9103:9104   */\n      0x00\n        /* \"#utility.yul\":9095:9101   */\n      dup3\n        /* \"#utility.yul\":9091:9105   */\n      add\n        /* \"#utility.yul\":9084:9133   */\n      mstore\n        /* \"#utility.yul\":8967:9140   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9146:9324   */\n    tag_96:\n        /* \"#utility.yul\":9286:9316   */\n      0x31206574686572206973206e6f7420657175616c20746f203165313800000000\n        /* \"#utility.yul\":9282:9283   */\n      0x00\n        /* \"#utility.yul\":9274:9280   */\n      dup3\n        /* \"#utility.yul\":9270:9284   */\n      add\n        /* \"#utility.yul\":9263:9317   */\n      mstore\n        /* \"#utility.yul\":9146:9324   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9330:9452   */\n    tag_65:\n        /* \"#utility.yul\":9403:9427   */\n      tag_171\n        /* \"#utility.yul\":9421:9426   */\n      dup2\n        /* \"#utility.yul\":9403:9427   */\n      tag_100\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":9396:9401   */\n      dup2\n        /* \"#utility.yul\":9393:9428   */\n      eq\n        /* \"#utility.yul\":9383:9446   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":9442:9443   */\n      0x00\n        /* \"#utility.yul\":9439:9440   */\n      dup1\n        /* \"#utility.yul\":9432:9444   */\n      revert\n        /* \"#utility.yul\":9383:9446   */\n    tag_172:\n        /* \"#utility.yul\":9330:9452   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ee150a55e64e8a6b4db5c2e6a3276ed03ef4373c6edda79e198de90436284fd964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610862806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806319730b441461005157806324475f4c146100815780632e4c697f1461008b57806397e82183146100bb575b600080fd5b61006b600480360381019061006691906102f3565b6100c5565b60405161007891906103dd565b60405180910390f35b6100896100f9565b005b6100a560048036038101906100a091906102f3565b610155565b6040516100b29190610478565b60405180910390f35b6100c361016b565b005b600080600090506003836100d9919061066b565b846100e491906104a4565b42106100ef57600190505b8091505092915050565b6001801461010a576101096106db565b5b603c801461011b5761011a6106db565b5b610e10801461012d5761012c6106db565b5b6201518080146101405761013f6106db565b5b62093a808014610153576101526106db565b5b565b60008183610163919061054d565b905092915050565b600060019050600181146101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ab90610438565b60405180910390fd5b6000633b9aca009050633b9aca008114610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa906103f8565b60405180910390fd5b61020f600a6009610155565b811461021a57600080fd5b6000670de0b6b3a76400009050670de0b6b3a76400008114610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610458565b60405180910390fd5b61027d600a6012610155565b811461028857600080fd5b81633b9aca00610298919061066b565b81146102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d090610418565b60405180910390fd5b505050565b6000813590506102ed81610815565b92915050565b6000806040838503121561030a57610309610739565b5b6000610318858286016102de565b9250506020610329858286016102de565b9150509250929050565b61033c816106c5565b82525050565b600061034f601a83610493565b915061035a8261074b565b602082019050919050565b6000610372602783610493565b915061037d82610774565b604082019050919050565b6000610395601783610493565b91506103a0826107c3565b602082019050919050565b60006103b8601c83610493565b91506103c3826107ec565b602082019050919050565b6103d7816106d1565b82525050565b60006020820190506103f26000830184610333565b92915050565b6000602082019050818103600083015261041181610342565b9050919050565b6000602082019050818103600083015261043181610365565b9050919050565b6000602082019050818103600083015261045181610388565b9050919050565b60006020820190508181036000830152610471816103ab565b9050919050565b600060208201905061048d60008301846103ce565b92915050565b600082825260208201905092915050565b60006104af826106d1565b91506104ba836106d1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104ef576104ee61070a565b5b828201905092915050565b6000808291508390505b6001851115610544578086048111156105205761051f61070a565b5b600185161561052f5780820291505b808102905061053d8561073e565b9450610504565b94509492505050565b6000610558826106d1565b9150610563836106d1565b92506105907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610598565b905092915050565b6000826105a85760019050610664565b816105b65760009050610664565b81600181146105cc57600281146105d657610605565b6001915050610664565b60ff8411156105e8576105e761070a565b5b8360020a9150848211156105ff576105fe61070a565b5b50610664565b5060208310610133831016604e8410600b841016171561063a5782820a9050838111156106355761063461070a565b5b610664565b61064784848460016104fa565b9250905081840481111561065e5761065d61070a565b5b81810290505b9392505050565b6000610676826106d1565b9150610681836106d1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156106ba576106b961070a565b5b828202905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b60008160011c9050919050565b7f312067776569206973206e6f7420657175616c20746f20316539000000000000600082015250565b7f31206574686572206973206e6f7420657175616c20746f20313030303030303060008201527f3030206777656900000000000000000000000000000000000000000000000000602082015250565b7f3120776569206973206e6f7420657175616c20746f2031000000000000000000600082015250565b7f31206574686572206973206e6f7420657175616c20746f203165313800000000600082015250565b61081e816106d1565b811461082957600080fd5b5056fea2646970667358221220ee150a55e64e8a6b4db5c2e6a3276ed03ef4373c6edda79e198de90436284fd964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x862 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19730B44 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x24475F4C EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x2E4C697F EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x97E82183 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xF9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x16B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x3 DUP4 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST DUP5 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x4A4 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xEF JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0x10A JUMPI PUSH2 0x109 PUSH2 0x6DB JUMP JUMPDEST JUMPDEST PUSH1 0x3C DUP1 EQ PUSH2 0x11B JUMPI PUSH2 0x11A PUSH2 0x6DB JUMP JUMPDEST JUMPDEST PUSH2 0xE10 DUP1 EQ PUSH2 0x12D JUMPI PUSH2 0x12C PUSH2 0x6DB JUMP JUMPDEST JUMPDEST PUSH3 0x15180 DUP1 EQ PUSH2 0x140 JUMPI PUSH2 0x13F PUSH2 0x6DB JUMP JUMPDEST JUMPDEST PUSH3 0x93A80 DUP1 EQ PUSH2 0x153 JUMPI PUSH2 0x152 PUSH2 0x6DB JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x3B9ACA00 SWAP1 POP PUSH4 0x3B9ACA00 DUP2 EQ PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA SWAP1 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20F PUSH1 0xA PUSH1 0x9 PUSH2 0x155 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 EQ PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27D PUSH1 0xA PUSH1 0x12 PUSH2 0x155 JUMP JUMPDEST DUP2 EQ PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH4 0x3B9ACA00 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST DUP2 EQ PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x418 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2ED DUP2 PUSH2 0x815 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30A JUMPI PUSH2 0x309 PUSH2 0x739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318 DUP6 DUP3 DUP7 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x329 DUP6 DUP3 DUP7 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x33C DUP2 PUSH2 0x6C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34F PUSH1 0x1A DUP4 PUSH2 0x493 JUMP JUMPDEST SWAP2 POP PUSH2 0x35A DUP3 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372 PUSH1 0x27 DUP4 PUSH2 0x493 JUMP JUMPDEST SWAP2 POP PUSH2 0x37D DUP3 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395 PUSH1 0x17 DUP4 PUSH2 0x493 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A0 DUP3 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 PUSH1 0x1C DUP4 PUSH2 0x493 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C3 DUP3 PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D7 DUP2 PUSH2 0x6D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x333 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x411 DUP2 PUSH2 0x342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x431 DUP2 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x451 DUP2 PUSH2 0x388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x471 DUP2 PUSH2 0x3AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BA DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EE PUSH2 0x70A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x544 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x520 JUMPI PUSH2 0x51F PUSH2 0x70A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x52F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x53D DUP6 PUSH2 0x73E JUMP JUMPDEST SWAP5 POP PUSH2 0x504 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x558 DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x563 DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP PUSH2 0x590 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x598 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5A8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x664 JUMP JUMPDEST DUP2 PUSH2 0x5B6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x664 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5CC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5D6 JUMPI PUSH2 0x605 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x664 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5E8 JUMPI PUSH2 0x5E7 PUSH2 0x70A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x5FF JUMPI PUSH2 0x5FE PUSH2 0x70A JUMP JUMPDEST JUMPDEST POP PUSH2 0x664 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x63A JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x635 JUMPI PUSH2 0x634 PUSH2 0x70A JUMP JUMPDEST JUMPDEST PUSH2 0x664 JUMP JUMPDEST PUSH2 0x647 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x65E JUMPI PUSH2 0x65D PUSH2 0x70A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x676 DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x681 DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6BA JUMPI PUSH2 0x6B9 PUSH2 0x70A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x312067776569206973206E6F7420657175616C20746F20316539000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x31206574686572206973206E6F7420657175616C20746F203130303030303030 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3030206777656900000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3120776569206973206E6F7420657175616C20746F2031000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x31206574686572206973206E6F7420657175616C20746F203165313800000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x81E DUP2 PUSH2 0x6D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE ISZERO EXP SSTORE 0xE6 0x4E DUP11 PUSH12 0x4DB5C2E6A3276ED03EF4373C PUSH15 0xDDA79E198DE90436284FD964736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "62:1621:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@etherUnitExample_79": {
									"entryPoint": 363,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pow_15": {
									"entryPoint": 341,
									"id": 15,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@timeUnitExample_113": {
									"entryPoint": 249,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@validate_143": {
									"entryPoint": 197,
									"id": 143,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de": {
									"entryPoint": 2028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9455:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "235:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "281:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "283:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "283:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "283:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "256:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "265:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "252:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "252:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "277:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:32:1"
															},
															"nodeType": "YulIf",
															"src": "245:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "374:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "389:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "403:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "393:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "418:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "453:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "464:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "449:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "449:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "473:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "428:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "418:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "501:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "516:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "530:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "520:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "197:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "208:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "220:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "228:6:1",
														"type": ""
													}
												],
												"src": "152:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "691:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "728:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "713:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "713:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "701:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "679:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "686:3:1",
														"type": ""
													}
												],
												"src": "632:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "893:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "903:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "969:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "910:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "903:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1075:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d",
																	"nodeType": "YulIdentifier",
																	"src": "986:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "986:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1088:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1099:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1104:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1095:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1095:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:1",
														"type": ""
													}
												],
												"src": "747:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1265:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1275:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:2:1",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1282:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1275:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1447:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf",
																	"nodeType": "YulIdentifier",
																	"src": "1358:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1358:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1460:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1471:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1253:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1261:3:1",
														"type": ""
													}
												],
												"src": "1119:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1637:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1647:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1713:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1718:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1654:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1654:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1819:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b",
																	"nodeType": "YulIdentifier",
																	"src": "1730:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1730:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1730:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1832:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1843:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1832:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1625:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1633:3:1",
														"type": ""
													}
												],
												"src": "1491:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2009:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2019:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2085:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2026:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2191:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de",
																	"nodeType": "YulIdentifier",
																	"src": "2102:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2102:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2204:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2215:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2211:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2204:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1997:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2005:3:1",
														"type": ""
													}
												],
												"src": "1863:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2300:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2317:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2340:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2322:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2310:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2288:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2295:3:1",
														"type": ""
													}
												],
												"src": "2235:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2451:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2461:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2473:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2461:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2535:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2559:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2544:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2497:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2497:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2497:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2423:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2435:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2446:4:1",
														"type": ""
													}
												],
												"src": "2359:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2746:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2756:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2803:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2814:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2799:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2822:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2828:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2818:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2818:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2792:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2792:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2848:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2982:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2856:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2848:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2726:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2741:4:1",
														"type": ""
													}
												],
												"src": "2575:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3193:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3204:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3189:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3189:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3181:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3228:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3239:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3224:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3224:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3247:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3253:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3243:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3217:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3273:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3407:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3281:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3273:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3151:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3166:4:1",
														"type": ""
													}
												],
												"src": "3000:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3618:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3606:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3653:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3664:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3649:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3672:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3678:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3642:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3698:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3832:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3706:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3698:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3576:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:1",
														"type": ""
													}
												],
												"src": "3425:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4021:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4031:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4043:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4054:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4039:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4039:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4031:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4078:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4089:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4097:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4103:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4093:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4093:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4067:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4257:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4131:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4123:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4001:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4016:4:1",
														"type": ""
													}
												],
												"src": "3850:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4373:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4383:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4395:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4406:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4391:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4383:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4463:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4476:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4487:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4472:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4419:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4419:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4419:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4345:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4357:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4368:4:1",
														"type": ""
													}
												],
												"src": "4275:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4543:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4553:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4569:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4563:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4553:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4536:6:1",
														"type": ""
													}
												],
												"src": "4503:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4680:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4697:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4702:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4690:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4690:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4718:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4737:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4733:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4652:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4657:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4668:11:1",
														"type": ""
													}
												],
												"src": "4584:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4803:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4813:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4836:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4818:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4813:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4847:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4870:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4852:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4852:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4847:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5010:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5012:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5012:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5012:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4931:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5006:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4934:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4928:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4928:81:1"
															},
															"nodeType": "YulIf",
															"src": "4925:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5042:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5053:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5056:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5049:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5049:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5042:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4790:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4793:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4799:3:1",
														"type": ""
													}
												],
												"src": "4759:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5143:775:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5153:15:1",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "5162:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5153:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5177:14:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "5186:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5177:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5235:677:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5323:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5325:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5325:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5325:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5301:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "5311:3:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "5316:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5307:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5307:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5298:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5298:24:1"
																		},
																		"nodeType": "YulIf",
																		"src": "5295:50:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5390:419:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5770:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "5783:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "5790:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "5779:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5779:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "5770:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5365:8:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5375:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5361:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5361:16:1"
																		},
																		"nodeType": "YulIf",
																		"src": "5358:451:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5822:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5834:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "5840:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "5830:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5830:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "5822:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5858:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "5893:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "5870:22:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5870:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5858:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5211:8:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5221:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5208:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5208:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5224:2:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5204:3:1",
																"statements": []
															},
															"src": "5200:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "5098:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "5106:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5113:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "5123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5131:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5138:4:1",
														"type": ""
													}
												],
												"src": "5070:848:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5990:219:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6000:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6026:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6008:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6008:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6000:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6040:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6070:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6052:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6052:27:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "6040:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6089:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6119:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6125:8:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6135:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "6098:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6098:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6089:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5965:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5971:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5984:5:1",
														"type": ""
													}
												],
												"src": "5924:285:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6275:1013:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6470:20:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6472:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6481:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6472:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6483:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6460:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6453:16:1"
															},
															"nodeType": "YulIf",
															"src": "6450:40:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6515:20:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6517:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6526:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6517:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6528:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6502:12:1"
															},
															"nodeType": "YulIf",
															"src": "6499:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6645:20:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "6647:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6656:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6647:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6658:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6638:27:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6643:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6689:176:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6724:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6726:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6726:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6726:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6709:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6719:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6706:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6706:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "6703:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6759:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6772:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "6775:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "6768:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6768:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "6759:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6815:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "6817:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6817:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6817:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6803:5:1"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "6810:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "6800:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6800:14:1"
																				},
																				"nodeType": "YulIf",
																				"src": "6797:40:1"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "6850:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6674:191:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6679:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6595:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "6588:277:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6997:123:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7011:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7024:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7030:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7020:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7020:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7011:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7070:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7072:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7072:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7072:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "7058:5:1"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "7065:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7055:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7055:14:1"
																		},
																		"nodeType": "YulIf",
																		"src": "7052:40:1"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7105:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "6900:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6906:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6897:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6897:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "6914:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6924:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6911:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6911:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6893:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "6949:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6955:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6946:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6946:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "6964:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6974:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "6961:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6961:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6942:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6942:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6877:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:111:1"
															},
															"nodeType": "YulIf",
															"src": "6874:246:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7130:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7164:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7167:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7173:8:1"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "7183:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "7145:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7145:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7130:5:1"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7137:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7226:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7228:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7228:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7228:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7203:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "7214:3:1"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7219:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7210:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7200:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7200:25:1"
															},
															"nodeType": "YulIf",
															"src": "7197:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7257:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "7270:5:1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7277:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7266:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7266:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7257:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6245:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6251:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "6261:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6269:5:1",
														"type": ""
													}
												],
												"src": "6215:1073:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7342:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7352:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7375:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7357:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7352:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7386:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7409:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7391:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7391:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7386:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7584:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7586:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7586:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7586:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7496:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7489:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7489:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7482:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7482:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7504:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7511:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7579:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7507:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7507:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7501:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7501:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7478:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:105:1"
															},
															"nodeType": "YulIf",
															"src": "7475:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7616:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7631:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7634:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7627:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7616:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7325:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7328:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7334:7:1",
														"type": ""
													}
												],
												"src": "7294:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7690:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7700:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7725:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7718:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7718:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7711:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7711:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7700:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7672:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7682:7:1",
														"type": ""
													}
												],
												"src": "7648:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7789:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7799:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7810:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7799:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7771:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7781:7:1",
														"type": ""
													}
												],
												"src": "7744:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7855:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7872:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7875:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7865:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7865:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7865:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7969:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7972:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7962:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7993:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7996:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7986:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7986:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "7827:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8041:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8058:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8061:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8051:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8051:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8155:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8158:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8148:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8148:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8179:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8182:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8172:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8172:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8013:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8288:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8305:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8308:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8298:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8298:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8199:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8411:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8428:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8431:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8421:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8421:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8322:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8496:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8506:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8531:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8534:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8527:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "8506:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8477:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "8487:8:1",
														"type": ""
													}
												],
												"src": "8445:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8659:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8681:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8689:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8677:14:1"
																	},
																	{
																		"hexValue": "312067776569206973206e6f7420657175616c20746f20316539",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8693:28:1",
																		"type": "",
																		"value": "1 gwei is not equal to 1e9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8670:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8670:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8651:6:1",
														"type": ""
													}
												],
												"src": "8553:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8841:120:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8863:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8871:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8859:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8859:14:1"
																	},
																	{
																		"hexValue": "31206574686572206973206e6f7420657175616c20746f203130303030303030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8875:34:1",
																		"type": "",
																		"value": "1 ether is not equal to 10000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8852:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8852:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8852:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8931:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8939:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8927:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8927:15:1"
																	},
																	{
																		"hexValue": "30302067776569",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8944:9:1",
																		"type": "",
																		"value": "00 gwei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8920:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8920:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8920:34:1"
														}
													]
												},
												"name": "store_literal_in_memory_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8833:6:1",
														"type": ""
													}
												],
												"src": "8735:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9073:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9095:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9103:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9091:14:1"
																	},
																	{
																		"hexValue": "3120776569206973206e6f7420657175616c20746f2031",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9107:25:1",
																		"type": "",
																		"value": "1 wei is not equal to 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9084:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9065:6:1",
														"type": ""
													}
												],
												"src": "8967:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9252:72:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9274:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9282:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9270:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:14:1"
																	},
																	{
																		"hexValue": "31206574686572206973206e6f7420657175616c20746f2031653138",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9286:30:1",
																		"type": "",
																		"value": "1 ether is not equal to 1e18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9263:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9263:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9263:54:1"
														}
													]
												},
												"name": "store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9244:6:1",
														"type": ""
													}
												],
												"src": "9146:178:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9373:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9430:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9439:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9442:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9432:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9432:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9432:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9396:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9421:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9403:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9403:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9393:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9393:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9386:43:1"
															},
															"nodeType": "YulIf",
															"src": "9383:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9366:5:1",
														"type": ""
													}
												],
												"src": "9330:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d(memPtr) {\n\n        mstore(add(memPtr, 0), \"1 gwei is not equal to 1e9\")\n\n    }\n\n    function store_literal_in_memory_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf(memPtr) {\n\n        mstore(add(memPtr, 0), \"1 ether is not equal to 10000000\")\n\n        mstore(add(memPtr, 32), \"00 gwei\")\n\n    }\n\n    function store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"1 wei is not equal to 1\")\n\n    }\n\n    function store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de(memPtr) {\n\n        mstore(add(memPtr, 0), \"1 ether is not equal to 1e18\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806319730b441461005157806324475f4c146100815780632e4c697f1461008b57806397e82183146100bb575b600080fd5b61006b600480360381019061006691906102f3565b6100c5565b60405161007891906103dd565b60405180910390f35b6100896100f9565b005b6100a560048036038101906100a091906102f3565b610155565b6040516100b29190610478565b60405180910390f35b6100c361016b565b005b600080600090506003836100d9919061066b565b846100e491906104a4565b42106100ef57600190505b8091505092915050565b6001801461010a576101096106db565b5b603c801461011b5761011a6106db565b5b610e10801461012d5761012c6106db565b5b6201518080146101405761013f6106db565b5b62093a808014610153576101526106db565b5b565b60008183610163919061054d565b905092915050565b600060019050600181146101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ab90610438565b60405180910390fd5b6000633b9aca009050633b9aca008114610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa906103f8565b60405180910390fd5b61020f600a6009610155565b811461021a57600080fd5b6000670de0b6b3a76400009050670de0b6b3a76400008114610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610458565b60405180910390fd5b61027d600a6012610155565b811461028857600080fd5b81633b9aca00610298919061066b565b81146102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d090610418565b60405180910390fd5b505050565b6000813590506102ed81610815565b92915050565b6000806040838503121561030a57610309610739565b5b6000610318858286016102de565b9250506020610329858286016102de565b9150509250929050565b61033c816106c5565b82525050565b600061034f601a83610493565b915061035a8261074b565b602082019050919050565b6000610372602783610493565b915061037d82610774565b604082019050919050565b6000610395601783610493565b91506103a0826107c3565b602082019050919050565b60006103b8601c83610493565b91506103c3826107ec565b602082019050919050565b6103d7816106d1565b82525050565b60006020820190506103f26000830184610333565b92915050565b6000602082019050818103600083015261041181610342565b9050919050565b6000602082019050818103600083015261043181610365565b9050919050565b6000602082019050818103600083015261045181610388565b9050919050565b60006020820190508181036000830152610471816103ab565b9050919050565b600060208201905061048d60008301846103ce565b92915050565b600082825260208201905092915050565b60006104af826106d1565b91506104ba836106d1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104ef576104ee61070a565b5b828201905092915050565b6000808291508390505b6001851115610544578086048111156105205761051f61070a565b5b600185161561052f5780820291505b808102905061053d8561073e565b9450610504565b94509492505050565b6000610558826106d1565b9150610563836106d1565b92506105907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610598565b905092915050565b6000826105a85760019050610664565b816105b65760009050610664565b81600181146105cc57600281146105d657610605565b6001915050610664565b60ff8411156105e8576105e761070a565b5b8360020a9150848211156105ff576105fe61070a565b5b50610664565b5060208310610133831016604e8410600b841016171561063a5782820a9050838111156106355761063461070a565b5b610664565b61064784848460016104fa565b9250905081840481111561065e5761065d61070a565b5b81810290505b9392505050565b6000610676826106d1565b9150610681836106d1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156106ba576106b961070a565b5b828202905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b60008160011c9050919050565b7f312067776569206973206e6f7420657175616c20746f20316539000000000000600082015250565b7f31206574686572206973206e6f7420657175616c20746f20313030303030303060008201527f3030206777656900000000000000000000000000000000000000000000000000602082015250565b7f3120776569206973206e6f7420657175616c20746f2031000000000000000000600082015250565b7f31206574686572206973206e6f7420657175616c20746f203165313800000000600082015250565b61081e816106d1565b811461082957600080fd5b5056fea2646970667358221220ee150a55e64e8a6b4db5c2e6a3276ed03ef4373c6edda79e198de90436284fd964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19730B44 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x24475F4C EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x2E4C697F EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x97E82183 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xF9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x16B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x3 DUP4 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST DUP5 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x4A4 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xEF JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0x10A JUMPI PUSH2 0x109 PUSH2 0x6DB JUMP JUMPDEST JUMPDEST PUSH1 0x3C DUP1 EQ PUSH2 0x11B JUMPI PUSH2 0x11A PUSH2 0x6DB JUMP JUMPDEST JUMPDEST PUSH2 0xE10 DUP1 EQ PUSH2 0x12D JUMPI PUSH2 0x12C PUSH2 0x6DB JUMP JUMPDEST JUMPDEST PUSH3 0x15180 DUP1 EQ PUSH2 0x140 JUMPI PUSH2 0x13F PUSH2 0x6DB JUMP JUMPDEST JUMPDEST PUSH3 0x93A80 DUP1 EQ PUSH2 0x153 JUMPI PUSH2 0x152 PUSH2 0x6DB JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x54D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB SWAP1 PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x3B9ACA00 SWAP1 POP PUSH4 0x3B9ACA00 DUP2 EQ PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA SWAP1 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20F PUSH1 0xA PUSH1 0x9 PUSH2 0x155 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 EQ PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27D PUSH1 0xA PUSH1 0x12 PUSH2 0x155 JUMP JUMPDEST DUP2 EQ PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH4 0x3B9ACA00 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST DUP2 EQ PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x418 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2ED DUP2 PUSH2 0x815 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30A JUMPI PUSH2 0x309 PUSH2 0x739 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318 DUP6 DUP3 DUP7 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x329 DUP6 DUP3 DUP7 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x33C DUP2 PUSH2 0x6C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34F PUSH1 0x1A DUP4 PUSH2 0x493 JUMP JUMPDEST SWAP2 POP PUSH2 0x35A DUP3 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372 PUSH1 0x27 DUP4 PUSH2 0x493 JUMP JUMPDEST SWAP2 POP PUSH2 0x37D DUP3 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x395 PUSH1 0x17 DUP4 PUSH2 0x493 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A0 DUP3 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 PUSH1 0x1C DUP4 PUSH2 0x493 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C3 DUP3 PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D7 DUP2 PUSH2 0x6D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x333 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x411 DUP2 PUSH2 0x342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x431 DUP2 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x451 DUP2 PUSH2 0x388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x471 DUP2 PUSH2 0x3AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BA DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4EF JUMPI PUSH2 0x4EE PUSH2 0x70A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x544 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x520 JUMPI PUSH2 0x51F PUSH2 0x70A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x52F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x53D DUP6 PUSH2 0x73E JUMP JUMPDEST SWAP5 POP PUSH2 0x504 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x558 DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x563 DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP PUSH2 0x590 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x598 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5A8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x664 JUMP JUMPDEST DUP2 PUSH2 0x5B6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x664 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5CC JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5D6 JUMPI PUSH2 0x605 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x664 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5E8 JUMPI PUSH2 0x5E7 PUSH2 0x70A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x5FF JUMPI PUSH2 0x5FE PUSH2 0x70A JUMP JUMPDEST JUMPDEST POP PUSH2 0x664 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x63A JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x635 JUMPI PUSH2 0x634 PUSH2 0x70A JUMP JUMPDEST JUMPDEST PUSH2 0x664 JUMP JUMPDEST PUSH2 0x647 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x4FA JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x65E JUMPI PUSH2 0x65D PUSH2 0x70A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x676 DUP3 PUSH2 0x6D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x681 DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6BA JUMPI PUSH2 0x6B9 PUSH2 0x70A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x312067776569206973206E6F7420657175616C20746F20316539000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x31206574686572206973206E6F7420657175616C20746F203130303030303030 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3030206777656900000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3120776569206973206E6F7420657175616C20746F2031000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x31206574686572206973206E6F7420657175616C20746F203165313800000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x81E DUP2 PUSH2 0x6D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE ISZERO EXP SSTORE 0xE6 0x4E DUP11 PUSH12 0x4DB5C2E6A3276ED03EF4373C PUSH15 0xDDA79E198DE90436284FD964736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "62:1621:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1226:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;849:369;;;:::i;:::-;;86:91;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;185:656;;;:::i;:::-;;1226:454;1295:4;1312:16;1331:5;1312:24;;1578:9;1563:12;:24;;;;:::i;:::-;1555:5;:32;;;;:::i;:::-;1536:15;:51;1532:102;;1618:4;1604:18;;1532:102;1661:11;1654:18;;;1226:454;;;;:::o;849:369::-;936:1;923:9;:14;916:22;;;;:::i;:::-;;999:10;986:9;:23;979:31;;;;:::i;:::-;;1072:10;1061:7;:21;1054:29;;;;:::i;:::-;;1139:8;1129:6;:18;1122:26;;;;:::i;:::-;;1203:6;1192:7;:17;1185:25;;;;:::i;:::-;;849:369::o;86:91::-;138:4;168:1;162:4;:7;;;;:::i;:::-;155:14;;86:91;;;;:::o;185:656::-;283:11;297:5;283:19;;341:1;331:6;:11;323:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;423:12;438:6;423:21;;474:3;463:7;:14;455:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;538:10;542:2;546:1;538:3;:10::i;:::-;527:7;:21;519:30;;;;;;604:13;620:7;604:23;;658:4;646:8;:16;638:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;726:11;730:2;734;726:3;:11::i;:::-;714:8;:23;706:32;;;;;;782:7;769:10;:20;;;;:::i;:::-;757:8;:32;749:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;225:616;;;185:656::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:474::-;220:6;228;277:2;265:9;256:7;252:23;248:32;245:119;;;283:79;;:::i;:::-;245:119;403:1;428:53;473:7;464:6;453:9;449:22;428:53;:::i;:::-;418:63;;374:117;530:2;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;501:118;152:474;;;;;:::o;632:109::-;713:21;728:5;713:21;:::i;:::-;708:3;701:34;632:109;;:::o;747:366::-;889:3;910:67;974:2;969:3;910:67;:::i;:::-;903:74;;986:93;1075:3;986:93;:::i;:::-;1104:2;1099:3;1095:12;1088:19;;747:366;;;:::o;1119:::-;1261:3;1282:67;1346:2;1341:3;1282:67;:::i;:::-;1275:74;;1358:93;1447:3;1358:93;:::i;:::-;1476:2;1471:3;1467:12;1460:19;;1119:366;;;:::o;1491:::-;1633:3;1654:67;1718:2;1713:3;1654:67;:::i;:::-;1647:74;;1730:93;1819:3;1730:93;:::i;:::-;1848:2;1843:3;1839:12;1832:19;;1491:366;;;:::o;1863:::-;2005:3;2026:67;2090:2;2085:3;2026:67;:::i;:::-;2019:74;;2102:93;2191:3;2102:93;:::i;:::-;2220:2;2215:3;2211:12;2204:19;;1863:366;;;:::o;2235:118::-;2322:24;2340:5;2322:24;:::i;:::-;2317:3;2310:37;2235:118;;:::o;2359:210::-;2446:4;2484:2;2473:9;2469:18;2461:26;;2497:65;2559:1;2548:9;2544:17;2535:6;2497:65;:::i;:::-;2359:210;;;;:::o;2575:419::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2828:9;2822:4;2818:20;2814:1;2803:9;2799:17;2792:47;2856:131;2982:4;2856:131;:::i;:::-;2848:139;;2575:419;;;:::o;3000:::-;3166:4;3204:2;3193:9;3189:18;3181:26;;3253:9;3247:4;3243:20;3239:1;3228:9;3224:17;3217:47;3281:131;3407:4;3281:131;:::i;:::-;3273:139;;3000:419;;;:::o;3425:::-;3591:4;3629:2;3618:9;3614:18;3606:26;;3678:9;3672:4;3668:20;3664:1;3653:9;3649:17;3642:47;3706:131;3832:4;3706:131;:::i;:::-;3698:139;;3425:419;;;:::o;3850:::-;4016:4;4054:2;4043:9;4039:18;4031:26;;4103:9;4097:4;4093:20;4089:1;4078:9;4074:17;4067:47;4131:131;4257:4;4131:131;:::i;:::-;4123:139;;3850:419;;;:::o;4275:222::-;4368:4;4406:2;4395:9;4391:18;4383:26;;4419:71;4487:1;4476:9;4472:17;4463:6;4419:71;:::i;:::-;4275:222;;;;:::o;4584:169::-;4668:11;4702:6;4697:3;4690:19;4742:4;4737:3;4733:14;4718:29;;4584:169;;;;:::o;4759:305::-;4799:3;4818:20;4836:1;4818:20;:::i;:::-;4813:25;;4852:20;4870:1;4852:20;:::i;:::-;4847:25;;5006:1;4938:66;4934:74;4931:1;4928:81;4925:107;;;5012:18;;:::i;:::-;4925:107;5056:1;5053;5049:9;5042:16;;4759:305;;;;:::o;5070:848::-;5131:5;5138:4;5162:6;5153:15;;5186:5;5177:14;;5200:712;5221:1;5211:8;5208:15;5200:712;;;5316:4;5311:3;5307:14;5301:4;5298:24;5295:50;;;5325:18;;:::i;:::-;5295:50;5375:1;5365:8;5361:16;5358:451;;;5790:4;5783:5;5779:16;5770:25;;5358:451;5840:4;5834;5830:15;5822:23;;5870:32;5893:8;5870:32;:::i;:::-;5858:44;;5200:712;;;5070:848;;;;;;;:::o;5924:285::-;5984:5;6008:23;6026:4;6008:23;:::i;:::-;6000:31;;6052:27;6070:8;6052:27;:::i;:::-;6040:39;;6098:104;6135:66;6125:8;6119:4;6098:104;:::i;:::-;6089:113;;5924:285;;;;:::o;6215:1073::-;6269:5;6460:8;6450:40;;6481:1;6472:10;;6483:5;;6450:40;6509:4;6499:36;;6526:1;6517:10;;6528:5;;6499:36;6595:4;6643:1;6638:27;;;;6679:1;6674:191;;;;6588:277;;6638:27;6656:1;6647:10;;6658:5;;;6674:191;6719:3;6709:8;6706:17;6703:43;;;6726:18;;:::i;:::-;6703:43;6775:8;6772:1;6768:16;6759:25;;6810:3;6803:5;6800:14;6797:40;;;6817:18;;:::i;:::-;6797:40;6850:5;;;6588:277;;6974:2;6964:8;6961:16;6955:3;6949:4;6946:13;6942:36;6924:2;6914:8;6911:16;6906:2;6900:4;6897:12;6893:35;6877:111;6874:246;;;7030:8;7024:4;7020:19;7011:28;;7065:3;7058:5;7055:14;7052:40;;;7072:18;;:::i;:::-;7052:40;7105:5;;6874:246;7145:42;7183:3;7173:8;7167:4;7164:1;7145:42;:::i;:::-;7130:57;;;;7219:4;7214:3;7210:14;7203:5;7200:25;7197:51;;;7228:18;;:::i;:::-;7197:51;7277:4;7270:5;7266:16;7257:25;;6215:1073;;;;;;:::o;7294:348::-;7334:7;7357:20;7375:1;7357:20;:::i;:::-;7352:25;;7391:20;7409:1;7391:20;:::i;:::-;7386:25;;7579:1;7511:66;7507:74;7504:1;7501:81;7496:1;7489:9;7482:17;7478:105;7475:131;;;7586:18;;:::i;:::-;7475:131;7634:1;7631;7627:9;7616:20;;7294:348;;;;:::o;7648:90::-;7682:7;7725:5;7718:13;7711:21;7700:32;;7648:90;;;:::o;7744:77::-;7781:7;7810:5;7799:16;;7744:77;;;:::o;7827:180::-;7875:77;7872:1;7865:88;7972:4;7969:1;7962:15;7996:4;7993:1;7986:15;8013:180;8061:77;8058:1;8051:88;8158:4;8155:1;8148:15;8182:4;8179:1;8172:15;8322:117;8431:1;8428;8421:12;8445:102;8487:8;8534:5;8531:1;8527:13;8506:34;;8445:102;;;:::o;8553:176::-;8693:28;8689:1;8681:6;8677:14;8670:52;8553:176;:::o;8735:226::-;8875:34;8871:1;8863:6;8859:14;8852:58;8944:9;8939:2;8931:6;8927:15;8920:34;8735:226;:::o;8967:173::-;9107:25;9103:1;9095:6;9091:14;9084:49;8967:173;:::o;9146:178::-;9286:30;9282:1;9274:6;9270:14;9263:54;9146:178;:::o;9330:122::-;9403:24;9421:5;9403:24;:::i;:::-;9396:5;9393:35;9383:63;;9442:1;9439;9432:12;9383:63;9330:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "429200",
								"executionCost": "468",
								"totalCost": "429668"
							},
							"external": {
								"etherUnitExample()": "infinite",
								"pow(uint256,uint256)": "infinite",
								"timeUnitExample()": "259",
								"validate(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 1683,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1683,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee150a55e64e8a6b4db5c2e6a3276ed03ef4373c6edda79e198de90436284fd964736f6c63430008070033",
									".code": [
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "19730B44"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "24475F4C"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "2E4C697F"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "97E82183"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 185,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 185,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 185,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 185,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 185,
											"end": 841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 185,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 185,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 185,
											"end": 841,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1563,
											"end": 1575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1560,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1555,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1551,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1587,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1532,
											"end": 1634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1622,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1532,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1680,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 936,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 923,
											"end": 937,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 916,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 916,
											"end": 938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 916,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 916,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 916,
											"end": 938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 916,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 916,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 916,
											"end": 938,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 916,
											"end": 938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 986,
											"end": 995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 986,
											"end": 1009,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1082,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 1061,
											"end": 1068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1061,
											"end": 1082,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1054,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1147,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "93A80"
										},
										{
											"begin": 1192,
											"end": 1199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1209,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1185,
											"end": 1210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1185,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1185,
											"end": 1210,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1185,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1185,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 1218,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 86,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 162,
											"end": 166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 162,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 162,
											"end": 169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 162,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 162,
											"end": 169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 162,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 162,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 177,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 185,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 185,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 283,
											"end": 294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 302,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 331,
											"end": 337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 342,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 323,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 323,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 423,
											"end": 444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 463,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 463,
											"end": 477,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 455,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 455,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 542,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 538,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 538,
											"end": 548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 548,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 538,
											"end": 548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 548,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 519,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 519,
											"end": 549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 519,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 519,
											"end": 549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 519,
											"end": 549,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 519,
											"end": 549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 627,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 604,
											"end": 627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 662,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 646,
											"end": 654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 638,
											"end": 695,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 638,
											"end": 695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 726,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 730,
											"end": 732,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 726,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 726,
											"end": 737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 726,
											"end": 737,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 726,
											"end": 737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 714,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 714,
											"end": 737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 706,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 706,
											"end": 738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 706,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 706,
											"end": 738,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 706,
											"end": 738,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 706,
											"end": 738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 782,
											"end": 789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 769,
											"end": 779,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 769,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 769,
											"end": 789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 769,
											"end": 789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 769,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 789,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 769,
											"end": 789,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 769,
											"end": 789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 757,
											"end": 765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 757,
											"end": 789,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 749,
											"end": 833,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 749,
											"end": 833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 185,
											"end": 841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 277,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 256,
											"end": 263,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 252,
											"end": 275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 248,
											"end": 280,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 403,
											"end": 404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 473,
											"end": 480,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 464,
											"end": 470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 453,
											"end": 462,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 449,
											"end": 471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 418,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 418,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 741,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 632,
											"end": 741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 728,
											"end": 733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 713,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 701,
											"end": 735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 632,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 741,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 969,
											"end": 972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 910,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 903,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1106,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1346,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1447,
											"end": 1450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1718,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1819,
											"end": 1822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 2229,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1863,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2005,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 2085,
											"end": 2088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2026,
											"end": 2093,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2026,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2026,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2191,
											"end": 2194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2102,
											"end": 2195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2102,
											"end": 2195,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2102,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2229,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2235,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2235,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2322,
											"end": 2346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2322,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2359,
											"end": 2569,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2359,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2541,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2497,
											"end": 2562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2497,
											"end": 2562,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2497,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2569,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2569,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2575,
											"end": 2994,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2575,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2856,
											"end": 2987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2856,
											"end": 2987,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2856,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2994,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3000,
											"end": 3419,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3000,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3243,
											"end": 3263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3217,
											"end": 3264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3407,
											"end": 3411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3281,
											"end": 3412,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3281,
											"end": 3412,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3281,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3419,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3425,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3425,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3629,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3618,
											"end": 3627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3688,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3662,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3832,
											"end": 3836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3706,
											"end": 3837,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3706,
											"end": 3837,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3706,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3844,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 4269,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3850,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4113,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4067,
											"end": 4114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4257,
											"end": 4261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4131,
											"end": 4262,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4131,
											"end": 4262,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4131,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 4269,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4275,
											"end": 4497,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4275,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4406,
											"end": 4408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4395,
											"end": 4404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4419,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4485,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4419,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4419,
											"end": 4490,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4419,
											"end": 4490,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4419,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4497,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4584,
											"end": 4753,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4584,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4737,
											"end": 4740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4733,
											"end": 4747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4718,
											"end": 4747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4753,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4759,
											"end": 5064,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4836,
											"end": 4837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4818,
											"end": 4838,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4818,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4818,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4852,
											"end": 4872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4852,
											"end": 4872,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4852,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4872,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 5004,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4934,
											"end": 5008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 5009,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4925,
											"end": 5032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 5032,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4925,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5053,
											"end": 5054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 5064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 5064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 5064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 5064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 5064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5162,
											"end": 5168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5912,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5200,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5222,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5211,
											"end": 5219,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5223,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5912,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5200,
											"end": 5912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5314,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5307,
											"end": 5321,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5322,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5345,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5295,
											"end": 5345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5345,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5295,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5365,
											"end": 5373,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5809,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5358,
											"end": 5809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 5794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5783,
											"end": 5788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5795,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5809,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5358,
											"end": 5809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5840,
											"end": 5844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5845,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 5845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 5845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5893,
											"end": 5901,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5870,
											"end": 5902,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5870,
											"end": 5902,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5870,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5902,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5200,
											"end": 5912,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5912,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5200,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5918,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5924,
											"end": 6209,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5924,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6026,
											"end": 6030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6008,
											"end": 6031,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6008,
											"end": 6031,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6008,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6070,
											"end": 6078,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6052,
											"end": 6079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6052,
											"end": 6079,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6052,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6079,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6135,
											"end": 6201,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6125,
											"end": 6133,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6119,
											"end": 6123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6098,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6098,
											"end": 6202,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6098,
											"end": 6202,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6098,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 6209,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 6209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 6209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 6209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 6209,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6450,
											"end": 6490,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6472,
											"end": 6482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6472,
											"end": 6482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6483,
											"end": 6488,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6490,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6450,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6499,
											"end": 6535,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6528,
											"end": 6533,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6535,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6499,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6638,
											"end": 6665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6638,
											"end": 6665,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6638,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6638,
											"end": 6665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 6680,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6674,
											"end": 6865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6674,
											"end": 6865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6588,
											"end": 6865,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6638,
											"end": 6665,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6638,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6656,
											"end": 6657,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6647,
											"end": 6657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6658,
											"end": 6663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6658,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6658,
											"end": 6663,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6865,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6674,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6722,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6709,
											"end": 6717,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6706,
											"end": 6723,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6746,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6703,
											"end": 6746,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6746,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6703,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6773,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6768,
											"end": 6784,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6837,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6797,
											"end": 6837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6837,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6797,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6865,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6588,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6974,
											"end": 6976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6964,
											"end": 6972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6977,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 6958,
											"name": "PUSH",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6949,
											"end": 6953,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 6959,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6942,
											"end": 6978,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "4E"
										},
										{
											"begin": 6914,
											"end": 6922,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6927,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 6900,
											"end": 6904,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6988,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7120,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6874,
											"end": 7120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7030,
											"end": 7038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7039,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7011,
											"end": 7039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7011,
											"end": 7039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7068,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7058,
											"end": 7063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7069,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7092,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7052,
											"end": 7092,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7072,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7072,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7072,
											"end": 7090,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7072,
											"end": 7090,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7072,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7092,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7052,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7105,
											"end": 7110,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 7120,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 6874,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7183,
											"end": 7186,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7173,
											"end": 7181,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7167,
											"end": 7171,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7145,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7145,
											"end": 7187,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7145,
											"end": 7187,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7145,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7187,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7217,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7210,
											"end": 7224,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7203,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7225,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7248,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 7197,
											"end": 7248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7248,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 7197,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7282,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 7288,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7294,
											"end": 7642,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7294,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7334,
											"end": 7341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7375,
											"end": 7376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7357,
											"end": 7377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7357,
											"end": 7377,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7357,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7391,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7391,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7391,
											"end": 7411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7391,
											"end": 7411,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7391,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7411,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7577,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7507,
											"end": 7581,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7505,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7582,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 7497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7498,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7475,
											"end": 7606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 7586,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7586,
											"end": 7604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7586,
											"end": 7604,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 7586,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7606,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7475,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7627,
											"end": 7636,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7616,
											"end": 7636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7642,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7642,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7648,
											"end": 7738,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7648,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 7732,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 7732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 7732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7738,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7744,
											"end": 7821,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7744,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7821,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7827,
											"end": 8007,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7827,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7952,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7872,
											"end": 7873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7865,
											"end": 7953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7972,
											"end": 7976,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8000,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7993,
											"end": 7994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8001,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8193,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8013,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8061,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8058,
											"end": 8059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8051,
											"end": 8139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8162,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8148,
											"end": 8163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8182,
											"end": 8186,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8179,
											"end": 8180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8187,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8322,
											"end": 8439,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 8322,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8431,
											"end": 8432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8428,
											"end": 8429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8421,
											"end": 8433,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8547,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8445,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8531,
											"end": 8532,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8527,
											"end": 8540,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8506,
											"end": 8540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8506,
											"end": 8540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8547,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8553,
											"end": 8729,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 8553,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8693,
											"end": 8721,
											"name": "PUSH",
											"source": 1,
											"value": "312067776569206973206E6F7420657175616C20746F20316539000000000000"
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8677,
											"end": 8691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8670,
											"end": 8722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8729,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8735,
											"end": 8961,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8735,
											"end": 8961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8909,
											"name": "PUSH",
											"source": 1,
											"value": "31206574686572206973206E6F7420657175616C20746F203130303030303030"
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8863,
											"end": 8869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8852,
											"end": 8910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8953,
											"name": "PUSH",
											"source": 1,
											"value": "3030206777656900000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8939,
											"end": 8941,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8931,
											"end": 8937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8920,
											"end": 8954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8735,
											"end": 8961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8735,
											"end": 8961,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8967,
											"end": 9140,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 8967,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9107,
											"end": 9132,
											"name": "PUSH",
											"source": 1,
											"value": "3120776569206973206E6F7420657175616C20746F2031000000000000000000"
										},
										{
											"begin": 9103,
											"end": 9104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9091,
											"end": 9105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9084,
											"end": 9133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8967,
											"end": 9140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8967,
											"end": 9140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9146,
											"end": 9324,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 9146,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "31206574686572206973206E6F7420657175616C20746F203165313800000000"
										},
										{
											"begin": 9282,
											"end": 9283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9270,
											"end": 9284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9263,
											"end": 9317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9146,
											"end": 9324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9146,
											"end": 9324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9330,
											"end": 9452,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 9330,
											"end": 9452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 9421,
											"end": 9426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9403,
											"end": 9427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9403,
											"end": 9427,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 9403,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9393,
											"end": 9428,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 9383,
											"end": 9446,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9442,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9439,
											"end": 9440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9444,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9446,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 9383,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9452,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"etherUnitExample()": "97e82183",
							"pow(uint256,uint256)": "2e4c697f",
							"timeUnitExample()": "24475f4c",
							"validate(uint256,uint256)": "19730b44"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"etherUnitExample\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"base\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"pow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeUnitExample\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondsAfter\",\"type\":\"uint256\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ep4/example.sol\":\"Example\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ep4/example.sol\":{\"keccak256\":\"0x13f3575fd214befa7512e016f46398b39c78fea866d9428fb6b5245c9cc25387\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0e0bde1edb9494fdc1866ca6f98aa217d5f0c75f35d33428d2f61af0340817\",\"dweb:/ipfs/QmYHmdjiR79sBxuBTSBky7LbLa52cqazPobZgaJ8ce4XUv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Ep4/example.sol": {
				"ast": {
					"absolutePath": "Ep4/example.sol",
					"exportedSymbols": {
						"Example": [
							144
						]
					},
					"id": 145,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "Example",
							"nameLocation": "71:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "144:33:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 10,
														"name": "base",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "162:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 11,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 13,
												"nodeType": "Return",
												"src": "155:14:0"
											}
										]
									},
									"functionSelector": "2e4c697f",
									"id": 15,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pow",
									"nameLocation": "95:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "base",
												"nameLocation": "104:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "99:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "99:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "115:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "110:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "98:19:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:6:0"
									},
									"scope": 144,
									"src": "86:91:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "225:616:0",
										"statements": [
											{
												"assignments": [
													19
												],
												"declarations": [
													{
														"constant": false,
														"id": 19,
														"mutability": "mutable",
														"name": "oneWei",
														"nameLocation": "288:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 78,
														"src": "283:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 18,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "283:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"hexValue": "31",
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "297:5:0",
													"subdenomination": "wei",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "283:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 23,
																"name": "oneWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "331:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "341:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "331:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "3120776569206973206e6f7420657175616c20746f2031",
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "344:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b",
																"typeString": "literal_string \"1 wei is not equal to 1\""
															},
															"value": "1 wei is not equal to 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b",
																"typeString": "literal_string \"1 wei is not equal to 1\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "323:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "323:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "323:47:0"
											},
											{
												"assignments": [
													30
												],
												"declarations": [
													{
														"constant": false,
														"id": 30,
														"mutability": "mutable",
														"name": "oneGWei",
														"nameLocation": "428:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 78,
														"src": "423:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 29,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "423:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"hexValue": "31",
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "438:6:0",
													"subdenomination": "gwei",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000_by_1",
														"typeString": "int_const 1000000000"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "423:21:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 34,
																"name": "oneGWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "316539",
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "474:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1e9"
															},
															"src": "463:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "312067776569206973206e6f7420657175616c20746f20316539",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "479:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d",
																"typeString": "literal_string \"1 gwei is not equal to 1e9\""
															},
															"value": "1 gwei is not equal to 1e9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d",
																"typeString": "literal_string \"1 gwei is not equal to 1e9\""
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "455:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "455:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 41,
																"name": "oneGWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "527:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "3130",
																		"id": 43,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "542:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	{
																		"hexValue": "39",
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "546:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_9_by_1",
																			"typeString": "int_const 9"
																		},
																		"value": "9"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		{
																			"typeIdentifier": "t_rational_9_by_1",
																			"typeString": "int_const 9"
																		}
																	],
																	"id": 42,
																	"name": "pow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "538:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "538:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "527:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "519:30:0"
											},
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "oneEther",
														"nameLocation": "609:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 78,
														"src": "604:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "604:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"hexValue": "31",
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "620:7:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "604:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 54,
																"name": "oneEther",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "646:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "658:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "646:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "31206574686572206973206e6f7420657175616c20746f2031653138",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "664:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de",
																"typeString": "literal_string \"1 ether is not equal to 1e18\""
															},
															"value": "1 ether is not equal to 1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de",
																"typeString": "literal_string \"1 ether is not equal to 1e18\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "638:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "638:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "638:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "oneEther",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "714:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "3130",
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "730:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	{
																		"hexValue": "3138",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "734:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		{
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		}
																	],
																	"id": 62,
																	"name": "pow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "726:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "726:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "714:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 60,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "706:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "706:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 70,
																"name": "oneEther",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "757:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030303030303030",
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "769:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000_by_1",
																		"typeString": "int_const 1000000000"
																	},
																	"value": "1000000000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 72,
																	"name": "oneGWei",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "782:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "769:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "757:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "31206574686572206973206e6f7420657175616c20746f20313030303030303030302067776569",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "791:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf",
																"typeString": "literal_string \"1 ether is not equal to 1000000000 gwei\""
															},
															"value": "1 ether is not equal to 1000000000 gwei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b04f710ce95935c43fe6e1a24beef313f6948aa1c38038bd9cfa6d4a70fe9cbf",
																"typeString": "literal_string \"1 ether is not equal to 1000000000 gwei\""
															}
														],
														"id": 69,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "749:84:0"
											}
										]
									},
									"functionSelector": "97e82183",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "etherUnitExample",
									"nameLocation": "194:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:0:0"
									},
									"scope": 144,
									"src": "185:656:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "888:330:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "923:9:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "936:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "923:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 82,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "916:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "916:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "916:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "986:9:0",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "999:10:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"src": "986:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 88,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "979:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "979:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "979:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1061:7:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1072:10:0",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "60"
															},
															"src": "1061:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 94,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1054:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1054:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1054:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1129:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3234",
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1139:8:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "24"
															},
															"src": "1129:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 100,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1122:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1122:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1192:7:0",
																"subdenomination": "weeks",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "37",
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1203:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "7"
															},
															"src": "1192:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 106,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1185:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1185:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1185:25:0"
											}
										]
									},
									"functionSelector": "24475f4c",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timeUnitExample",
									"nameLocation": "858:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:0"
									},
									"scope": 144,
									"src": "849:369:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "1301:379:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"mutability": "mutable",
														"name": "isValidated",
														"nameLocation": "1317:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 142,
														"src": "1312:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 122,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1312:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1331:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1312:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 126,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1536:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1536:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 128,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1555:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 129,
																"name": "secondsAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1563:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1578:9:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1563:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1555:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1536:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "區塊的時間戳記至少在3秒以前, 才算有效。\n 注意: 此為範例，真實合約請不要使用block.timestamp來進行檢驗，具有弱點風險。",
												"id": 139,
												"nodeType": "IfStatement",
												"src": "1532:102:0",
												"trueBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "1589:45:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 134,
																	"name": "isValidated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1604:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1604:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "1604:18:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 140,
													"name": "isValidated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "1661:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 121,
												"id": 141,
												"nodeType": "Return",
												"src": "1654:18:0"
											}
										]
									},
									"functionSelector": "19730b44",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validate",
									"nameLocation": "1235:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1244:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1244:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "secondsAfter",
												"nameLocation": "1261:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1256:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:31:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1295:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1295:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1294:6:0"
									},
									"scope": 144,
									"src": "1226:454:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 145,
							"src": "62:1621:0",
							"usedErrors": []
						}
					],
					"src": "33:1650:0"
				},
				"id": 0
			}
		}
	}
}