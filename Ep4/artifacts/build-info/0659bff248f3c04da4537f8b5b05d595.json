{
	"id": "0659bff248f3c04da4537f8b5b05d595",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ep4/example.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract Example {\r\n    function TimeUnitExample() public pure {\r\n        // 1秒\r\n        assert(1 seconds == 1);\r\n\r\n        // 1分鐘 = 60秒\r\n        assert(1 minutes == 60 seconds);\r\n\r\n        // 1小時 = 60分鐘\r\n        assert(1 hours == 60 minutes);\r\n\r\n        // 1天=24小時\r\n        assert(1 days == 24 hours);\r\n\r\n        // 1周 = 7天\r\n        assert(1 weeks == 7 days);\r\n    }\r\n\r\n    function validate(uint start, uint secondsAfter) public {\r\n\t\t// 區塊的時間戳記至少在3秒以前, 才算有效\r\n        if (block.timestamp >= start + secondsAfter * 3 seconds) {\r\n        // ...\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Ep4/example.sol": {
				"Example": {
					"abi": [
						{
							"inputs": [],
							"name": "TimeUnitExample",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "secondsAfter",
									"type": "uint256"
								}
							],
							"name": "validate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ep4/example.sol\":60:684  contract Example {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ep4/example.sol\":60:684  contract Example {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x19730b44\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9b92a9e8\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ep4/example.sol\":461:681  function validate(uint start, uint secondsAfter) public {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"Ep4/example.sol\":84:453  function TimeUnitExample() public pure {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Ep4/example.sol\":461:681  function validate(uint start, uint secondsAfter) public {\r... */\n    tag_8:\n        /* \"Ep4/example.sol\":635:644  3 seconds */\n      0x03\n        /* \"Ep4/example.sol\":620:632  secondsAfter */\n      dup2\n        /* \"Ep4/example.sol\":620:644  secondsAfter * 3 seconds */\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"Ep4/example.sol\":612:617  start */\n      dup3\n        /* \"Ep4/example.sol\":612:644  start + secondsAfter * 3 seconds */\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"Ep4/example.sol\":593:644  block.timestamp >= start + secondsAfter * 3 seconds */\n      pop\n        /* \"Ep4/example.sol\":461:681  function validate(uint start, uint secondsAfter) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Ep4/example.sol\":84:453  function TimeUnitExample() public pure {\r... */\n    tag_10:\n        /* \"Ep4/example.sol\":171:172  1 */\n      0x01\n        /* \"Ep4/example.sol\":158:167  1 seconds */\n      dup1\n        /* \"Ep4/example.sol\":158:172  1 seconds == 1 */\n      eq\n        /* \"Ep4/example.sol\":151:173  assert(1 seconds == 1) */\n      tag_18\n      jumpi\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n    tag_18:\n        /* \"Ep4/example.sol\":234:244  60 seconds */\n      0x3c\n        /* \"Ep4/example.sol\":221:230  1 minutes */\n      dup1\n        /* \"Ep4/example.sol\":221:244  1 minutes == 60 seconds */\n      eq\n        /* \"Ep4/example.sol\":214:245  assert(1 minutes == 60 seconds) */\n      tag_21\n      jumpi\n      tag_22\n      tag_20\n      jump\t// in\n    tag_22:\n    tag_21:\n        /* \"Ep4/example.sol\":307:317  60 minutes */\n      0x0e10\n        /* \"Ep4/example.sol\":296:303  1 hours */\n      dup1\n        /* \"Ep4/example.sol\":296:317  1 hours == 60 minutes */\n      eq\n        /* \"Ep4/example.sol\":289:318  assert(1 hours == 60 minutes) */\n      tag_23\n      jumpi\n      tag_24\n      tag_20\n      jump\t// in\n    tag_24:\n    tag_23:\n        /* \"Ep4/example.sol\":374:382  24 hours */\n      0x015180\n        /* \"Ep4/example.sol\":364:370  1 days */\n      dup1\n        /* \"Ep4/example.sol\":364:382  1 days == 24 hours */\n      eq\n        /* \"Ep4/example.sol\":357:383  assert(1 days == 24 hours) */\n      tag_25\n      jumpi\n      tag_26\n      tag_20\n      jump\t// in\n    tag_26:\n    tag_25:\n        /* \"Ep4/example.sol\":438:444  7 days */\n      0x093a80\n        /* \"Ep4/example.sol\":427:434  1 weeks */\n      dup1\n        /* \"Ep4/example.sol\":427:444  1 weeks == 7 days */\n      eq\n        /* \"Ep4/example.sol\":420:445  assert(1 weeks == 7 days) */\n      tag_27\n      jumpi\n      tag_28\n      tag_20\n      jump\t// in\n    tag_28:\n    tag_27:\n        /* \"Ep4/example.sol\":84:453  function TimeUnitExample() public pure {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_30:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_32\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:626   */\n    tag_7:\n        /* \"#utility.yul\":220:226   */\n      0x00\n        /* \"#utility.yul\":228:234   */\n      dup1\n        /* \"#utility.yul\":277:279   */\n      0x40\n        /* \"#utility.yul\":265:274   */\n      dup4\n        /* \"#utility.yul\":256:263   */\n      dup6\n        /* \"#utility.yul\":252:275   */\n      sub\n        /* \"#utility.yul\":248:280   */\n      slt\n        /* \"#utility.yul\":245:364   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":283:362   */\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":245:364   */\n    tag_35:\n        /* \"#utility.yul\":403:404   */\n      0x00\n        /* \"#utility.yul\":428:481   */\n      tag_38\n        /* \"#utility.yul\":473:480   */\n      dup6\n        /* \"#utility.yul\":464:470   */\n      dup3\n        /* \"#utility.yul\":453:462   */\n      dup7\n        /* \"#utility.yul\":449:471   */\n      add\n        /* \"#utility.yul\":428:481   */\n      tag_30\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":418:481   */\n      swap3\n      pop\n        /* \"#utility.yul\":374:491   */\n      pop\n        /* \"#utility.yul\":530:532   */\n      0x20\n        /* \"#utility.yul\":556:609   */\n      tag_39\n        /* \"#utility.yul\":601:608   */\n      dup6\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup7\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_30\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":501:619   */\n      pop\n        /* \"#utility.yul\":152:626   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":713:1018   */\n    tag_15:\n        /* \"#utility.yul\":753:756   */\n      0x00\n        /* \"#utility.yul\":772:792   */\n      tag_43\n        /* \"#utility.yul\":790:791   */\n      dup3\n        /* \"#utility.yul\":772:792   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":767:792   */\n      swap2\n      pop\n        /* \"#utility.yul\":806:826   */\n      tag_45\n        /* \"#utility.yul\":824:825   */\n      dup4\n        /* \"#utility.yul\":806:826   */\n      tag_44\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":801:826   */\n      swap3\n      pop\n        /* \"#utility.yul\":960:961   */\n      dup3\n        /* \"#utility.yul\":892:958   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":888:962   */\n      sub\n        /* \"#utility.yul\":885:886   */\n      dup3\n        /* \"#utility.yul\":882:963   */\n      gt\n        /* \"#utility.yul\":879:986   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":966:984   */\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":879:986   */\n    tag_46:\n        /* \"#utility.yul\":1010:1011   */\n      dup3\n        /* \"#utility.yul\":1007:1008   */\n      dup3\n        /* \"#utility.yul\":1003:1012   */\n      add\n        /* \"#utility.yul\":996:1012   */\n      swap1\n      pop\n        /* \"#utility.yul\":713:1018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1024:1372   */\n    tag_13:\n        /* \"#utility.yul\":1064:1071   */\n      0x00\n        /* \"#utility.yul\":1087:1107   */\n      tag_50\n        /* \"#utility.yul\":1105:1106   */\n      dup3\n        /* \"#utility.yul\":1087:1107   */\n      tag_44\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1082:1107   */\n      swap2\n      pop\n        /* \"#utility.yul\":1121:1141   */\n      tag_51\n        /* \"#utility.yul\":1139:1140   */\n      dup4\n        /* \"#utility.yul\":1121:1141   */\n      tag_44\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1116:1141   */\n      swap3\n      pop\n        /* \"#utility.yul\":1309:1310   */\n      dup2\n        /* \"#utility.yul\":1241:1307   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1237:1311   */\n      div\n        /* \"#utility.yul\":1234:1235   */\n      dup4\n        /* \"#utility.yul\":1231:1312   */\n      gt\n        /* \"#utility.yul\":1226:1227   */\n      dup3\n        /* \"#utility.yul\":1219:1228   */\n      iszero\n        /* \"#utility.yul\":1212:1229   */\n      iszero\n        /* \"#utility.yul\":1208:1313   */\n      and\n        /* \"#utility.yul\":1205:1336   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":1316:1334   */\n      tag_53\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1205:1336   */\n    tag_52:\n        /* \"#utility.yul\":1364:1365   */\n      dup3\n        /* \"#utility.yul\":1361:1362   */\n      dup3\n        /* \"#utility.yul\":1357:1366   */\n      mul\n        /* \"#utility.yul\":1346:1366   */\n      swap1\n      pop\n        /* \"#utility.yul\":1024:1372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1378:1455   */\n    tag_44:\n        /* \"#utility.yul\":1415:1422   */\n      0x00\n        /* \"#utility.yul\":1444:1449   */\n      dup2\n        /* \"#utility.yul\":1433:1449   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1461:1641   */\n    tag_20:\n        /* \"#utility.yul\":1509:1586   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1499:1587   */\n      mstore\n        /* \"#utility.yul\":1606:1610   */\n      0x01\n        /* \"#utility.yul\":1603:1604   */\n      0x04\n        /* \"#utility.yul\":1596:1611   */\n      mstore\n        /* \"#utility.yul\":1630:1634   */\n      0x24\n        /* \"#utility.yul\":1627:1628   */\n      0x00\n        /* \"#utility.yul\":1620:1635   */\n      revert\n        /* \"#utility.yul\":1647:1827   */\n    tag_48:\n        /* \"#utility.yul\":1695:1772   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1692:1693   */\n      0x00\n        /* \"#utility.yul\":1685:1773   */\n      mstore\n        /* \"#utility.yul\":1792:1796   */\n      0x11\n        /* \"#utility.yul\":1789:1790   */\n      0x04\n        /* \"#utility.yul\":1782:1797   */\n      mstore\n        /* \"#utility.yul\":1816:1820   */\n      0x24\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1806:1821   */\n      revert\n        /* \"#utility.yul\":1956:2073   */\n    tag_37:\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      dup1\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2079:2201   */\n    tag_33:\n        /* \"#utility.yul\":2152:2176   */\n      tag_61\n        /* \"#utility.yul\":2170:2175   */\n      dup2\n        /* \"#utility.yul\":2152:2176   */\n      tag_44\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2145:2150   */\n      dup2\n        /* \"#utility.yul\":2142:2177   */\n      eq\n        /* \"#utility.yul\":2132:2195   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":2191:2192   */\n      0x00\n        /* \"#utility.yul\":2188:2189   */\n      dup1\n        /* \"#utility.yul\":2181:2193   */\n      revert\n        /* \"#utility.yul\":2132:2195   */\n    tag_62:\n        /* \"#utility.yul\":2079:2201   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122015b85c85852113ac1739fff8f71c12b938207d549c051a0be4137de589190f2564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610299806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806319730b441461003b5780639b92a9e814610057575b600080fd5b610055600480360381019061005091906100ef565b610061565b005b61005f61007e565b005b60038161006e9190610185565b82610079919061012f565b505050565b6001801461008f5761008e6101e9565b5b603c80146100a05761009f6101e9565b5b610e1080146100b2576100b16101e9565b5b6201518080146100c5576100c46101e9565b5b62093a8080146100d8576100d76101e9565b5b565b6000813590506100e98161024c565b92915050565b6000806040838503121561010657610105610247565b5b6000610114858286016100da565b9250506020610125858286016100da565b9150509250929050565b600061013a826101df565b9150610145836101df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561017a57610179610218565b5b828201905092915050565b6000610190826101df565b915061019b836101df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156101d4576101d3610218565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b610255816101df565b811461026057600080fd5b5056fea264697066735822122015b85c85852113ac1739fff8f71c12b938207d549c051a0be4137de589190f2564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19730B44 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9B92A9E8 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xEF JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP2 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x185 JUMP JUMPDEST DUP3 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0x8F JUMPI PUSH2 0x8E PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3C DUP1 EQ PUSH2 0xA0 JUMPI PUSH2 0x9F PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH2 0xE10 DUP1 EQ PUSH2 0xB2 JUMPI PUSH2 0xB1 PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH3 0x15180 DUP1 EQ PUSH2 0xC5 JUMPI PUSH2 0xC4 PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH3 0x93A80 DUP1 EQ PUSH2 0xD8 JUMPI PUSH2 0xD7 PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE9 DUP2 PUSH2 0x24C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x106 JUMPI PUSH2 0x105 PUSH2 0x247 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114 DUP6 DUP3 DUP7 ADD PUSH2 0xDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x125 DUP6 DUP3 DUP7 ADD PUSH2 0xDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP2 POP PUSH2 0x145 DUP4 PUSH2 0x1DF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x17A JUMPI PUSH2 0x179 PUSH2 0x218 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190 DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP2 POP PUSH2 0x19B DUP4 PUSH2 0x1DF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D4 JUMPI PUSH2 0x1D3 PUSH2 0x218 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 DUP2 PUSH2 0x1DF JUMP JUMPDEST DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xB8 0x5C DUP6 DUP6 0x21 SGT 0xAC OR CODECOPY SELFDESTRUCT 0xF8 0xF7 SHR SLT 0xB9 CODESIZE KECCAK256 PUSH30 0x549C051A0BE4137DE589190F2564736F6C63430008070033000000000000 ",
							"sourceMap": "60:624:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TimeUnitExample_35": {
									"entryPoint": 126,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@validate_53": {
									"entryPoint": 97,
									"id": 53,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2204:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "235:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "281:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "283:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "283:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "283:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "256:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "265:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "252:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "252:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "277:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:32:1"
															},
															"nodeType": "YulIf",
															"src": "245:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "374:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "389:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "403:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "393:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "418:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "453:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "464:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "449:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "449:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "473:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "428:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "418:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "501:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "516:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "530:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "520:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "197:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "208:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "220:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "228:6:1",
														"type": ""
													}
												],
												"src": "152:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "672:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "682:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "698:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "692:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "665:6:1",
														"type": ""
													}
												],
												"src": "632:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "767:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "772:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "767:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "801:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "824:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "806:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "801:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "964:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "966:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "966:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "966:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "885:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "892:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "960:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "888:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "888:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "882:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "882:81:1"
															},
															"nodeType": "YulIf",
															"src": "879:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "996:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1007:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1010:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1003:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "996:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "744:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "747:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "753:3:1",
														"type": ""
													}
												],
												"src": "713:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1072:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1082:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1105:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1087:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1082:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1116:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1139:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1121:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1116:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1314:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1316:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1316:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1316:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1226:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1219:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1219:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1212:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1212:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1234:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1241:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1309:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1237:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1237:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1231:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1231:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:105:1"
															},
															"nodeType": "YulIf",
															"src": "1205:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1346:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1361:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1364:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1357:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1346:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1055:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1058:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1064:7:1",
														"type": ""
													}
												],
												"src": "1024:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1423:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1433:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1444:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1433:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1405:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1415:7:1",
														"type": ""
													}
												],
												"src": "1378:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1489:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1506:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1499:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1606:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1596:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1596:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1596:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1627:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1630:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1620:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1620:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "1461:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1675:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1692:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1695:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1685:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1789:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1792:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1782:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1813:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1816:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1806:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1647:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1922:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1939:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1942:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1932:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1932:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1833:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2045:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2062:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2065:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2055:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2055:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1956:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2122:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2179:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2191:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2181:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2181:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2181:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2145:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2170:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2152:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2152:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2142:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2142:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:43:1"
															},
															"nodeType": "YulIf",
															"src": "2132:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2115:5:1",
														"type": ""
													}
												],
												"src": "2079:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806319730b441461003b5780639b92a9e814610057575b600080fd5b610055600480360381019061005091906100ef565b610061565b005b61005f61007e565b005b60038161006e9190610185565b82610079919061012f565b505050565b6001801461008f5761008e6101e9565b5b603c80146100a05761009f6101e9565b5b610e1080146100b2576100b16101e9565b5b6201518080146100c5576100c46101e9565b5b62093a8080146100d8576100d76101e9565b5b565b6000813590506100e98161024c565b92915050565b6000806040838503121561010657610105610247565b5b6000610114858286016100da565b9250506020610125858286016100da565b9150509250929050565b600061013a826101df565b9150610145836101df565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561017a57610179610218565b5b828201905092915050565b6000610190826101df565b915061019b836101df565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156101d4576101d3610218565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b610255816101df565b811461026057600080fd5b5056fea264697066735822122015b85c85852113ac1739fff8f71c12b938207d549c051a0be4137de589190f2564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19730B44 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9B92A9E8 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xEF JUMP JUMPDEST PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH2 0x7E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP2 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x185 JUMP JUMPDEST DUP3 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0x8F JUMPI PUSH2 0x8E PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3C DUP1 EQ PUSH2 0xA0 JUMPI PUSH2 0x9F PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH2 0xE10 DUP1 EQ PUSH2 0xB2 JUMPI PUSH2 0xB1 PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH3 0x15180 DUP1 EQ PUSH2 0xC5 JUMPI PUSH2 0xC4 PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST PUSH3 0x93A80 DUP1 EQ PUSH2 0xD8 JUMPI PUSH2 0xD7 PUSH2 0x1E9 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE9 DUP2 PUSH2 0x24C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x106 JUMPI PUSH2 0x105 PUSH2 0x247 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114 DUP6 DUP3 DUP7 ADD PUSH2 0xDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x125 DUP6 DUP3 DUP7 ADD PUSH2 0xDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP2 POP PUSH2 0x145 DUP4 PUSH2 0x1DF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x17A JUMPI PUSH2 0x179 PUSH2 0x218 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x190 DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP2 POP PUSH2 0x19B DUP4 PUSH2 0x1DF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D4 JUMPI PUSH2 0x1D3 PUSH2 0x218 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 DUP2 PUSH2 0x1DF JUMP JUMPDEST DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xB8 0x5C DUP6 DUP6 0x21 SGT 0xAC OR CODECOPY SELFDESTRUCT 0xF8 0xF7 SHR SLT 0xB9 CODESIZE KECCAK256 PUSH30 0x549C051A0BE4137DE589190F2564736F6C63430008070033000000000000 ",
							"sourceMap": "60:624:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;461:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;84:369;;;:::i;:::-;;461:220;635:9;620:12;:24;;;;:::i;:::-;612:5;:32;;;;:::i;:::-;593:51;461:220;;:::o;84:369::-;171:1;158:9;:14;151:22;;;;:::i;:::-;;234:10;221:9;:23;214:31;;;;:::i;:::-;;307:10;296:7;:21;289:29;;;;:::i;:::-;;374:8;364:6;:18;357:26;;;;:::i;:::-;;438:6;427:7;:17;420:25;;;;:::i;:::-;;84:369::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:474::-;220:6;228;277:2;265:9;256:7;252:23;248:32;245:119;;;283:79;;:::i;:::-;245:119;403:1;428:53;473:7;464:6;453:9;449:22;428:53;:::i;:::-;418:63;;374:117;530:2;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;501:118;152:474;;;;;:::o;713:305::-;753:3;772:20;790:1;772:20;:::i;:::-;767:25;;806:20;824:1;806:20;:::i;:::-;801:25;;960:1;892:66;888:74;885:1;882:81;879:107;;;966:18;;:::i;:::-;879:107;1010:1;1007;1003:9;996:16;;713:305;;;;:::o;1024:348::-;1064:7;1087:20;1105:1;1087:20;:::i;:::-;1082:25;;1121:20;1139:1;1121:20;:::i;:::-;1116:25;;1309:1;1241:66;1237:74;1234:1;1231:81;1226:1;1219:9;1212:17;1208:105;1205:131;;;1316:18;;:::i;:::-;1205:131;1364:1;1361;1357:9;1346:20;;1024:348;;;;:::o;1378:77::-;1415:7;1444:5;1433:16;;1378:77;;;:::o;1461:180::-;1509:77;1506:1;1499:88;1606:4;1603:1;1596:15;1630:4;1627:1;1620:15;1647:180;1695:77;1692:1;1685:88;1792:4;1789:1;1782:15;1816:4;1813:1;1806:15;1956:117;2065:1;2062;2055:12;2079:122;2152:24;2170:5;2152:24;:::i;:::-;2145:5;2142:35;2132:63;;2191:1;2188;2181:12;2132:63;2079:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "133000",
								"executionCost": "177",
								"totalCost": "133177"
							},
							"external": {
								"TimeUnitExample()": "259",
								"validate(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 684,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 684,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015b85c85852113ac1739fff8f71c12b938207d549c051a0be4137de589190f2564736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "19730B44"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "9B92A9E8"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 84,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 84,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 84,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 84,
											"end": 453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 84,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 84,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 453,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 461,
											"end": 681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 635,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 620,
											"end": 632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 612,
											"end": 617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 612,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 612,
											"end": 644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 612,
											"end": 644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 612,
											"end": 644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 612,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 612,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 593,
											"end": 644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 461,
											"end": 681,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 84,
											"end": 453,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 84,
											"end": 453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 172,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 158,
											"end": 172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 151,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 151,
											"end": 173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 151,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 151,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 151,
											"end": 173,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 151,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 151,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 151,
											"end": 173,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 151,
											"end": 173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 234,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 221,
											"end": 230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 221,
											"end": 244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 214,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 214,
											"end": 245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 214,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 214,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 214,
											"end": 245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 214,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 214,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 245,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 214,
											"end": 245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 296,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 317,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 289,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 289,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 289,
											"end": 318,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 318,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 364,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 382,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 357,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 357,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 438,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "93A80"
										},
										{
											"begin": 427,
											"end": 434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 444,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 445,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 420,
											"end": 445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 84,
											"end": 453,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 277,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 256,
											"end": 263,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 252,
											"end": 275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 248,
											"end": 280,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 403,
											"end": 404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 473,
											"end": 480,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 464,
											"end": 470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 453,
											"end": 462,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 449,
											"end": 471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 418,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 418,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 713,
											"end": 1018,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 713,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 753,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 790,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 772,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 772,
											"end": 792,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 772,
											"end": 792,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 772,
											"end": 792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 767,
											"end": 792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 824,
											"end": 825,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 806,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 806,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 806,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 801,
											"end": 826,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 801,
											"end": 826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 960,
											"end": 961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 892,
											"end": 958,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 888,
											"end": 962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 882,
											"end": 963,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 879,
											"end": 986,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 879,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 879,
											"end": 986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 879,
											"end": 986,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 879,
											"end": 986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1007,
											"end": 1008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 713,
											"end": 1018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 713,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 713,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 713,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 713,
											"end": 1018,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1024,
											"end": 1372,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1024,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1105,
											"end": 1106,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1307,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1237,
											"end": 1311,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1235,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1312,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1205,
											"end": 1336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1205,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1372,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1372,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1641,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1586,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1610,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1627,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1635,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1647,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1789,
											"end": 1790,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1782,
											"end": 1797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1820,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 2073,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1956,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2079,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2152,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2177,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2132,
											"end": 2195,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2193,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2195,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2132,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2201,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"TimeUnitExample()": "9b92a9e8",
							"validate(uint256,uint256)": "19730b44"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TimeUnitExample\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondsAfter\",\"type\":\"uint256\"}],\"name\":\"validate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ep4/example.sol\":\"Example\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ep4/example.sol\":{\"keccak256\":\"0x5834742c38e20624a2588e75388887d3b4fa3b1819e3dcea8a52698f2ae2a30f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23d1d1a465f9a6876d5e65985ab1a87c7c59a8b03a315ee809729dec5ecf6c36\",\"dweb:/ipfs/QmYrTnngocHtnD3tq9rRXqNAFgsAa96yaW3b9iwUZujAio\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> Ep4/example.sol:22:5:\n   |\n22 |     function validate(uint start, uint secondsAfter) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 681,
					"file": "Ep4/example.sol",
					"start": 461
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Ep4/example.sol": {
				"ast": {
					"absolutePath": "Ep4/example.sol",
					"exportedSymbols": {
						"Example": [
							54
						]
					},
					"id": 55,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 54,
							"linearizedBaseContracts": [
								54
							],
							"name": "Example",
							"nameLocation": "69:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "123:330:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 7,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 5,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "158:9:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 6,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "171:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "158:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 4,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "151:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "151:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 9,
												"nodeType": "ExpressionStatement",
												"src": "151:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "221:9:0",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "234:10:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"src": "221:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 10,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "214:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "214:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "214:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "296:7:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "307:10:0",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "60"
															},
															"src": "296:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 16,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "289:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "289:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "289:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "364:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3234",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "374:8:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "24"
															},
															"src": "364:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 22,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "357:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "357:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "427:7:0",
																"subdenomination": "weeks",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "37",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "438:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "7"
															},
															"src": "427:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 28,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "420:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "420:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "420:25:0"
											}
										]
									},
									"functionSelector": "9b92a9e8",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "TimeUnitExample",
									"nameLocation": "93:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "108:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "123:0:0"
									},
									"scope": 54,
									"src": "84:369:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "517:164:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 42,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "593:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "593:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 44,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "612:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 45,
																"name": "secondsAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "620:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "635:9:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "620:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "612:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "593:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "589:85:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "646:28:0",
													"statements": []
												}
											}
										]
									},
									"functionSelector": "19730b44",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validate",
									"nameLocation": "470:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "484:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "479:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "secondsAfter",
												"nameLocation": "496:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "491:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "491:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:31:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:0"
									},
									"scope": 54,
									"src": "461:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 55,
							"src": "60:624:0",
							"usedErrors": []
						}
					],
					"src": "33:651:0"
				},
				"id": 0
			}
		}
	}
}