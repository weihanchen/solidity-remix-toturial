{
	"id": "ab2783c4c04922e22678d02ca5b297ad",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ep4/example.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7.0;\r\n\r\ncontract Example {\r\n    function etherUnitExample() public pure {\r\n\r\n        uint n = 1;\r\n\r\n        assert(n == 1);\r\n\r\n        // wei是貨幣中的最小單位\r\n        require(1 wei == 1, \"1 wei is not equal to 1\");\r\n\r\n        // 1 gwei is equal to 10^9 wei\r\n        require(1 gwei == 1e9, \"1 gwei is not equal to 1e9\");\r\n\r\n        // 1 ether is equal to 10^18 wei\r\n        require(1 ether == 1e18, \"1 ether is not equal to 1e18\");\r\n    }\r\n\r\n    function timeUnitExample() public pure {\r\n        // 1秒\r\n        assert(1 seconds == 1);\r\n\r\n        // 1分鐘 = 60秒\r\n        assert(1 minutes == 60 seconds);\r\n\r\n        // 1小時 = 60分鐘\r\n        assert(1 hours == 60 minutes);\r\n\r\n        // 1天=24小時\r\n        assert(1 days == 24 hours);\r\n\r\n        // 1周 = 7天\r\n        assert(1 weeks == 7 days);\r\n    }\r\n\r\n    function validate(uint start, uint secondsAfter) public view returns(bool) {\r\n        bool isValidated = false;\r\n\r\n\t\t/// 區塊的時間戳記至少在3秒以前, 才算有效。\r\n        /// 注意: 此為範例，真實合約請不要使用block.timestamp來進行檢驗，具有弱點風險。\r\n        if (block.timestamp >= start + secondsAfter * 3 seconds) {\r\n            isValidated = true;\r\n        }\r\n        \r\n        return isValidated;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Ep4/example.sol": {
				"Example": {
					"abi": [
						{
							"inputs": [],
							"name": "etherUnitExample",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeUnitExample",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "secondsAfter",
									"type": "uint256"
								}
							],
							"name": "validate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ep4/example.sol\":62:1344  contract Example {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ep4/example.sol\":62:1344  contract Example {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x19730b44\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x24475f4c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97e82183\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ep4/example.sol\":887:1341  function validate(uint start, uint secondsAfter) public view returns(bool) {\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ep4/example.sol\":510:879  function timeUnitExample() public pure {\r... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Ep4/example.sol\":86:502  function etherUnitExample() public pure {\r... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"Ep4/example.sol\":887:1341  function validate(uint start, uint secondsAfter) public view returns(bool) {\r... */\n    tag_9:\n        /* \"Ep4/example.sol\":956:960  bool */\n      0x00\n        /* \"Ep4/example.sol\":973:989  bool isValidated */\n      dup1\n        /* \"Ep4/example.sol\":992:997  false */\n      0x00\n        /* \"Ep4/example.sol\":973:997  bool isValidated = false */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":1239:1248  3 seconds */\n      0x03\n        /* \"Ep4/example.sol\":1224:1236  secondsAfter */\n      dup4\n        /* \"Ep4/example.sol\":1224:1248  secondsAfter * 3 seconds */\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"Ep4/example.sol\":1216:1221  start */\n      dup5\n        /* \"Ep4/example.sol\":1216:1248  start + secondsAfter * 3 seconds */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"Ep4/example.sol\":1197:1212  block.timestamp */\n      timestamp\n        /* \"Ep4/example.sol\":1197:1248  block.timestamp >= start + secondsAfter * 3 seconds */\n      lt\n        /* \"Ep4/example.sol\":1193:1295  if (block.timestamp >= start + secondsAfter * 3 seconds) {\r... */\n      tag_21\n      jumpi\n        /* \"Ep4/example.sol\":1279:1283  true */\n      0x01\n        /* \"Ep4/example.sol\":1265:1283  isValidated = true */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":1193:1295  if (block.timestamp >= start + secondsAfter * 3 seconds) {\r... */\n    tag_21:\n        /* \"Ep4/example.sol\":1322:1333  isValidated */\n      dup1\n        /* \"Ep4/example.sol\":1315:1333  return isValidated */\n      swap2\n      pop\n      pop\n        /* \"Ep4/example.sol\":887:1341  function validate(uint start, uint secondsAfter) public view returns(bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ep4/example.sol\":510:879  function timeUnitExample() public pure {\r... */\n    tag_13:\n        /* \"Ep4/example.sol\":597:598  1 */\n      0x01\n        /* \"Ep4/example.sol\":584:593  1 seconds */\n      dup1\n        /* \"Ep4/example.sol\":584:598  1 seconds == 1 */\n      eq\n        /* \"Ep4/example.sol\":577:599  assert(1 seconds == 1) */\n      tag_23\n      jumpi\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n    tag_23:\n        /* \"Ep4/example.sol\":660:670  60 seconds */\n      0x3c\n        /* \"Ep4/example.sol\":647:656  1 minutes */\n      dup1\n        /* \"Ep4/example.sol\":647:670  1 minutes == 60 seconds */\n      eq\n        /* \"Ep4/example.sol\":640:671  assert(1 minutes == 60 seconds) */\n      tag_26\n      jumpi\n      tag_27\n      tag_25\n      jump\t// in\n    tag_27:\n    tag_26:\n        /* \"Ep4/example.sol\":733:743  60 minutes */\n      0x0e10\n        /* \"Ep4/example.sol\":722:729  1 hours */\n      dup1\n        /* \"Ep4/example.sol\":722:743  1 hours == 60 minutes */\n      eq\n        /* \"Ep4/example.sol\":715:744  assert(1 hours == 60 minutes) */\n      tag_28\n      jumpi\n      tag_29\n      tag_25\n      jump\t// in\n    tag_29:\n    tag_28:\n        /* \"Ep4/example.sol\":800:808  24 hours */\n      0x015180\n        /* \"Ep4/example.sol\":790:796  1 days */\n      dup1\n        /* \"Ep4/example.sol\":790:808  1 days == 24 hours */\n      eq\n        /* \"Ep4/example.sol\":783:809  assert(1 days == 24 hours) */\n      tag_30\n      jumpi\n      tag_31\n      tag_25\n      jump\t// in\n    tag_31:\n    tag_30:\n        /* \"Ep4/example.sol\":864:870  7 days */\n      0x093a80\n        /* \"Ep4/example.sol\":853:860  1 weeks */\n      dup1\n        /* \"Ep4/example.sol\":853:870  1 weeks == 7 days */\n      eq\n        /* \"Ep4/example.sol\":846:871  assert(1 weeks == 7 days) */\n      tag_32\n      jumpi\n      tag_33\n      tag_25\n      jump\t// in\n    tag_33:\n    tag_32:\n        /* \"Ep4/example.sol\":510:879  function timeUnitExample() public pure {\r... */\n      jump\t// out\n        /* \"Ep4/example.sol\":86:502  function etherUnitExample() public pure {\r... */\n    tag_15:\n        /* \"Ep4/example.sol\":139:145  uint n */\n      0x00\n        /* \"Ep4/example.sol\":148:149  1 */\n      0x01\n        /* \"Ep4/example.sol\":139:149  uint n = 1 */\n      swap1\n      pop\n        /* \"Ep4/example.sol\":174:175  1 */\n      0x01\n        /* \"Ep4/example.sol\":169:170  n */\n      dup2\n        /* \"Ep4/example.sol\":169:175  n == 1 */\n      eq\n        /* \"Ep4/example.sol\":162:176  assert(n == 1) */\n      tag_35\n      jumpi\n      tag_36\n      tag_25\n      jump\t// in\n    tag_36:\n    tag_35:\n        /* \"Ep4/example.sol\":249:250  1 */\n      0x01\n        /* \"Ep4/example.sol\":240:245  1 wei */\n      dup1\n        /* \"Ep4/example.sol\":240:250  1 wei == 1 */\n      eq\n        /* \"Ep4/example.sol\":232:278  require(1 wei == 1, \"1 wei is not equal to 1\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"Ep4/example.sol\":349:352  1e9 */\n      0x3b9aca00\n        /* \"Ep4/example.sol\":339:345  1 gwei */\n      dup1\n        /* \"Ep4/example.sol\":339:352  1 gwei == 1e9 */\n      eq\n        /* \"Ep4/example.sol\":331:383  require(1 gwei == 1e9, \"1 gwei is not equal to 1e9\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"Ep4/example.sol\":457:461  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Ep4/example.sol\":446:453  1 ether */\n      dup1\n        /* \"Ep4/example.sol\":446:461  1 ether == 1e18 */\n      eq\n        /* \"Ep4/example.sol\":438:494  require(1 ether == 1e18, \"1 ether is not equal to 1e18\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"Ep4/example.sol\":126:502  {\r... */\n      pop\n        /* \"Ep4/example.sol\":86:502  function etherUnitExample() public pure {\r... */\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_47:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_49\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:626   */\n    tag_8:\n        /* \"#utility.yul\":220:226   */\n      0x00\n        /* \"#utility.yul\":228:234   */\n      dup1\n        /* \"#utility.yul\":277:279   */\n      0x40\n        /* \"#utility.yul\":265:274   */\n      dup4\n        /* \"#utility.yul\":256:263   */\n      dup6\n        /* \"#utility.yul\":252:275   */\n      sub\n        /* \"#utility.yul\":248:280   */\n      slt\n        /* \"#utility.yul\":245:364   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":283:362   */\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":245:364   */\n    tag_52:\n        /* \"#utility.yul\":403:404   */\n      0x00\n        /* \"#utility.yul\":428:481   */\n      tag_55\n        /* \"#utility.yul\":473:480   */\n      dup6\n        /* \"#utility.yul\":464:470   */\n      dup3\n        /* \"#utility.yul\":453:462   */\n      dup7\n        /* \"#utility.yul\":449:471   */\n      add\n        /* \"#utility.yul\":428:481   */\n      tag_47\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":418:481   */\n      swap3\n      pop\n        /* \"#utility.yul\":374:491   */\n      pop\n        /* \"#utility.yul\":530:532   */\n      0x20\n        /* \"#utility.yul\":556:609   */\n      tag_56\n        /* \"#utility.yul\":601:608   */\n      dup6\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup7\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_47\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":501:619   */\n      pop\n        /* \"#utility.yul\":152:626   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:741   */\n    tag_57:\n        /* \"#utility.yul\":713:734   */\n      tag_59\n        /* \"#utility.yul\":728:733   */\n      dup2\n        /* \"#utility.yul\":713:734   */\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":708:711   */\n      dup3\n        /* \"#utility.yul\":701:735   */\n      mstore\n        /* \"#utility.yul\":632:741   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":747:1113   */\n    tag_61:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":910:977   */\n      tag_63\n        /* \"#utility.yul\":974:976   */\n      0x1a\n        /* \"#utility.yul\":969:972   */\n      dup4\n        /* \"#utility.yul\":910:977   */\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":903:977   */\n      swap2\n      pop\n        /* \"#utility.yul\":986:1079   */\n      tag_65\n        /* \"#utility.yul\":1075:1078   */\n      dup3\n        /* \"#utility.yul\":986:1079   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1104:1106   */\n      0x20\n        /* \"#utility.yul\":1099:1102   */\n      dup3\n        /* \"#utility.yul\":1095:1107   */\n      add\n        /* \"#utility.yul\":1088:1107   */\n      swap1\n      pop\n        /* \"#utility.yul\":747:1113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1119:1485   */\n    tag_67:\n        /* \"#utility.yul\":1261:1264   */\n      0x00\n        /* \"#utility.yul\":1282:1349   */\n      tag_69\n        /* \"#utility.yul\":1346:1348   */\n      0x17\n        /* \"#utility.yul\":1341:1344   */\n      dup4\n        /* \"#utility.yul\":1282:1349   */\n      tag_64\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1275:1349   */\n      swap2\n      pop\n        /* \"#utility.yul\":1358:1451   */\n      tag_70\n        /* \"#utility.yul\":1447:1450   */\n      dup3\n        /* \"#utility.yul\":1358:1451   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1476:1478   */\n      0x20\n        /* \"#utility.yul\":1471:1474   */\n      dup3\n        /* \"#utility.yul\":1467:1479   */\n      add\n        /* \"#utility.yul\":1460:1479   */\n      swap1\n      pop\n        /* \"#utility.yul\":1119:1485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1491:1857   */\n    tag_72:\n        /* \"#utility.yul\":1633:1636   */\n      0x00\n        /* \"#utility.yul\":1654:1721   */\n      tag_74\n        /* \"#utility.yul\":1718:1720   */\n      0x1c\n        /* \"#utility.yul\":1713:1716   */\n      dup4\n        /* \"#utility.yul\":1654:1721   */\n      tag_64\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1647:1721   */\n      swap2\n      pop\n        /* \"#utility.yul\":1730:1823   */\n      tag_75\n        /* \"#utility.yul\":1819:1822   */\n      dup3\n        /* \"#utility.yul\":1730:1823   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1848:1850   */\n      0x20\n        /* \"#utility.yul\":1843:1846   */\n      dup3\n        /* \"#utility.yul\":1839:1851   */\n      add\n        /* \"#utility.yul\":1832:1851   */\n      swap1\n      pop\n        /* \"#utility.yul\":1491:1857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1863:2073   */\n    tag_11:\n        /* \"#utility.yul\":1950:1954   */\n      0x00\n        /* \"#utility.yul\":1988:1990   */\n      0x20\n        /* \"#utility.yul\":1977:1986   */\n      dup3\n        /* \"#utility.yul\":1973:1991   */\n      add\n        /* \"#utility.yul\":1965:1991   */\n      swap1\n      pop\n        /* \"#utility.yul\":2001:2066   */\n      tag_78\n        /* \"#utility.yul\":2063:2064   */\n      0x00\n        /* \"#utility.yul\":2052:2061   */\n      dup4\n        /* \"#utility.yul\":2048:2065   */\n      add\n        /* \"#utility.yul\":2039:2045   */\n      dup5\n        /* \"#utility.yul\":2001:2066   */\n      tag_57\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1863:2073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2079:2498   */\n    tag_42:\n        /* \"#utility.yul\":2245:2249   */\n      0x00\n        /* \"#utility.yul\":2283:2285   */\n      0x20\n        /* \"#utility.yul\":2272:2281   */\n      dup3\n        /* \"#utility.yul\":2268:2286   */\n      add\n        /* \"#utility.yul\":2260:2286   */\n      swap1\n      pop\n        /* \"#utility.yul\":2332:2341   */\n      dup2\n        /* \"#utility.yul\":2326:2330   */\n      dup2\n        /* \"#utility.yul\":2322:2342   */\n      sub\n        /* \"#utility.yul\":2318:2319   */\n      0x00\n        /* \"#utility.yul\":2307:2316   */\n      dup4\n        /* \"#utility.yul\":2303:2320   */\n      add\n        /* \"#utility.yul\":2296:2343   */\n      mstore\n        /* \"#utility.yul\":2360:2491   */\n      tag_80\n        /* \"#utility.yul\":2486:2490   */\n      dup2\n        /* \"#utility.yul\":2360:2491   */\n      tag_61\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2352:2491   */\n      swap1\n      pop\n        /* \"#utility.yul\":2079:2498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2504:2923   */\n    tag_39:\n        /* \"#utility.yul\":2670:2674   */\n      0x00\n        /* \"#utility.yul\":2708:2710   */\n      0x20\n        /* \"#utility.yul\":2697:2706   */\n      dup3\n        /* \"#utility.yul\":2693:2711   */\n      add\n        /* \"#utility.yul\":2685:2711   */\n      swap1\n      pop\n        /* \"#utility.yul\":2757:2766   */\n      dup2\n        /* \"#utility.yul\":2751:2755   */\n      dup2\n        /* \"#utility.yul\":2747:2767   */\n      sub\n        /* \"#utility.yul\":2743:2744   */\n      0x00\n        /* \"#utility.yul\":2732:2741   */\n      dup4\n        /* \"#utility.yul\":2728:2745   */\n      add\n        /* \"#utility.yul\":2721:2768   */\n      mstore\n        /* \"#utility.yul\":2785:2916   */\n      tag_82\n        /* \"#utility.yul\":2911:2915   */\n      dup2\n        /* \"#utility.yul\":2785:2916   */\n      tag_67\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2777:2916   */\n      swap1\n      pop\n        /* \"#utility.yul\":2504:2923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2929:3348   */\n    tag_45:\n        /* \"#utility.yul\":3095:3099   */\n      0x00\n        /* \"#utility.yul\":3133:3135   */\n      0x20\n        /* \"#utility.yul\":3122:3131   */\n      dup3\n        /* \"#utility.yul\":3118:3136   */\n      add\n        /* \"#utility.yul\":3110:3136   */\n      swap1\n      pop\n        /* \"#utility.yul\":3182:3191   */\n      dup2\n        /* \"#utility.yul\":3176:3180   */\n      dup2\n        /* \"#utility.yul\":3172:3192   */\n      sub\n        /* \"#utility.yul\":3168:3169   */\n      0x00\n        /* \"#utility.yul\":3157:3166   */\n      dup4\n        /* \"#utility.yul\":3153:3170   */\n      add\n        /* \"#utility.yul\":3146:3193   */\n      mstore\n        /* \"#utility.yul\":3210:3341   */\n      tag_84\n        /* \"#utility.yul\":3336:3340   */\n      dup2\n        /* \"#utility.yul\":3210:3341   */\n      tag_72\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3202:3341   */\n      swap1\n      pop\n        /* \"#utility.yul\":2929:3348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3435:3604   */\n    tag_64:\n        /* \"#utility.yul\":3519:3530   */\n      0x00\n        /* \"#utility.yul\":3553:3559   */\n      dup3\n        /* \"#utility.yul\":3548:3551   */\n      dup3\n        /* \"#utility.yul\":3541:3560   */\n      mstore\n        /* \"#utility.yul\":3593:3597   */\n      0x20\n        /* \"#utility.yul\":3588:3591   */\n      dup3\n        /* \"#utility.yul\":3584:3598   */\n      add\n        /* \"#utility.yul\":3569:3598   */\n      swap1\n      pop\n        /* \"#utility.yul\":3435:3604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3610:3915   */\n    tag_20:\n        /* \"#utility.yul\":3650:3653   */\n      0x00\n        /* \"#utility.yul\":3669:3689   */\n      tag_89\n        /* \"#utility.yul\":3687:3688   */\n      dup3\n        /* \"#utility.yul\":3669:3689   */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3664:3689   */\n      swap2\n      pop\n        /* \"#utility.yul\":3703:3723   */\n      tag_91\n        /* \"#utility.yul\":3721:3722   */\n      dup4\n        /* \"#utility.yul\":3703:3723   */\n      tag_90\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3698:3723   */\n      swap3\n      pop\n        /* \"#utility.yul\":3857:3858   */\n      dup3\n        /* \"#utility.yul\":3789:3855   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3785:3859   */\n      sub\n        /* \"#utility.yul\":3782:3783   */\n      dup3\n        /* \"#utility.yul\":3779:3860   */\n      gt\n        /* \"#utility.yul\":3776:3883   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":3863:3881   */\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3776:3883   */\n    tag_92:\n        /* \"#utility.yul\":3907:3908   */\n      dup3\n        /* \"#utility.yul\":3904:3905   */\n      dup3\n        /* \"#utility.yul\":3900:3909   */\n      add\n        /* \"#utility.yul\":3893:3909   */\n      swap1\n      pop\n        /* \"#utility.yul\":3610:3915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:4269   */\n    tag_18:\n        /* \"#utility.yul\":3961:3968   */\n      0x00\n        /* \"#utility.yul\":3984:4004   */\n      tag_96\n        /* \"#utility.yul\":4002:4003   */\n      dup3\n        /* \"#utility.yul\":3984:4004   */\n      tag_90\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3979:4004   */\n      swap2\n      pop\n        /* \"#utility.yul\":4018:4038   */\n      tag_97\n        /* \"#utility.yul\":4036:4037   */\n      dup4\n        /* \"#utility.yul\":4018:4038   */\n      tag_90\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":4013:4038   */\n      swap3\n      pop\n        /* \"#utility.yul\":4206:4207   */\n      dup2\n        /* \"#utility.yul\":4138:4204   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4134:4208   */\n      div\n        /* \"#utility.yul\":4131:4132   */\n      dup4\n        /* \"#utility.yul\":4128:4209   */\n      gt\n        /* \"#utility.yul\":4123:4124   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      iszero\n        /* \"#utility.yul\":4109:4126   */\n      iszero\n        /* \"#utility.yul\":4105:4210   */\n      and\n        /* \"#utility.yul\":4102:4233   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":4213:4231   */\n      tag_99\n      tag_94\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":4102:4233   */\n    tag_98:\n        /* \"#utility.yul\":4261:4262   */\n      dup3\n        /* \"#utility.yul\":4258:4259   */\n      dup3\n        /* \"#utility.yul\":4254:4263   */\n      mul\n        /* \"#utility.yul\":4243:4263   */\n      swap1\n      pop\n        /* \"#utility.yul\":3921:4269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4275:4365   */\n    tag_60:\n        /* \"#utility.yul\":4309:4316   */\n      0x00\n        /* \"#utility.yul\":4352:4357   */\n      dup2\n        /* \"#utility.yul\":4345:4358   */\n      iszero\n        /* \"#utility.yul\":4338:4359   */\n      iszero\n        /* \"#utility.yul\":4327:4359   */\n      swap1\n      pop\n        /* \"#utility.yul\":4275:4365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4371:4448   */\n    tag_90:\n        /* \"#utility.yul\":4408:4415   */\n      0x00\n        /* \"#utility.yul\":4437:4442   */\n      dup2\n        /* \"#utility.yul\":4426:4442   */\n      swap1\n      pop\n        /* \"#utility.yul\":4371:4448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4454:4634   */\n    tag_25:\n        /* \"#utility.yul\":4502:4579   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4499:4500   */\n      0x00\n        /* \"#utility.yul\":4492:4580   */\n      mstore\n        /* \"#utility.yul\":4599:4603   */\n      0x01\n        /* \"#utility.yul\":4596:4597   */\n      0x04\n        /* \"#utility.yul\":4589:4604   */\n      mstore\n        /* \"#utility.yul\":4623:4627   */\n      0x24\n        /* \"#utility.yul\":4620:4621   */\n      0x00\n        /* \"#utility.yul\":4613:4628   */\n      revert\n        /* \"#utility.yul\":4640:4820   */\n    tag_94:\n        /* \"#utility.yul\":4688:4765   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4685:4686   */\n      0x00\n        /* \"#utility.yul\":4678:4766   */\n      mstore\n        /* \"#utility.yul\":4785:4789   */\n      0x11\n        /* \"#utility.yul\":4782:4783   */\n      0x04\n        /* \"#utility.yul\":4775:4790   */\n      mstore\n        /* \"#utility.yul\":4809:4813   */\n      0x24\n        /* \"#utility.yul\":4806:4807   */\n      0x00\n        /* \"#utility.yul\":4799:4814   */\n      revert\n        /* \"#utility.yul\":4949:5066   */\n    tag_54:\n        /* \"#utility.yul\":5058:5059   */\n      0x00\n        /* \"#utility.yul\":5055:5056   */\n      dup1\n        /* \"#utility.yul\":5048:5060   */\n      revert\n        /* \"#utility.yul\":5072:5248   */\n    tag_66:\n        /* \"#utility.yul\":5212:5240   */\n      0x312067776569206973206e6f7420657175616c20746f20316539000000000000\n        /* \"#utility.yul\":5208:5209   */\n      0x00\n        /* \"#utility.yul\":5200:5206   */\n      dup3\n        /* \"#utility.yul\":5196:5210   */\n      add\n        /* \"#utility.yul\":5189:5241   */\n      mstore\n        /* \"#utility.yul\":5072:5248   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5254:5427   */\n    tag_71:\n        /* \"#utility.yul\":5394:5419   */\n      0x3120776569206973206e6f7420657175616c20746f2031000000000000000000\n        /* \"#utility.yul\":5390:5391   */\n      0x00\n        /* \"#utility.yul\":5382:5388   */\n      dup3\n        /* \"#utility.yul\":5378:5392   */\n      add\n        /* \"#utility.yul\":5371:5420   */\n      mstore\n        /* \"#utility.yul\":5254:5427   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5611   */\n    tag_76:\n        /* \"#utility.yul\":5573:5603   */\n      0x31206574686572206973206e6f7420657175616c20746f203165313800000000\n        /* \"#utility.yul\":5569:5570   */\n      0x00\n        /* \"#utility.yul\":5561:5567   */\n      dup3\n        /* \"#utility.yul\":5557:5571   */\n      add\n        /* \"#utility.yul\":5550:5604   */\n      mstore\n        /* \"#utility.yul\":5433:5611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5617:5739   */\n    tag_50:\n        /* \"#utility.yul\":5690:5714   */\n      tag_111\n        /* \"#utility.yul\":5708:5713   */\n      dup2\n        /* \"#utility.yul\":5690:5714   */\n      tag_90\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":5683:5688   */\n      dup2\n        /* \"#utility.yul\":5680:5715   */\n      eq\n        /* \"#utility.yul\":5670:5733   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":5729:5730   */\n      0x00\n        /* \"#utility.yul\":5726:5727   */\n      dup1\n        /* \"#utility.yul\":5719:5731   */\n      revert\n        /* \"#utility.yul\":5670:5733   */\n    tag_112:\n        /* \"#utility.yul\":5617:5739   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c9f5af7e97951b989664dea1d6608560830d82d94386d16d5a113bcadf9e46aa64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610551806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806319730b441461004657806324475f4c1461007657806397e8218314610080575b600080fd5b610060600480360381019061005b919061021c565b61008a565b60405161006d91906102d4565b60405180910390f35b61007e6100be565b005b61008861011a565b005b6000806000905060038361009e91906103b6565b846100a99190610360565b42106100b457600190505b8091505092915050565b600180146100cf576100ce610426565b5b603c80146100e0576100df610426565b5b610e1080146100f2576100f1610426565b5b62015180801461010557610104610426565b5b62093a80801461011857610117610426565b5b565b6000600190506001811461013157610130610426565b5b60018014610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b9061030f565b60405180910390fd5b633b9aca0080146101ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b1906102ef565b60405180910390fd5b670de0b6b3a76400008014610204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fb9061032f565b60405180910390fd5b50565b60008135905061021681610504565b92915050565b6000806040838503121561023357610232610484565b5b600061024185828601610207565b925050602061025285828601610207565b9150509250929050565b61026581610410565b82525050565b6000610278601a8361034f565b915061028382610489565b602082019050919050565b600061029b60178361034f565b91506102a6826104b2565b602082019050919050565b60006102be601c8361034f565b91506102c9826104db565b602082019050919050565b60006020820190506102e9600083018461025c565b92915050565b600060208201905081810360008301526103088161026b565b9050919050565b600060208201905081810360008301526103288161028e565b9050919050565b60006020820190508181036000830152610348816102b1565b9050919050565b600082825260208201905092915050565b600061036b8261041c565b91506103768361041c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103ab576103aa610455565b5b828201905092915050565b60006103c18261041c565b91506103cc8361041c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561040557610404610455565b5b828202905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f312067776569206973206e6f7420657175616c20746f20316539000000000000600082015250565b7f3120776569206973206e6f7420657175616c20746f2031000000000000000000600082015250565b7f31206574686572206973206e6f7420657175616c20746f203165313800000000600082015250565b61050d8161041c565b811461051857600080fd5b5056fea2646970667358221220c9f5af7e97951b989664dea1d6608560830d82d94386d16d5a113bcadf9e46aa64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x551 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19730B44 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x24475F4C EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x97E82183 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x21C JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x11A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x3 DUP4 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST DUP5 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x360 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xB4 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0xCF JUMPI PUSH2 0xCE PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH1 0x3C DUP1 EQ PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH2 0xE10 DUP1 EQ PUSH2 0xF2 JUMPI PUSH2 0xF1 PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH3 0x15180 DUP1 EQ PUSH2 0x105 JUMPI PUSH2 0x104 PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH3 0x93A80 DUP1 EQ PUSH2 0x118 JUMPI PUSH2 0x117 PUSH2 0x426 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x131 JUMPI PUSH2 0x130 PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x3B9ACA00 DUP1 EQ PUSH2 0x1BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1 SWAP1 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 EQ PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB SWAP1 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216 DUP2 PUSH2 0x504 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x233 JUMPI PUSH2 0x232 PUSH2 0x484 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x241 DUP6 DUP3 DUP7 ADD PUSH2 0x207 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x252 DUP6 DUP3 DUP7 ADD PUSH2 0x207 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x265 DUP2 PUSH2 0x410 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278 PUSH1 0x1A DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x283 DUP3 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B PUSH1 0x17 DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6 DUP3 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE PUSH1 0x1C DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x2C9 DUP3 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x308 DUP2 PUSH2 0x26B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x328 DUP2 PUSH2 0x28E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x348 DUP2 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B DUP3 PUSH2 0x41C JUMP JUMPDEST SWAP2 POP PUSH2 0x376 DUP4 PUSH2 0x41C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x3AA PUSH2 0x455 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP3 PUSH2 0x41C JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC DUP4 PUSH2 0x41C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x405 JUMPI PUSH2 0x404 PUSH2 0x455 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x312067776569206973206E6F7420657175616C20746F20316539000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3120776569206973206E6F7420657175616C20746F2031000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x31206574686572206973206E6F7420657175616C20746F203165313800000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x41C JUMP JUMPDEST DUP2 EQ PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CREATE2 0xAF PUSH31 0x97951B989664DEA1D6608560830D82D94386D16D5A113BCADF9E46AA64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "62:1282:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@etherUnitExample_36": {
									"entryPoint": 282,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@timeUnitExample_70": {
									"entryPoint": 190,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@validate_100": {
									"entryPoint": 138,
									"id": 100,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5742:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "235:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "281:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "283:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "283:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "283:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "256:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "265:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "252:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "252:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "277:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:32:1"
															},
															"nodeType": "YulIf",
															"src": "245:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "374:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "389:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "403:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "393:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "418:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "453:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "464:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "449:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "449:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "473:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "428:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "418:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "501:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "516:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "530:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "520:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "197:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "208:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "220:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "228:6:1",
														"type": ""
													}
												],
												"src": "152:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "691:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "728:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "713:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "713:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "701:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "679:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "686:3:1",
														"type": ""
													}
												],
												"src": "632:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "893:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "903:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "969:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "974:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "910:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "903:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1075:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d",
																	"nodeType": "YulIdentifier",
																	"src": "986:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "986:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1088:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1099:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1104:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1095:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1095:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:1",
														"type": ""
													}
												],
												"src": "747:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1265:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1275:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1282:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1275:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1447:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b",
																	"nodeType": "YulIdentifier",
																	"src": "1358:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1358:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1460:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1471:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1253:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1261:3:1",
														"type": ""
													}
												],
												"src": "1119:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1637:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1647:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1713:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1718:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1654:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1654:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1819:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de",
																	"nodeType": "YulIdentifier",
																	"src": "1730:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1730:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1730:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1832:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1843:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1832:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1625:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1633:3:1",
														"type": ""
													}
												],
												"src": "1491:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1955:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1965:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1977:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1973:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1973:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1965:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2039:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2052:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2063:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2048:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2048:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2001:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2001:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1927:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1939:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1950:4:1",
														"type": ""
													}
												],
												"src": "1863:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2260:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2272:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2283:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2260:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2307:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2303:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2326:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2296:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2352:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2486:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2360:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2360:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2352:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2230:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2245:4:1",
														"type": ""
													}
												],
												"src": "2079:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2675:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2685:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2697:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2708:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2693:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2693:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2685:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2732:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2743:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2728:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2751:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2757:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2747:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2747:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2721:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2777:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2911:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2785:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2785:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2777:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2655:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2670:4:1",
														"type": ""
													}
												],
												"src": "2504:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3100:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3110:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3122:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3118:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3118:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3110:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3157:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3168:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3153:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3176:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3182:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3146:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3202:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3336:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3210:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3210:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3202:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3080:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3095:4:1",
														"type": ""
													}
												],
												"src": "2929:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3394:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3404:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3420:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3414:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3404:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3387:6:1",
														"type": ""
													}
												],
												"src": "3354:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3531:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3548:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3553:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3541:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3569:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3588:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3593:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3584:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3584:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3569:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3503:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3508:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3519:11:1",
														"type": ""
													}
												],
												"src": "3435:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3654:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3664:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3687:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3669:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3664:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3698:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3721:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3703:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3698:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3861:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3863:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3863:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3863:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3782:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3857:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3785:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3785:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3779:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3779:81:1"
															},
															"nodeType": "YulIf",
															"src": "3776:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3893:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3904:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3907:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3641:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3644:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3650:3:1",
														"type": ""
													}
												],
												"src": "3610:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3969:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3979:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4002:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3984:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3979:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4013:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4036:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4018:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4013:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4211:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4213:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4213:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4213:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4123:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4116:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4116:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4109:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4109:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4131:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4138:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4206:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4134:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4134:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4128:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4128:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:105:1"
															},
															"nodeType": "YulIf",
															"src": "4102:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4243:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4258:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4261:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4254:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4243:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3952:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3955:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3961:7:1",
														"type": ""
													}
												],
												"src": "3921:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4352:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4345:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4345:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4338:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4327:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4299:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4309:7:1",
														"type": ""
													}
												],
												"src": "4275:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4416:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4426:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4437:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4426:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4398:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4408:7:1",
														"type": ""
													}
												],
												"src": "4371:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4482:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4499:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4502:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4492:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4596:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4599:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4589:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4589:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4620:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4623:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4613:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "4454:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4668:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4685:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4688:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4678:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4678:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4782:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4775:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4806:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4809:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4799:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4799:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4640:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4915:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4932:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4935:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4925:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4826:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5038:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5055:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5058:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5048:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5048:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4949:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5178:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5200:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5208:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5196:14:1"
																	},
																	{
																		"hexValue": "312067776569206973206e6f7420657175616c20746f20316539",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5212:28:1",
																		"type": "",
																		"value": "1 gwei is not equal to 1e9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5189:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5189:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5170:6:1",
														"type": ""
													}
												],
												"src": "5072:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5360:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5382:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5390:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5378:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5378:14:1"
																	},
																	{
																		"hexValue": "3120776569206973206e6f7420657175616c20746f2031",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5394:25:1",
																		"type": "",
																		"value": "1 wei is not equal to 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5371:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5371:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5352:6:1",
														"type": ""
													}
												],
												"src": "5254:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5539:72:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5561:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5569:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:14:1"
																	},
																	{
																		"hexValue": "31206574686572206973206e6f7420657175616c20746f2031653138",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5573:30:1",
																		"type": "",
																		"value": "1 ether is not equal to 1e18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5550:54:1"
														}
													]
												},
												"name": "store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5531:6:1",
														"type": ""
													}
												],
												"src": "5433:178:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5660:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5717:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5726:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5729:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5719:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5719:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5719:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5683:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5708:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5690:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5690:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5680:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5680:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5673:43:1"
															},
															"nodeType": "YulIf",
															"src": "5670:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5653:5:1",
														"type": ""
													}
												],
												"src": "5617:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d(memPtr) {\n\n        mstore(add(memPtr, 0), \"1 gwei is not equal to 1e9\")\n\n    }\n\n    function store_literal_in_memory_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"1 wei is not equal to 1\")\n\n    }\n\n    function store_literal_in_memory_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de(memPtr) {\n\n        mstore(add(memPtr, 0), \"1 ether is not equal to 1e18\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806319730b441461004657806324475f4c1461007657806397e8218314610080575b600080fd5b610060600480360381019061005b919061021c565b61008a565b60405161006d91906102d4565b60405180910390f35b61007e6100be565b005b61008861011a565b005b6000806000905060038361009e91906103b6565b846100a99190610360565b42106100b457600190505b8091505092915050565b600180146100cf576100ce610426565b5b603c80146100e0576100df610426565b5b610e1080146100f2576100f1610426565b5b62015180801461010557610104610426565b5b62093a80801461011857610117610426565b5b565b6000600190506001811461013157610130610426565b5b60018014610174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016b9061030f565b60405180910390fd5b633b9aca0080146101ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b1906102ef565b60405180910390fd5b670de0b6b3a76400008014610204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fb9061032f565b60405180910390fd5b50565b60008135905061021681610504565b92915050565b6000806040838503121561023357610232610484565b5b600061024185828601610207565b925050602061025285828601610207565b9150509250929050565b61026581610410565b82525050565b6000610278601a8361034f565b915061028382610489565b602082019050919050565b600061029b60178361034f565b91506102a6826104b2565b602082019050919050565b60006102be601c8361034f565b91506102c9826104db565b602082019050919050565b60006020820190506102e9600083018461025c565b92915050565b600060208201905081810360008301526103088161026b565b9050919050565b600060208201905081810360008301526103288161028e565b9050919050565b60006020820190508181036000830152610348816102b1565b9050919050565b600082825260208201905092915050565b600061036b8261041c565b91506103768361041c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103ab576103aa610455565b5b828201905092915050565b60006103c18261041c565b91506103cc8361041c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561040557610404610455565b5b828202905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f312067776569206973206e6f7420657175616c20746f20316539000000000000600082015250565b7f3120776569206973206e6f7420657175616c20746f2031000000000000000000600082015250565b7f31206574686572206973206e6f7420657175616c20746f203165313800000000600082015250565b61050d8161041c565b811461051857600080fd5b5056fea2646970667358221220c9f5af7e97951b989664dea1d6608560830d82d94386d16d5a113bcadf9e46aa64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19730B44 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x24475F4C EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x97E82183 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x21C JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88 PUSH2 0x11A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x3 DUP4 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST DUP5 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x360 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xB4 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0xCF JUMPI PUSH2 0xCE PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH1 0x3C DUP1 EQ PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH2 0xE10 DUP1 EQ PUSH2 0xF2 JUMPI PUSH2 0xF1 PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH3 0x15180 DUP1 EQ PUSH2 0x105 JUMPI PUSH2 0x104 PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH3 0x93A80 DUP1 EQ PUSH2 0x118 JUMPI PUSH2 0x117 PUSH2 0x426 JUMP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x1 DUP2 EQ PUSH2 0x131 JUMPI PUSH2 0x130 PUSH2 0x426 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP1 EQ PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x3B9ACA00 DUP1 EQ PUSH2 0x1BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1 SWAP1 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 EQ PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB SWAP1 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216 DUP2 PUSH2 0x504 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x233 JUMPI PUSH2 0x232 PUSH2 0x484 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x241 DUP6 DUP3 DUP7 ADD PUSH2 0x207 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x252 DUP6 DUP3 DUP7 ADD PUSH2 0x207 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x265 DUP2 PUSH2 0x410 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278 PUSH1 0x1A DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x283 DUP3 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B PUSH1 0x17 DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6 DUP3 PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE PUSH1 0x1C DUP4 PUSH2 0x34F JUMP JUMPDEST SWAP2 POP PUSH2 0x2C9 DUP3 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x308 DUP2 PUSH2 0x26B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x328 DUP2 PUSH2 0x28E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x348 DUP2 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B DUP3 PUSH2 0x41C JUMP JUMPDEST SWAP2 POP PUSH2 0x376 DUP4 PUSH2 0x41C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3AB JUMPI PUSH2 0x3AA PUSH2 0x455 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP3 PUSH2 0x41C JUMP JUMPDEST SWAP2 POP PUSH2 0x3CC DUP4 PUSH2 0x41C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x405 JUMPI PUSH2 0x404 PUSH2 0x455 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x312067776569206973206E6F7420657175616C20746F20316539000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x3120776569206973206E6F7420657175616C20746F2031000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x31206574686572206973206E6F7420657175616C20746F203165313800000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x41C JUMP JUMPDEST DUP2 EQ PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 CREATE2 0xAF PUSH31 0x97951B989664DEA1D6608560830D82D94386D16D5A113BCADF9E46AA64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "62:1282:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;510:369;;;:::i;:::-;;86:416;;;:::i;:::-;;887:454;956:4;973:16;992:5;973:24;;1239:9;1224:12;:24;;;;:::i;:::-;1216:5;:32;;;;:::i;:::-;1197:15;:51;1193:102;;1279:4;1265:18;;1193:102;1322:11;1315:18;;;887:454;;;;:::o;510:369::-;597:1;584:9;:14;577:22;;;;:::i;:::-;;660:10;647:9;:23;640:31;;;;:::i;:::-;;733:10;722:7;:21;715:29;;;;:::i;:::-;;800:8;790:6;:18;783:26;;;;:::i;:::-;;864:6;853:7;:17;846:25;;;;:::i;:::-;;510:369::o;86:416::-;139:6;148:1;139:10;;174:1;169;:6;162:14;;;;:::i;:::-;;249:1;240:5;:10;232:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;349:3;339:6;:13;331:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;457:4;446:7;:15;438:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;126:376;86:416::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:474::-;220:6;228;277:2;265:9;256:7;252:23;248:32;245:119;;;283:79;;:::i;:::-;245:119;403:1;428:53;473:7;464:6;453:9;449:22;428:53;:::i;:::-;418:63;;374:117;530:2;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;501:118;152:474;;;;;:::o;632:109::-;713:21;728:5;713:21;:::i;:::-;708:3;701:34;632:109;;:::o;747:366::-;889:3;910:67;974:2;969:3;910:67;:::i;:::-;903:74;;986:93;1075:3;986:93;:::i;:::-;1104:2;1099:3;1095:12;1088:19;;747:366;;;:::o;1119:::-;1261:3;1282:67;1346:2;1341:3;1282:67;:::i;:::-;1275:74;;1358:93;1447:3;1358:93;:::i;:::-;1476:2;1471:3;1467:12;1460:19;;1119:366;;;:::o;1491:::-;1633:3;1654:67;1718:2;1713:3;1654:67;:::i;:::-;1647:74;;1730:93;1819:3;1730:93;:::i;:::-;1848:2;1843:3;1839:12;1832:19;;1491:366;;;:::o;1863:210::-;1950:4;1988:2;1977:9;1973:18;1965:26;;2001:65;2063:1;2052:9;2048:17;2039:6;2001:65;:::i;:::-;1863:210;;;;:::o;2079:419::-;2245:4;2283:2;2272:9;2268:18;2260:26;;2332:9;2326:4;2322:20;2318:1;2307:9;2303:17;2296:47;2360:131;2486:4;2360:131;:::i;:::-;2352:139;;2079:419;;;:::o;2504:::-;2670:4;2708:2;2697:9;2693:18;2685:26;;2757:9;2751:4;2747:20;2743:1;2732:9;2728:17;2721:47;2785:131;2911:4;2785:131;:::i;:::-;2777:139;;2504:419;;;:::o;2929:::-;3095:4;3133:2;3122:9;3118:18;3110:26;;3182:9;3176:4;3172:20;3168:1;3157:9;3153:17;3146:47;3210:131;3336:4;3210:131;:::i;:::-;3202:139;;2929:419;;;:::o;3435:169::-;3519:11;3553:6;3548:3;3541:19;3593:4;3588:3;3584:14;3569:29;;3435:169;;;;:::o;3610:305::-;3650:3;3669:20;3687:1;3669:20;:::i;:::-;3664:25;;3703:20;3721:1;3703:20;:::i;:::-;3698:25;;3857:1;3789:66;3785:74;3782:1;3779:81;3776:107;;;3863:18;;:::i;:::-;3776:107;3907:1;3904;3900:9;3893:16;;3610:305;;;;:::o;3921:348::-;3961:7;3984:20;4002:1;3984:20;:::i;:::-;3979:25;;4018:20;4036:1;4018:20;:::i;:::-;4013:25;;4206:1;4138:66;4134:74;4131:1;4128:81;4123:1;4116:9;4109:17;4105:105;4102:131;;;4213:18;;:::i;:::-;4102:131;4261:1;4258;4254:9;4243:20;;3921:348;;;;:::o;4275:90::-;4309:7;4352:5;4345:13;4338:21;4327:32;;4275:90;;;:::o;4371:77::-;4408:7;4437:5;4426:16;;4371:77;;;:::o;4454:180::-;4502:77;4499:1;4492:88;4599:4;4596:1;4589:15;4623:4;4620:1;4613:15;4640:180;4688:77;4685:1;4678:88;4785:4;4782:1;4775:15;4809:4;4806:1;4799:15;4949:117;5058:1;5055;5048:12;5072:176;5212:28;5208:1;5200:6;5196:14;5189:52;5072:176;:::o;5254:173::-;5394:25;5390:1;5382:6;5378:14;5371:49;5254:173;:::o;5433:178::-;5573:30;5569:1;5561:6;5557:14;5550:54;5433:178;:::o;5617:122::-;5690:24;5708:5;5690:24;:::i;:::-;5683:5;5680:35;5670:63;;5729:1;5726;5719:12;5670:63;5617:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "272200",
								"executionCost": "312",
								"totalCost": "272512"
							},
							"external": {
								"etherUnitExample()": "271",
								"timeUnitExample()": "259",
								"validate(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 1344,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1344,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9f5af7e97951b989664dea1d6608560830d82d94386d16d5a113bcadf9e46aa64736f6c63430008070033",
									".code": [
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "19730B44"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "24475F4C"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "97E82183"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62,
											"end": 1344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 510,
											"end": 879,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 510,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 510,
											"end": 879,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 879,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 510,
											"end": 879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 879,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 86,
											"end": 502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 86,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 86,
											"end": 502,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 956,
											"end": 960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1224,
											"end": 1236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1221,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1212,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1248,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1193,
											"end": 1295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1295,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1193,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1322,
											"end": 1333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1341,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 510,
											"end": 879,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 510,
											"end": 879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 577,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 577,
											"end": 599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 577,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 577,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 577,
											"end": 599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 577,
											"end": 599,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 577,
											"end": 599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 599,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 577,
											"end": 599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 660,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 647,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 640,
											"end": 671,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 733,
											"end": 743,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 722,
											"end": 729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 722,
											"end": 743,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 744,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 715,
											"end": 744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 800,
											"end": 808,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 790,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 790,
											"end": 808,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 783,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 783,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 870,
											"name": "PUSH",
											"source": 0,
											"value": "93A80"
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 870,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 846,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 846,
											"end": 871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 846,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 846,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 846,
											"end": 871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 846,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 846,
											"end": 871,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 846,
											"end": 871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 879,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 86,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 86,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 139,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 169,
											"end": 175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 162,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 162,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 162,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 162,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 162,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 162,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 162,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 249,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 240,
											"end": 250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 232,
											"end": 278,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 232,
											"end": 278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 349,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 352,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 446,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 461,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 438,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 438,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 86,
											"end": 502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 277,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 256,
											"end": 263,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 252,
											"end": 275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 248,
											"end": 280,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 245,
											"end": 364,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 403,
											"end": 404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 473,
											"end": 480,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 464,
											"end": 470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 453,
											"end": 462,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 449,
											"end": 471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 418,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 418,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 741,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 632,
											"end": 741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 713,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 728,
											"end": 733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 713,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 701,
											"end": 735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 632,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 741,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 969,
											"end": 972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 910,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 910,
											"end": 977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 903,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 986,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1106,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1113,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1346,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1282,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1447,
											"end": 1450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1358,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1471,
											"end": 1474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1485,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1718,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1654,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1819,
											"end": 1822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1730,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 2073,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1863,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 1991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 1991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2001,
											"end": 2066,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2066,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2001,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2073,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2073,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2079,
											"end": 2498,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2079,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2281,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2342,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2486,
											"end": 2490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2360,
											"end": 2491,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2360,
											"end": 2491,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2360,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2498,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2504,
											"end": 2923,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2504,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2911,
											"end": 2915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2785,
											"end": 2916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2785,
											"end": 2916,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2785,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2923,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2923,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2929,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2929,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3122,
											"end": 3131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3192,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3336,
											"end": 3340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3210,
											"end": 3341,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3210,
											"end": 3341,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3210,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3348,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3435,
											"end": 3604,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3435,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3604,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3610,
											"end": 3915,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3687,
											"end": 3688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3669,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3721,
											"end": 3722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3703,
											"end": 3723,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3703,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3703,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3723,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3785,
											"end": 3859,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3860,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3915,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3921,
											"end": 4269,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3921,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3984,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4036,
											"end": 4037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4018,
											"end": 4038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4018,
											"end": 4038,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4018,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4038,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4134,
											"end": 4208,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4132,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4209,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4126,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4102,
											"end": 4233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4233,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4102,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4263,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 4269,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 4269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 4269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 4269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 4269,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4275,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4275,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4352,
											"end": 4357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4358,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4359,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4365,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4371,
											"end": 4448,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4371,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4448,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4454,
											"end": 4634,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4454,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4596,
											"end": 4597,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4589,
											"end": 4604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4627,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4620,
											"end": 4621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4628,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4820,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4640,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4765,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4685,
											"end": 4686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4789,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4782,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4775,
											"end": 4790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4806,
											"end": 4807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4799,
											"end": 4814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 5066,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4949,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5048,
											"end": 5060,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5248,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5072,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5240,
											"name": "PUSH",
											"source": 1,
											"value": "312067776569206973206E6F7420657175616C20746F20316539000000000000"
										},
										{
											"begin": 5208,
											"end": 5209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5200,
											"end": 5206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5248,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5254,
											"end": 5427,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5254,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5419,
											"name": "PUSH",
											"source": 1,
											"value": "3120776569206973206E6F7420657175616C20746F2031000000000000000000"
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5427,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5433,
											"end": 5611,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5433,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5603,
											"name": "PUSH",
											"source": 1,
											"value": "31206574686572206973206E6F7420657175616C20746F203165313800000000"
										},
										{
											"begin": 5569,
											"end": 5570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5617,
											"end": 5739,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5617,
											"end": 5739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5708,
											"end": 5713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5690,
											"end": 5714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5714,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5690,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5683,
											"end": 5688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5715,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5670,
											"end": 5733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5731,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5733,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5670,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5739,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"etherUnitExample()": "97e82183",
							"timeUnitExample()": "24475f4c",
							"validate(uint256,uint256)": "19730b44"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"etherUnitExample\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeUnitExample\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondsAfter\",\"type\":\"uint256\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ep4/example.sol\":\"Example\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ep4/example.sol\":{\"keccak256\":\"0xc89d11f0e6c3d43d5d51e259754e82bbedfee7a2bff3ff484e40e8ea161aad4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c272f1b8235eb09c8d64d3e89faa1b97fce3482cc2b801a85aae0a5827e7d9b\",\"dweb:/ipfs/QmSNNd3nH4CQMTobJHRegEoDgDbNwK3K7aunVfwABKGn6D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Ep4/example.sol": {
				"ast": {
					"absolutePath": "Ep4/example.sol",
					"exportedSymbols": {
						"Example": [
							101
						]
					},
					"id": 102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 101,
							"linearizedBaseContracts": [
								101
							],
							"name": "Example",
							"nameLocation": "71:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "126:376:0",
										"statements": [
											{
												"assignments": [
													5
												],
												"declarations": [
													{
														"constant": false,
														"id": 5,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "144:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 35,
														"src": "139:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "139:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 7,
												"initialValue": {
													"hexValue": "31",
													"id": 6,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "148:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "139:10:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 9,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "169:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "174:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "169:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 8,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "162:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "162:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "162:14:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "240:5:0",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "249:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "240:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "3120776569206973206e6f7420657175616c20746f2031",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "252:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b",
																"typeString": "literal_string \"1 wei is not equal to 1\""
															},
															"value": "1 wei is not equal to 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b1788296b497483615e006caff88fb1cfe1b6651ae0ecaad031bcfad0a4e7d0b",
																"typeString": "literal_string \"1 wei is not equal to 1\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "232:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "232:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "339:6:0",
																"subdenomination": "gwei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "316539",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "349:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1e9"
															},
															"src": "339:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "312067776569206973206e6f7420657175616c20746f20316539",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "354:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d",
																"typeString": "literal_string \"1 gwei is not equal to 1e9\""
															},
															"value": "1 gwei is not equal to 1e9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1cfa122e296cbeca26ee14680c5dac322826318519cd9ad8faeffaf74fd06e2d",
																"typeString": "literal_string \"1 gwei is not equal to 1e9\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "331:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "331:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "446:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "457:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "446:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "31206574686572206973206e6f7420657175616c20746f2031653138",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "463:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de",
																"typeString": "literal_string \"1 ether is not equal to 1e18\""
															},
															"value": "1 ether is not equal to 1e18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da3ca76295935d723bf4ce5965da7a4bf9ddf0b3f5458818fce4573bee45a8de",
																"typeString": "literal_string \"1 ether is not equal to 1e18\""
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "438:56:0"
											}
										]
									},
									"functionSelector": "97e82183",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "etherUnitExample",
									"nameLocation": "95:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:0"
									},
									"scope": 101,
									"src": "86:416:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "549:330:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "584:9:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "597:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "584:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 39,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "577:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "577:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "647:9:0",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "660:10:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"src": "647:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 45,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "640:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "640:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "640:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "722:7:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "733:10:0",
																"subdenomination": "minutes",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "60"
															},
															"src": "722:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 51,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "715:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "715:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "790:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3234",
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "800:8:0",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "24"
															},
															"src": "790:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 57,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "783:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "783:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "783:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "853:7:0",
																"subdenomination": "weeks",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "37",
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "864:6:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "7"
															},
															"src": "853:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 63,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "846:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "846:25:0"
											}
										]
									},
									"functionSelector": "24475f4c",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timeUnitExample",
									"nameLocation": "519:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "534:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:0:0"
									},
									"scope": 101,
									"src": "510:369:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "962:379:0",
										"statements": [
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"mutability": "mutable",
														"name": "isValidated",
														"nameLocation": "978:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 99,
														"src": "973:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 79,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "992:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "973:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 83,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1197:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1197:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 85,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1216:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 86,
																"name": "secondsAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1224:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "33",
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1239:9:0",
																"subdenomination": "seconds",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "1224:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1216:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1197:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "區塊的時間戳記至少在3秒以前, 才算有效。\n 注意: 此為範例，真實合約請不要使用block.timestamp來進行檢驗，具有弱點風險。",
												"id": 96,
												"nodeType": "IfStatement",
												"src": "1193:102:0",
												"trueBody": {
													"id": 95,
													"nodeType": "Block",
													"src": "1250:45:0",
													"statements": [
														{
															"expression": {
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 91,
																	"name": "isValidated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "1265:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1279:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1265:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 94,
															"nodeType": "ExpressionStatement",
															"src": "1265:18:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 97,
													"name": "isValidated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "1322:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 78,
												"id": 98,
												"nodeType": "Return",
												"src": "1315:18:0"
											}
										]
									},
									"functionSelector": "19730b44",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validate",
									"nameLocation": "896:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "910:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "905:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "secondsAfter",
												"nameLocation": "922:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "917:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "917:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "904:31:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "956:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "956:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:6:0"
									},
									"scope": 101,
									"src": "887:454:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 102,
							"src": "62:1282:0",
							"usedErrors": []
						}
					],
					"src": "33:1311:0"
				},
				"id": 0
			}
		}
	}
}