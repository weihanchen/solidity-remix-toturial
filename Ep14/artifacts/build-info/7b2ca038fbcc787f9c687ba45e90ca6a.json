{
	"id": "7b2ca038fbcc787f9c687ba45e90ca6a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ep14/example.sol": {
				"content": "pragma solidity ^0.8.7.0;\r\n\r\ncontract Example {\r\n\r\n} "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Ep14/example.sol": {
				"Example": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ep14/example.sol\":29:52  contract Example {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ep14/example.sol\":29:52  contract Example {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e5ba95f0e1ae1e8c0548966d126e5a4236ad82055baadc18b094661ec832fe0f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e5ba95f0e1ae1e8c0548966d126e5a4236ad82055baadc18b094661ec832fe0f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xBA SWAP6 CREATE 0xE1 0xAE 0x1E DUP13 SDIV BASEFEE SWAP7 PUSH14 0x126E5A4236AD82055BAADC18B094 PUSH7 0x1EC832FE0F6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "29:23:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e5ba95f0e1ae1e8c0548966d126e5a4236ad82055baadc18b094661ec832fe0f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xBA SWAP6 CREATE 0xE1 0xAE 0x1E DUP13 SDIV BASEFEE SWAP7 PUSH14 0x126E5A4236AD82055BAADC18B094 PUSH7 0x1EC832FE0F6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "29:23:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29,
									"end": 52,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29,
									"end": 52,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 52,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29,
									"end": 52,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 52,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 52,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 52,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5ba95f0e1ae1e8c0548966d126e5a4236ad82055baadc18b094661ec832fe0f64736f6c63430008070033",
									".code": [
										{
											"begin": 29,
											"end": 52,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29,
											"end": 52,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29,
											"end": 52,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29,
											"end": 52,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 52,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29,
											"end": 52,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ep14/example.sol\":\"Example\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ep14/example.sol\":{\"keccak256\":\"0xd039247bd4946c625690d97c3ff4c0120b9b34b7c59b2ebb5e89c6e1327421e1\",\"urls\":[\"bzz-raw://394f31e3ebfa20f85a8962d45a86954ef3496e590d5852eead9af5ba9891571a\",\"dweb:/ipfs/QmcDdWYhTWPXuS6KaHJhruNTDar9pzt7Vworwy2XmrBWyA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Ep14/example.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Ep14/example.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Ep14/example.sol": {
				"ast": {
					"absolutePath": "Ep14/example.sol",
					"exportedSymbols": {
						"Example": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Example",
							"nameLocation": "38:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "29:23:0",
							"usedErrors": []
						}
					],
					"src": "0:53:0"
				},
				"id": 0
			}
		}
	}
}